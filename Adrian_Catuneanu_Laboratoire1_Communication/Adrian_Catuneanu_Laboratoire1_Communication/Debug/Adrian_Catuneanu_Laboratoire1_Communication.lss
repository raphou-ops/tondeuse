
Adrian_Catuneanu_Laboratoire1_Communication.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800200  00001a4e  00001ae2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a4e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000026a  0080021a  0080021a  00001afc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001afc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001b58  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000120  00000000  00000000  00001b98  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c7f  00000000  00000000  00001cb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001072  00000000  00000000  00003937  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d05  00000000  00000000  000049a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000030c  00000000  00000000  000056b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009d2  00000000  00000000  000059bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000dcf  00000000  00000000  0000638e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000188  00000000  00000000  0000715d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	fa c0       	rjmp	.+500    	; 0x1f6 <__ctors_end>
       2:	00 00       	nop
       4:	18 c1       	rjmp	.+560    	; 0x236 <__bad_interrupt>
       6:	00 00       	nop
       8:	16 c1       	rjmp	.+556    	; 0x236 <__bad_interrupt>
       a:	00 00       	nop
       c:	14 c1       	rjmp	.+552    	; 0x236 <__bad_interrupt>
       e:	00 00       	nop
      10:	12 c1       	rjmp	.+548    	; 0x236 <__bad_interrupt>
      12:	00 00       	nop
      14:	10 c1       	rjmp	.+544    	; 0x236 <__bad_interrupt>
      16:	00 00       	nop
      18:	0e c1       	rjmp	.+540    	; 0x236 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	0c c1       	rjmp	.+536    	; 0x236 <__bad_interrupt>
      1e:	00 00       	nop
      20:	0a c1       	rjmp	.+532    	; 0x236 <__bad_interrupt>
      22:	00 00       	nop
      24:	08 c1       	rjmp	.+528    	; 0x236 <__bad_interrupt>
      26:	00 00       	nop
      28:	06 c1       	rjmp	.+524    	; 0x236 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	04 c1       	rjmp	.+520    	; 0x236 <__bad_interrupt>
      2e:	00 00       	nop
      30:	02 c1       	rjmp	.+516    	; 0x236 <__bad_interrupt>
      32:	00 00       	nop
      34:	00 c1       	rjmp	.+512    	; 0x236 <__bad_interrupt>
      36:	00 00       	nop
      38:	fe c0       	rjmp	.+508    	; 0x236 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	fc c0       	rjmp	.+504    	; 0x236 <__bad_interrupt>
      3e:	00 00       	nop
      40:	fa c0       	rjmp	.+500    	; 0x236 <__bad_interrupt>
      42:	00 00       	nop
      44:	f8 c0       	rjmp	.+496    	; 0x236 <__bad_interrupt>
      46:	00 00       	nop
      48:	f6 c0       	rjmp	.+492    	; 0x236 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	f4 c0       	rjmp	.+488    	; 0x236 <__bad_interrupt>
      4e:	00 00       	nop
      50:	f2 c0       	rjmp	.+484    	; 0x236 <__bad_interrupt>
      52:	00 00       	nop
      54:	23 c3       	rjmp	.+1606   	; 0x69c <__vector_21>
      56:	00 00       	nop
      58:	ee c0       	rjmp	.+476    	; 0x236 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	ec c0       	rjmp	.+472    	; 0x236 <__bad_interrupt>
      5e:	00 00       	nop
      60:	ea c0       	rjmp	.+468    	; 0x236 <__bad_interrupt>
      62:	00 00       	nop
      64:	e8 c0       	rjmp	.+464    	; 0x236 <__bad_interrupt>
      66:	00 00       	nop
      68:	e6 c0       	rjmp	.+460    	; 0x236 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	e4 c0       	rjmp	.+456    	; 0x236 <__bad_interrupt>
      6e:	00 00       	nop
      70:	e2 c0       	rjmp	.+452    	; 0x236 <__bad_interrupt>
      72:	00 00       	nop
      74:	e0 c0       	rjmp	.+448    	; 0x236 <__bad_interrupt>
      76:	00 00       	nop
      78:	de c0       	rjmp	.+444    	; 0x236 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	dc c0       	rjmp	.+440    	; 0x236 <__bad_interrupt>
      7e:	00 00       	nop
      80:	da c0       	rjmp	.+436    	; 0x236 <__bad_interrupt>
      82:	00 00       	nop
      84:	d8 c0       	rjmp	.+432    	; 0x236 <__bad_interrupt>
      86:	00 00       	nop
      88:	d6 c0       	rjmp	.+428    	; 0x236 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	d4 c0       	rjmp	.+424    	; 0x236 <__bad_interrupt>
      8e:	00 00       	nop
      90:	04 c4       	rjmp	.+2056   	; 0x89a <__vector_36>
      92:	00 00       	nop
      94:	cd c3       	rjmp	.+1946   	; 0x830 <__vector_37>
      96:	00 00       	nop
      98:	ce c0       	rjmp	.+412    	; 0x236 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	cc c0       	rjmp	.+408    	; 0x236 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	ca c0       	rjmp	.+404    	; 0x236 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	c8 c0       	rjmp	.+400    	; 0x236 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	c6 c0       	rjmp	.+396    	; 0x236 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	c4 c0       	rjmp	.+392    	; 0x236 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	c2 c0       	rjmp	.+388    	; 0x236 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	c0 c0       	rjmp	.+384    	; 0x236 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	be c0       	rjmp	.+380    	; 0x236 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	bc c0       	rjmp	.+376    	; 0x236 <__bad_interrupt>
      be:	00 00       	nop
      c0:	ba c0       	rjmp	.+372    	; 0x236 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	b8 c0       	rjmp	.+368    	; 0x236 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	b6 c0       	rjmp	.+364    	; 0x236 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	b4 c0       	rjmp	.+360    	; 0x236 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	b2 c0       	rjmp	.+356    	; 0x236 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	b0 c0       	rjmp	.+352    	; 0x236 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	ae c0       	rjmp	.+348    	; 0x236 <__bad_interrupt>
      da:	00 00       	nop
      dc:	ac c0       	rjmp	.+344    	; 0x236 <__bad_interrupt>
      de:	00 00       	nop
      e0:	aa c0       	rjmp	.+340    	; 0x236 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	8e 04       	cpc	r8, r14
      e6:	a1 04       	cpc	r10, r1
      e8:	b4 04       	cpc	r11, r4
      ea:	c7 04       	cpc	r12, r7
      ec:	05 05       	cpc	r16, r5
      ee:	16 05       	cpc	r17, r6
      f0:	29 05       	cpc	r18, r9
      f2:	52 05       	cpc	r21, r2

000000f4 <__trampolines_end>:
      f4:	6e 61       	ori	r22, 0x1E	; 30
      f6:	6e 00       	.word	0x006e	; ????

000000f8 <__c.2332>:
      f8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     108:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     118:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     128:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     138:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     148:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     158:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     168:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     178:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     188:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     198:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1a8:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1b8:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1c8:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1d8:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1e8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001f6 <__ctors_end>:
     1f6:	11 24       	eor	r1, r1
     1f8:	1f be       	out	0x3f, r1	; 63
     1fa:	cf ef       	ldi	r28, 0xFF	; 255
     1fc:	d1 e2       	ldi	r29, 0x21	; 33
     1fe:	de bf       	out	0x3e, r29	; 62
     200:	cd bf       	out	0x3d, r28	; 61
     202:	00 e0       	ldi	r16, 0x00	; 0
     204:	0c bf       	out	0x3c, r16	; 60

00000206 <__do_copy_data>:
     206:	12 e0       	ldi	r17, 0x02	; 2
     208:	a0 e0       	ldi	r26, 0x00	; 0
     20a:	b2 e0       	ldi	r27, 0x02	; 2
     20c:	ee e4       	ldi	r30, 0x4E	; 78
     20e:	fa e1       	ldi	r31, 0x1A	; 26
     210:	00 e0       	ldi	r16, 0x00	; 0
     212:	0b bf       	out	0x3b, r16	; 59
     214:	02 c0       	rjmp	.+4      	; 0x21a <__do_copy_data+0x14>
     216:	07 90       	elpm	r0, Z+
     218:	0d 92       	st	X+, r0
     21a:	aa 31       	cpi	r26, 0x1A	; 26
     21c:	b1 07       	cpc	r27, r17
     21e:	d9 f7       	brne	.-10     	; 0x216 <__do_copy_data+0x10>

00000220 <__do_clear_bss>:
     220:	24 e0       	ldi	r18, 0x04	; 4
     222:	aa e1       	ldi	r26, 0x1A	; 26
     224:	b2 e0       	ldi	r27, 0x02	; 2
     226:	01 c0       	rjmp	.+2      	; 0x22a <.do_clear_bss_start>

00000228 <.do_clear_bss_loop>:
     228:	1d 92       	st	X+, r1

0000022a <.do_clear_bss_start>:
     22a:	a4 38       	cpi	r26, 0x84	; 132
     22c:	b2 07       	cpc	r27, r18
     22e:	e1 f7       	brne	.-8      	; 0x228 <.do_clear_bss_loop>
     230:	8d d1       	rcall	.+794    	; 0x54c <main>
     232:	0c 94 25 0d 	jmp	0x1a4a	; 0x1a4a <_exit>

00000236 <__bad_interrupt>:
     236:	e4 ce       	rjmp	.-568    	; 0x0 <__vectors>

00000238 <_lcdWrite4bits>:
* @return void
*/

void _lcdWrite4bits(uint8_t data, uint8_t rs)
{
	if(rs)
     238:	66 23       	and	r22, r22
     23a:	21 f0       	breq	.+8      	; 0x244 <_lcdWrite4bits+0xc>
		LCD_RS_ON();
     23c:	92 b1       	in	r25, 0x02	; 2
     23e:	91 60       	ori	r25, 0x01	; 1
     240:	92 b9       	out	0x02, r25	; 2
     242:	03 c0       	rjmp	.+6      	; 0x24a <_lcdWrite4bits+0x12>
	else
		LCD_RS_OFF();
     244:	92 b1       	in	r25, 0x02	; 2
     246:	9e 7f       	andi	r25, 0xFE	; 254
     248:	92 b9       	out	0x02, r25	; 2
	
	LCD_E_ON();
     24a:	92 b1       	in	r25, 0x02	; 2
     24c:	92 60       	ori	r25, 0x02	; 2
     24e:	92 b9       	out	0x02, r25	; 2
	
	if(data & 1)
     250:	80 ff       	sbrs	r24, 0
     252:	04 c0       	rjmp	.+8      	; 0x25c <_lcdWrite4bits+0x24>
		LCD_DB4_ON();
     254:	9e b1       	in	r25, 0x0e	; 14
     256:	98 60       	ori	r25, 0x08	; 8
     258:	9e b9       	out	0x0e, r25	; 14
     25a:	03 c0       	rjmp	.+6      	; 0x262 <_lcdWrite4bits+0x2a>
	else
		LCD_DB4_OFF();
     25c:	9e b1       	in	r25, 0x0e	; 14
     25e:	97 7f       	andi	r25, 0xF7	; 247
     260:	9e b9       	out	0x0e, r25	; 14
	
	if(data & 2)
     262:	81 ff       	sbrs	r24, 1
     264:	04 c0       	rjmp	.+8      	; 0x26e <_lcdWrite4bits+0x36>
		LCD_DB5_ON();
     266:	94 b3       	in	r25, 0x14	; 20
     268:	90 62       	ori	r25, 0x20	; 32
     26a:	94 bb       	out	0x14, r25	; 20
     26c:	03 c0       	rjmp	.+6      	; 0x274 <_lcdWrite4bits+0x3c>
	else
		LCD_DB5_OFF();
     26e:	94 b3       	in	r25, 0x14	; 20
     270:	9f 7d       	andi	r25, 0xDF	; 223
     272:	94 bb       	out	0x14, r25	; 20
	
	if(data & 4)
     274:	82 ff       	sbrs	r24, 2
     276:	04 c0       	rjmp	.+8      	; 0x280 <_lcdWrite4bits+0x48>
		LCD_DB6_ON();
     278:	9e b1       	in	r25, 0x0e	; 14
     27a:	90 62       	ori	r25, 0x20	; 32
     27c:	9e b9       	out	0x0e, r25	; 14
     27e:	03 c0       	rjmp	.+6      	; 0x286 <_lcdWrite4bits+0x4e>
	else
		LCD_DB6_OFF();
     280:	9e b1       	in	r25, 0x0e	; 14
     282:	9f 7d       	andi	r25, 0xDF	; 223
     284:	9e b9       	out	0x0e, r25	; 14
	
	if(data & 8)
     286:	83 ff       	sbrs	r24, 3
     288:	04 c0       	rjmp	.+8      	; 0x292 <_lcdWrite4bits+0x5a>
		LCD_DB7_ON();
     28a:	8e b1       	in	r24, 0x0e	; 14
     28c:	80 61       	ori	r24, 0x10	; 16
     28e:	8e b9       	out	0x0e, r24	; 14
     290:	03 c0       	rjmp	.+6      	; 0x298 <_lcdWrite4bits+0x60>
	else
		LCD_DB7_OFF();
     292:	8e b1       	in	r24, 0x0e	; 14
     294:	8f 7e       	andi	r24, 0xEF	; 239
     296:	8e b9       	out	0x0e, r24	; 14
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     298:	85 e0       	ldi	r24, 0x05	; 5
     29a:	8a 95       	dec	r24
     29c:	f1 f7       	brne	.-4      	; 0x29a <_lcdWrite4bits+0x62>
     29e:	00 00       	nop
	
	_delay_us(1);
	
	LCD_E_OFF();
     2a0:	82 b1       	in	r24, 0x02	; 2
     2a2:	8d 7f       	andi	r24, 0xFD	; 253
     2a4:	82 b9       	out	0x02, r24	; 2
     2a6:	85 e0       	ldi	r24, 0x05	; 5
     2a8:	8a 95       	dec	r24
     2aa:	f1 f7       	brne	.-4      	; 0x2a8 <_lcdWrite4bits+0x70>
     2ac:	00 00       	nop
     2ae:	08 95       	ret

000002b0 <_lcdWrite8Bits>:
* @param uint8_t rs Recoit la validation et execute la commande data si rs est a 1.
* @return void
*/

void _lcdWrite8Bits(uint8_t data, uint8_t rs)
{
     2b0:	cf 93       	push	r28
     2b2:	df 93       	push	r29
     2b4:	c8 2f       	mov	r28, r24
     2b6:	d6 2f       	mov	r29, r22
	_lcdWrite4bits(data>>4,rs);
     2b8:	82 95       	swap	r24
     2ba:	8f 70       	andi	r24, 0x0F	; 15
     2bc:	bd df       	rcall	.-134    	; 0x238 <_lcdWrite4bits>
	_lcdWrite4bits(data,rs);
     2be:	6d 2f       	mov	r22, r29
     2c0:	8c 2f       	mov	r24, r28
     2c2:	ba df       	rcall	.-140    	; 0x238 <_lcdWrite4bits>
     2c4:	85 ed       	ldi	r24, 0xD5	; 213
     2c6:	8a 95       	dec	r24
     2c8:	f1 f7       	brne	.-4      	; 0x2c6 <_lcdWrite8Bits+0x16>
     2ca:	00 00       	nop
	_delay_us(40);
}
     2cc:	df 91       	pop	r29
     2ce:	cf 91       	pop	r28
     2d0:	08 95       	ret

000002d2 <lcdInit>:
* @return void
*/

void lcdInit()
{
	LCD_RS_INIT();
     2d2:	81 b1       	in	r24, 0x01	; 1
     2d4:	81 60       	ori	r24, 0x01	; 1
     2d6:	81 b9       	out	0x01, r24	; 1
	LCD_E_INIT();
     2d8:	81 b1       	in	r24, 0x01	; 1
     2da:	82 60       	ori	r24, 0x02	; 2
     2dc:	81 b9       	out	0x01, r24	; 1
	LCD_DB4_INIT();
     2de:	8d b1       	in	r24, 0x0d	; 13
     2e0:	88 60       	ori	r24, 0x08	; 8
     2e2:	8d b9       	out	0x0d, r24	; 13
	LCD_DB5_INIT();
     2e4:	83 b3       	in	r24, 0x13	; 19
     2e6:	80 62       	ori	r24, 0x20	; 32
     2e8:	83 bb       	out	0x13, r24	; 19
	LCD_DB6_INIT();
     2ea:	8d b1       	in	r24, 0x0d	; 13
     2ec:	80 62       	ori	r24, 0x20	; 32
     2ee:	8d b9       	out	0x0d, r24	; 13
	LCD_DB7_INIT();
     2f0:	8d b1       	in	r24, 0x0d	; 13
     2f2:	80 61       	ori	r24, 0x10	; 16
     2f4:	8d b9       	out	0x0d, r24	; 13
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2f6:	2f ef       	ldi	r18, 0xFF	; 255
     2f8:	89 ef       	ldi	r24, 0xF9	; 249
     2fa:	90 e0       	ldi	r25, 0x00	; 0
     2fc:	21 50       	subi	r18, 0x01	; 1
     2fe:	80 40       	sbci	r24, 0x00	; 0
     300:	90 40       	sbci	r25, 0x00	; 0
     302:	e1 f7       	brne	.-8      	; 0x2fc <lcdInit+0x2a>
     304:	00 c0       	rjmp	.+0      	; 0x306 <lcdInit+0x34>
     306:	00 00       	nop
	
	
	_delay_ms(20);
	
	_lcdWrite4bits(3,0);
     308:	60 e0       	ldi	r22, 0x00	; 0
     30a:	83 e0       	ldi	r24, 0x03	; 3
     30c:	95 df       	rcall	.-214    	; 0x238 <_lcdWrite4bits>
     30e:	8f e1       	ldi	r24, 0x1F	; 31
     310:	9e e4       	ldi	r25, 0x4E	; 78
     312:	01 97       	sbiw	r24, 0x01	; 1
     314:	f1 f7       	brne	.-4      	; 0x312 <lcdInit+0x40>
     316:	00 c0       	rjmp	.+0      	; 0x318 <lcdInit+0x46>
     318:	00 00       	nop
	
	_delay_ms(5);
	
	_lcdWrite4bits(3,0);
     31a:	60 e0       	ldi	r22, 0x00	; 0
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	8c df       	rcall	.-232    	; 0x238 <_lcdWrite4bits>
     320:	8f e9       	ldi	r24, 0x9F	; 159
     322:	9f e0       	ldi	r25, 0x0F	; 15
     324:	01 97       	sbiw	r24, 0x01	; 1
     326:	f1 f7       	brne	.-4      	; 0x324 <lcdInit+0x52>
     328:	00 c0       	rjmp	.+0      	; 0x32a <lcdInit+0x58>
     32a:	00 00       	nop
	
	_delay_ms(1);
	
	_lcdWrite4bits(3,0);
     32c:	60 e0       	ldi	r22, 0x00	; 0
     32e:	83 e0       	ldi	r24, 0x03	; 3
     330:	83 df       	rcall	.-250    	; 0x238 <_lcdWrite4bits>
     332:	8f e9       	ldi	r24, 0x9F	; 159
     334:	9f e0       	ldi	r25, 0x0F	; 15
     336:	01 97       	sbiw	r24, 0x01	; 1
     338:	f1 f7       	brne	.-4      	; 0x336 <lcdInit+0x64>
     33a:	00 c0       	rjmp	.+0      	; 0x33c <lcdInit+0x6a>
	
	_delay_ms(1);
	
	_lcdWrite4bits(2,0); // mode 4 bits active
     33c:	00 00       	nop
     33e:	60 e0       	ldi	r22, 0x00	; 0
     340:	82 e0       	ldi	r24, 0x02	; 2
     342:	7a df       	rcall	.-268    	; 0x238 <_lcdWrite4bits>
     344:	8f e9       	ldi	r24, 0x9F	; 159
     346:	9f e0       	ldi	r25, 0x0F	; 15
     348:	01 97       	sbiw	r24, 0x01	; 1
     34a:	f1 f7       	brne	.-4      	; 0x348 <lcdInit+0x76>
     34c:	00 c0       	rjmp	.+0      	; 0x34e <lcdInit+0x7c>
	
	_delay_ms(1);
	
	_lcdWrite8Bits(0x28,0); // mode 4 bits - 2 lignes
     34e:	00 00       	nop
     350:	60 e0       	ldi	r22, 0x00	; 0
     352:	88 e2       	ldi	r24, 0x28	; 40
	
	_lcdWrite8Bits(0x08,0); // LCD a off
     354:	ad df       	rcall	.-166    	; 0x2b0 <_lcdWrite8Bits>
     356:	60 e0       	ldi	r22, 0x00	; 0
     358:	88 e0       	ldi	r24, 0x08	; 8
	
	_lcdWrite8Bits(0x01,0); // Clear LCD
     35a:	aa df       	rcall	.-172    	; 0x2b0 <_lcdWrite8Bits>
     35c:	60 e0       	ldi	r22, 0x00	; 0
     35e:	81 e0       	ldi	r24, 0x01	; 1
     360:	a7 df       	rcall	.-178    	; 0x2b0 <_lcdWrite8Bits>
     362:	8f e3       	ldi	r24, 0x3F	; 63
     364:	9f e1       	ldi	r25, 0x1F	; 31
     366:	01 97       	sbiw	r24, 0x01	; 1
     368:	f1 f7       	brne	.-4      	; 0x366 <lcdInit+0x94>
	
	_delay_ms(2);
	
	_lcdWrite8Bits(0x06,0); // Incremente vers la gauche
     36a:	00 c0       	rjmp	.+0      	; 0x36c <lcdInit+0x9a>
     36c:	00 00       	nop
     36e:	60 e0       	ldi	r22, 0x00	; 0
     370:	86 e0       	ldi	r24, 0x06	; 6
	
	_lcdWrite8Bits(0x0F,0); // LCD a on, curseur a on qui clignote
     372:	9e df       	rcall	.-196    	; 0x2b0 <_lcdWrite8Bits>
     374:	60 e0       	ldi	r22, 0x00	; 0
     376:	8f e0       	ldi	r24, 0x0F	; 15
     378:	9b cf       	rjmp	.-202    	; 0x2b0 <_lcdWrite8Bits>
     37a:	08 95       	ret

0000037c <lcdPutc>:
* @return void
*/

void lcdPutc(char c)
{
	_lcdWrite8Bits(c,1);
     37c:	61 e0       	ldi	r22, 0x01	; 1
     37e:	98 cf       	rjmp	.-208    	; 0x2b0 <_lcdWrite8Bits>
     380:	08 95       	ret

00000382 <lcdPuts>:
* @param str chaine de caracteres (char *) longueur maximum de 255. Recoit la string desirer qu'il va imprimmer sur le LCD.
* @return void
*/

void lcdPuts(char*str)
{
     382:	0f 93       	push	r16
     384:	1f 93       	push	r17
     386:	cf 93       	push	r28
     388:	8c 01       	movw	r16, r24
	for(uint8_t i = 0; str[i] && i < 255 ; i++)
     38a:	c0 e0       	ldi	r28, 0x00	; 0
     38c:	02 c0       	rjmp	.+4      	; 0x392 <lcdPuts+0x10>
	{
		lcdPutc(str[i]);
     38e:	f6 df       	rcall	.-20     	; 0x37c <lcdPutc>
* @return void
*/

void lcdPuts(char*str)
{
	for(uint8_t i = 0; str[i] && i < 255 ; i++)
     390:	cf 5f       	subi	r28, 0xFF	; 255
     392:	f8 01       	movw	r30, r16
     394:	ec 0f       	add	r30, r28
     396:	f1 1d       	adc	r31, r1
     398:	80 81       	ld	r24, Z
     39a:	88 23       	and	r24, r24
     39c:	11 f0       	breq	.+4      	; 0x3a2 <lcdPuts+0x20>
     39e:	cf 3f       	cpi	r28, 0xFF	; 255
     3a0:	b1 f7       	brne	.-20     	; 0x38e <lcdPuts+0xc>
	{
		lcdPutc(str[i]);
	}
}
     3a2:	cf 91       	pop	r28
     3a4:	1f 91       	pop	r17
     3a6:	0f 91       	pop	r16
     3a8:	08 95       	ret

000003aa <lcdSetPos>:

void lcdSetPos(uint8_t x, uint8_t y)
{
	uint8_t cmd = 0x80; // commande pour postionner l'adresse DDRAM
	
	if (y)
     3aa:	61 11       	cpse	r22, r1
     3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <lcdSetPos+0x8>
* @return void
*/

void lcdSetPos(uint8_t x, uint8_t y)
{
	uint8_t cmd = 0x80; // commande pour postionner l'adresse DDRAM
     3ae:	90 e8       	ldi	r25, 0x80	; 128
     3b0:	01 c0       	rjmp	.+2      	; 0x3b4 <lcdSetPos+0xa>
	
	if (y)
	cmd |= (1<<6); // positionner l'adresse a 0x40 pour la ligne 2.
     3b2:	90 ec       	ldi	r25, 0xC0	; 192
	cmd |= (x & 0xF);
     3b4:	8f 70       	andi	r24, 0x0F	; 15
	_lcdWrite8Bits(cmd,0);
     3b6:	60 e0       	ldi	r22, 0x00	; 0
     3b8:	89 2b       	or	r24, r25
     3ba:	7a cf       	rjmp	.-268    	; 0x2b0 <_lcdWrite8Bits>
     3bc:	08 95       	ret

000003be <lcdClearScreen>:
* @brief Cete fonction sert a reset l'ecriture afficher sur le LCD
*/

void lcdClearScreen()
{
	_lcdWrite8Bits(0x01,0); // Clear LCD
     3be:	60 e0       	ldi	r22, 0x00	; 0
     3c0:	81 e0       	ldi	r24, 0x01	; 1
     3c2:	76 df       	rcall	.-276    	; 0x2b0 <_lcdWrite8Bits>
     3c4:	8f e3       	ldi	r24, 0x3F	; 63
     3c6:	9f e1       	ldi	r25, 0x1F	; 31
     3c8:	01 97       	sbiw	r24, 0x01	; 1
     3ca:	f1 f7       	brne	.-4      	; 0x3c8 <lcdClearScreen+0xa>
     3cc:	00 c0       	rjmp	.+0      	; 0x3ce <lcdClearScreen+0x10>
     3ce:	00 00       	nop
     3d0:	08 95       	ret

000003d2 <calculerCRC>:
void envoieConfigMsg( uint8_t id,uint8_t etatUart1,uint8_t etatUsb);
void envoieConfigRate(uint8_t frequence);
void envoieConfigPortUart1(uint32_t baudrate);
uint8_t trameResetOdometre[8]={0xB5,0x62,0x01,0x10,0x00,0x00,0x11,0x34};
uint16_t calculerCRC(uint8_t*trame,uint8_t size)
{
     3d2:	dc 01       	movw	r26, r24
	uint8_t checksumA=0;
	uint8_t checksumB=0;
	uint16_t retour=0;
	size=size+6;
     3d4:	6a 5f       	subi	r22, 0xFA	; 250
	for(uint8_t n=2;n<size;n++)
     3d6:	92 e0       	ldi	r25, 0x02	; 2
void envoieConfigPortUart1(uint32_t baudrate);
uint8_t trameResetOdometre[8]={0xB5,0x62,0x01,0x10,0x00,0x00,0x11,0x34};
uint16_t calculerCRC(uint8_t*trame,uint8_t size)
{
	uint8_t checksumA=0;
	uint8_t checksumB=0;
     3d8:	30 e0       	ldi	r19, 0x00	; 0
void envoieConfigRate(uint8_t frequence);
void envoieConfigPortUart1(uint32_t baudrate);
uint8_t trameResetOdometre[8]={0xB5,0x62,0x01,0x10,0x00,0x00,0x11,0x34};
uint16_t calculerCRC(uint8_t*trame,uint8_t size)
{
	uint8_t checksumA=0;
     3da:	20 e0       	ldi	r18, 0x00	; 0
	uint8_t checksumB=0;
	uint16_t retour=0;
	size=size+6;
	for(uint8_t n=2;n<size;n++)
     3dc:	07 c0       	rjmp	.+14     	; 0x3ec <calculerCRC+0x1a>
	{
		checksumA = checksumA + trame[n];
     3de:	fd 01       	movw	r30, r26
     3e0:	e9 0f       	add	r30, r25
     3e2:	f1 1d       	adc	r31, r1
     3e4:	40 81       	ld	r20, Z
     3e6:	24 0f       	add	r18, r20
		checksumB = checksumB + checksumA;
     3e8:	32 0f       	add	r19, r18
{
	uint8_t checksumA=0;
	uint8_t checksumB=0;
	uint16_t retour=0;
	size=size+6;
	for(uint8_t n=2;n<size;n++)
     3ea:	9f 5f       	subi	r25, 0xFF	; 255
     3ec:	96 17       	cp	r25, r22
     3ee:	b8 f3       	brcs	.-18     	; 0x3de <calculerCRC+0xc>
	{
		checksumA = checksumA + trame[n];
		checksumB = checksumB + checksumA;
	}
	retour=checksumB<<8|checksumA;
     3f0:	83 2f       	mov	r24, r19
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	98 2f       	mov	r25, r24
     3f6:	88 27       	eor	r24, r24
	return retour;
}
     3f8:	82 2b       	or	r24, r18
     3fa:	08 95       	ret

000003fc <envoieConfigPortUart1>:

void envoieConfigPortUart1(uint32_t baudrate)
{
     3fc:	cf 93       	push	r28
     3fe:	df 93       	push	r29
     400:	cd b7       	in	r28, 0x3d	; 61
     402:	de b7       	in	r29, 0x3e	; 62
     404:	6c 97       	sbiw	r28, 0x1c	; 28
     406:	0f b6       	in	r0, 0x3f	; 63
     408:	f8 94       	cli
     40a:	de bf       	out	0x3e, r29	; 62
     40c:	0f be       	out	0x3f, r0	; 63
     40e:	cd bf       	out	0x3d, r28	; 61
	//{0xB5, 0x62, 0x06, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0xD0, 0x08, 0x00, 0x00, 0x80, 0x25, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9A, 0x79}
	uint16_t crc=0;
	uint8_t trameConfigEnvoi[28]={0xB5, 0x62, 0x06, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0xD0, 0x08, 0x00, 0x00, (baudrate&0xFF),(baudrate>>8&0xFF),(baudrate>>16&0xFF), (baudrate>>24&0xFF), 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0, 0};
     410:	25 eb       	ldi	r18, 0xB5	; 181
     412:	29 83       	std	Y+1, r18	; 0x01
     414:	22 e6       	ldi	r18, 0x62	; 98
     416:	2a 83       	std	Y+2, r18	; 0x02
     418:	26 e0       	ldi	r18, 0x06	; 6
     41a:	2b 83       	std	Y+3, r18	; 0x03
     41c:	1c 82       	std	Y+4, r1	; 0x04
     41e:	24 e1       	ldi	r18, 0x14	; 20
     420:	2d 83       	std	Y+5, r18	; 0x05
     422:	1e 82       	std	Y+6, r1	; 0x06
     424:	21 e0       	ldi	r18, 0x01	; 1
     426:	2f 83       	std	Y+7, r18	; 0x07
     428:	18 86       	std	Y+8, r1	; 0x08
     42a:	19 86       	std	Y+9, r1	; 0x09
     42c:	1a 86       	std	Y+10, r1	; 0x0a
     42e:	30 ed       	ldi	r19, 0xD0	; 208
     430:	3b 87       	std	Y+11, r19	; 0x0b
     432:	38 e0       	ldi	r19, 0x08	; 8
     434:	3c 87       	std	Y+12, r19	; 0x0c
     436:	1d 86       	std	Y+13, r1	; 0x0d
     438:	1e 86       	std	Y+14, r1	; 0x0e
     43a:	6f 87       	std	Y+15, r22	; 0x0f
     43c:	78 8b       	std	Y+16, r23	; 0x10
     43e:	89 8b       	std	Y+17, r24	; 0x11
     440:	9a 8b       	std	Y+18, r25	; 0x12
     442:	2b 8b       	std	Y+19, r18	; 0x13
     444:	1c 8a       	std	Y+20, r1	; 0x14
     446:	2d 8b       	std	Y+21, r18	; 0x15
     448:	1e 8a       	std	Y+22, r1	; 0x16
     44a:	1f 8a       	std	Y+23, r1	; 0x17
     44c:	18 8e       	std	Y+24, r1	; 0x18
     44e:	19 8e       	std	Y+25, r1	; 0x19
     450:	1a 8e       	std	Y+26, r1	; 0x1a
     452:	1b 8e       	std	Y+27, r1	; 0x1b
     454:	1c 8e       	std	Y+28, r1	; 0x1c
	crc=calculerCRC(trameConfigEnvoi,20);
     456:	64 e1       	ldi	r22, 0x14	; 20
     458:	ce 01       	movw	r24, r28
     45a:	01 96       	adiw	r24, 0x01	; 1
     45c:	ba df       	rcall	.-140    	; 0x3d2 <calculerCRC>
	trameConfigEnvoi[26]=crc&0xFF;
     45e:	8b 8f       	std	Y+27, r24	; 0x1b
	trameConfigEnvoi[27]=crc>>8;
     460:	9c 8f       	std	Y+28, r25	; 0x1c
	usartSendBytes(trameConfigEnvoi,28);
     462:	6c e1       	ldi	r22, 0x1C	; 28
     464:	ce 01       	movw	r24, r28
     466:	01 96       	adiw	r24, 0x01	; 1
     468:	c7 d1       	rcall	.+910    	; 0x7f8 <usartSendBytes>
}
     46a:	6c 96       	adiw	r28, 0x1c	; 28
     46c:	0f b6       	in	r0, 0x3f	; 63
     46e:	f8 94       	cli
     470:	de bf       	out	0x3e, r29	; 62
     472:	0f be       	out	0x3f, r0	; 63
     474:	cd bf       	out	0x3d, r28	; 61
     476:	df 91       	pop	r29
     478:	cf 91       	pop	r28
     47a:	08 95       	ret

0000047c <envoieConfigRate>:

void envoieConfigRate(uint8_t frequence)
{
     47c:	cf 93       	push	r28
     47e:	df 93       	push	r29
     480:	cd b7       	in	r28, 0x3d	; 61
     482:	de b7       	in	r29, 0x3e	; 62
     484:	2e 97       	sbiw	r28, 0x0e	; 14
     486:	0f b6       	in	r0, 0x3f	; 63
     488:	f8 94       	cli
     48a:	de bf       	out	0x3e, r29	; 62
     48c:	0f be       	out	0x3f, r0	; 63
     48e:	cd bf       	out	0x3d, r28	; 61
	//{0xB5,0x62,0x06,0x08,0x06,0x00,0xE8,0x03,0x01,0x00,0x01,0x00,0x01,0x39}
	uint16_t crc=0;
	uint16_t freq=1000/frequence;
     490:	68 2f       	mov	r22, r24
     492:	70 e0       	ldi	r23, 0x00	; 0
     494:	88 ee       	ldi	r24, 0xE8	; 232
     496:	93 e0       	ldi	r25, 0x03	; 3
     498:	0e 94 40 0b 	call	0x1680	; 0x1680 <__divmodhi4>
	uint8_t trameConfigEnvoi[14]={0xB5, 0x62, 0x06, 0x08, 0x06, 0x00, (freq&0xFF),(freq>>8), 0x01,0x00 , 0x01, 0x00, 0, 0};
     49c:	85 eb       	ldi	r24, 0xB5	; 181
     49e:	89 83       	std	Y+1, r24	; 0x01
     4a0:	82 e6       	ldi	r24, 0x62	; 98
     4a2:	8a 83       	std	Y+2, r24	; 0x02
     4a4:	86 e0       	ldi	r24, 0x06	; 6
     4a6:	8b 83       	std	Y+3, r24	; 0x03
     4a8:	98 e0       	ldi	r25, 0x08	; 8
     4aa:	9c 83       	std	Y+4, r25	; 0x04
     4ac:	8d 83       	std	Y+5, r24	; 0x05
     4ae:	1e 82       	std	Y+6, r1	; 0x06
     4b0:	6f 83       	std	Y+7, r22	; 0x07
     4b2:	78 87       	std	Y+8, r23	; 0x08
     4b4:	81 e0       	ldi	r24, 0x01	; 1
     4b6:	89 87       	std	Y+9, r24	; 0x09
     4b8:	1a 86       	std	Y+10, r1	; 0x0a
     4ba:	8b 87       	std	Y+11, r24	; 0x0b
     4bc:	1c 86       	std	Y+12, r1	; 0x0c
     4be:	1d 86       	std	Y+13, r1	; 0x0d
     4c0:	1e 86       	std	Y+14, r1	; 0x0e
	crc=calculerCRC(trameConfigEnvoi,6);
     4c2:	66 e0       	ldi	r22, 0x06	; 6
     4c4:	ce 01       	movw	r24, r28
     4c6:	01 96       	adiw	r24, 0x01	; 1
     4c8:	84 df       	rcall	.-248    	; 0x3d2 <calculerCRC>
	trameConfigEnvoi[12]=crc&0xFF;
     4ca:	8d 87       	std	Y+13, r24	; 0x0d
	trameConfigEnvoi[13]=crc>>8;
     4cc:	9e 87       	std	Y+14, r25	; 0x0e
	usartSendBytes(trameConfigEnvoi,14);	
     4ce:	6e e0       	ldi	r22, 0x0E	; 14
     4d0:	ce 01       	movw	r24, r28
     4d2:	01 96       	adiw	r24, 0x01	; 1
     4d4:	91 d1       	rcall	.+802    	; 0x7f8 <usartSendBytes>
}
     4d6:	2e 96       	adiw	r28, 0x0e	; 14
     4d8:	0f b6       	in	r0, 0x3f	; 63
     4da:	f8 94       	cli
     4dc:	de bf       	out	0x3e, r29	; 62
     4de:	0f be       	out	0x3f, r0	; 63
     4e0:	cd bf       	out	0x3d, r28	; 61
     4e2:	df 91       	pop	r29
     4e4:	cf 91       	pop	r28
     4e6:	08 95       	ret

000004e8 <envoieConfigMsg>:

void envoieConfigMsg(uint8_t id,uint8_t etatUart1,uint8_t etatUsb)
{
     4e8:	cf 93       	push	r28
     4ea:	df 93       	push	r29
     4ec:	cd b7       	in	r28, 0x3d	; 61
     4ee:	de b7       	in	r29, 0x3e	; 62
     4f0:	60 97       	sbiw	r28, 0x10	; 16
     4f2:	0f b6       	in	r0, 0x3f	; 63
     4f4:	f8 94       	cli
     4f6:	de bf       	out	0x3e, r29	; 62
     4f8:	0f be       	out	0x3f, r0	; 63
     4fa:	cd bf       	out	0x3d, r28	; 61
	
	uint16_t crc=0;
	uint8_t trameConfigEnvoi[16]={0xB5, 0x62, 0x06, 0x01, 0x08, 0x00, 0x01, id, 0x00, etatUart1, 0x00, etatUsb, 0x00, 0x00, 0, 0};
     4fc:	95 eb       	ldi	r25, 0xB5	; 181
     4fe:	99 83       	std	Y+1, r25	; 0x01
     500:	92 e6       	ldi	r25, 0x62	; 98
     502:	9a 83       	std	Y+2, r25	; 0x02
     504:	96 e0       	ldi	r25, 0x06	; 6
     506:	9b 83       	std	Y+3, r25	; 0x03
     508:	91 e0       	ldi	r25, 0x01	; 1
     50a:	9c 83       	std	Y+4, r25	; 0x04
     50c:	28 e0       	ldi	r18, 0x08	; 8
     50e:	2d 83       	std	Y+5, r18	; 0x05
     510:	1e 82       	std	Y+6, r1	; 0x06
     512:	9f 83       	std	Y+7, r25	; 0x07
     514:	88 87       	std	Y+8, r24	; 0x08
     516:	19 86       	std	Y+9, r1	; 0x09
     518:	6a 87       	std	Y+10, r22	; 0x0a
     51a:	1b 86       	std	Y+11, r1	; 0x0b
     51c:	4c 87       	std	Y+12, r20	; 0x0c
     51e:	1d 86       	std	Y+13, r1	; 0x0d
     520:	1e 86       	std	Y+14, r1	; 0x0e
     522:	1f 86       	std	Y+15, r1	; 0x0f
     524:	18 8a       	std	Y+16, r1	; 0x10
	crc=calculerCRC(trameConfigEnvoi,8);
     526:	68 e0       	ldi	r22, 0x08	; 8
     528:	ce 01       	movw	r24, r28
     52a:	01 96       	adiw	r24, 0x01	; 1
     52c:	52 df       	rcall	.-348    	; 0x3d2 <calculerCRC>
	trameConfigEnvoi[14]=crc&0xFF;
     52e:	8f 87       	std	Y+15, r24	; 0x0f
	trameConfigEnvoi[15]=crc>>8;
     530:	98 8b       	std	Y+16, r25	; 0x10
	usartSendBytes(trameConfigEnvoi,16);
     532:	60 e1       	ldi	r22, 0x10	; 16
     534:	ce 01       	movw	r24, r28
     536:	01 96       	adiw	r24, 0x01	; 1
     538:	5f d1       	rcall	.+702    	; 0x7f8 <usartSendBytes>
	
}		
     53a:	60 96       	adiw	r28, 0x10	; 16
     53c:	0f b6       	in	r0, 0x3f	; 63
     53e:	f8 94       	cli
     540:	de bf       	out	0x3e, r29	; 62
     542:	0f be       	out	0x3f, r0	; 63
     544:	cd bf       	out	0x3d, r28	; 61
     546:	df 91       	pop	r29
     548:	cf 91       	pop	r28
     54a:	08 95       	ret

0000054c <main>:

int main(void)
{
	DDRB |=(1<<7);//led on board
     54c:	84 b1       	in	r24, 0x04	; 4
     54e:	80 68       	ori	r24, 0x80	; 128
     550:	84 b9       	out	0x04, r24	; 4
	// 	BT1_INIT();
	// 	BT2_INIT();
	lcdInit();
     552:	bf de       	rcall	.-642    	; 0x2d2 <lcdInit>
	usartInit(9600,16000000);
     554:	20 e0       	ldi	r18, 0x00	; 0
     556:	34 e2       	ldi	r19, 0x24	; 36
     558:	44 ef       	ldi	r20, 0xF4	; 244
     55a:	50 e0       	ldi	r21, 0x00	; 0
     55c:	60 e8       	ldi	r22, 0x80	; 128
     55e:	75 e2       	ldi	r23, 0x25	; 37
     560:	80 e0       	ldi	r24, 0x00	; 0
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	ec d0       	rcall	.+472    	; 0x73e <usartInit>
	lcdPuts("Hello world");
     566:	8a e0       	ldi	r24, 0x0A	; 10
     568:	92 e0       	ldi	r25, 0x02	; 2
     56a:	0b df       	rcall	.-490    	; 0x382 <lcdPuts>
	TCCR0B |= (1<<CS01) | (1<<CS00); //avec diviseur de clock /64.
     56c:	85 b5       	in	r24, 0x25	; 37
     56e:	83 60       	ori	r24, 0x03	; 3
     570:	85 bd       	out	0x25, r24	; 37
	TCCR0A |= (1<<WGM01);//Configuration du timer 0 en CTC
     572:	84 b5       	in	r24, 0x24	; 36
     574:	82 60       	ori	r24, 0x02	; 2
     576:	84 bd       	out	0x24, r24	; 36
	TIMSK0 |= (1<<OCIE0A);//Output Compare Match A Interrupt Enable.
     578:	ee e6       	ldi	r30, 0x6E	; 110
     57a:	f0 e0       	ldi	r31, 0x00	; 0
     57c:	80 81       	ld	r24, Z
     57e:	82 60       	ori	r24, 0x02	; 2
     580:	80 83       	st	Z, r24
	OCR0A = 249;//Top a la valeur 249 afin de obtenir un periode de 1ms fixe.
     582:	89 ef       	ldi	r24, 0xF9	; 249
     584:	87 bd       	out	0x27, r24	; 39
	sei();//fait appel aux interruptions global
     586:	78 94       	sei
	
	envoieConfigPortUart1(9600);
     588:	60 e8       	ldi	r22, 0x80	; 128
     58a:	75 e2       	ldi	r23, 0x25	; 37
     58c:	80 e0       	ldi	r24, 0x00	; 0
     58e:	90 e0       	ldi	r25, 0x00	; 0
	envoieConfigRate(1);
     590:	35 df       	rcall	.-406    	; 0x3fc <envoieConfigPortUart1>
     592:	81 e0       	ldi	r24, 0x01	; 1
	envoieConfigMsg(PVT,USART1_ON,USART1_OFF);
     594:	73 df       	rcall	.-282    	; 0x47c <envoieConfigRate>
     596:	40 e0       	ldi	r20, 0x00	; 0
     598:	61 e0       	ldi	r22, 0x01	; 1
     59a:	87 e0       	ldi	r24, 0x07	; 7
     59c:	a5 df       	rcall	.-182    	; 0x4e8 <envoieConfigMsg>
	PORTL |= (1<<7);//pull ups internes pour bouton odo reset
     59e:	eb e0       	ldi	r30, 0x0B	; 11
     5a0:	f1 e0       	ldi	r31, 0x01	; 1
     5a2:	80 81       	ld	r24, Z
     5a4:	80 68       	ori	r24, 0x80	; 128
     5a6:	80 83       	st	Z, r24
	OCR4B=240;*/
	
	while (1)
	{
		
 		if(pos>=16)
     5a8:	80 91 23 02 	lds	r24, 0x0223	; 0x800223 <pos>
     5ac:	80 31       	cpi	r24, 0x10	; 16
     5ae:	48 f0       	brcs	.+18     	; 0x5c2 <main+0x76>
 		{
 			pos=0;
     5b0:	10 92 23 02 	sts	0x0223, r1	; 0x800223 <pos>
 			row=!row;
     5b4:	81 e0       	ldi	r24, 0x01	; 1
     5b6:	90 91 22 02 	lds	r25, 0x0222	; 0x800222 <row>
     5ba:	91 11       	cpse	r25, r1
     5bc:	80 e0       	ldi	r24, 0x00	; 0
     5be:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <row>
 			
		}
		if((PINL &(1<<7))==0)
     5c2:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7c0109>
		{
			usartSendBytes(trameResetOdometre,8);
     5c6:	88 23       	and	r24, r24
     5c8:	24 f0       	brlt	.+8      	; 0x5d2 <main+0x86>
     5ca:	68 e0       	ldi	r22, 0x08	; 8
     5cc:	80 e0       	ldi	r24, 0x00	; 0
		}
		
		if(usartRxAvailable())
     5ce:	92 e0       	ldi	r25, 0x02	; 2
     5d0:	13 d1       	rcall	.+550    	; 0x7f8 <usartSendBytes>
     5d2:	ef d0       	rcall	.+478    	; 0x7b2 <usartRxAvailable>
     5d4:	88 23       	and	r24, r24
		{
			tmp=usartRemRxData();
     5d6:	09 f4       	brne	.+2      	; 0x5da <main+0x8e>
     5d8:	59 c0       	rjmp	.+178    	; 0x68c <main+0x140>
     5da:	ee d0       	rcall	.+476    	; 0x7b8 <usartRemRxData>
			if(parseRxUbxNavPvt(tmp))
     5dc:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <tmp>
     5e0:	8f d1       	rcall	.+798    	; 0x900 <parseRxUbxNavPvt>
     5e2:	88 23       	and	r24, r24
     5e4:	09 f4       	brne	.+2      	; 0x5e8 <main+0x9c>
			{
				PORTB^=(1<<7);
     5e6:	52 c0       	rjmp	.+164    	; 0x68c <main+0x140>
     5e8:	85 b1       	in	r24, 0x05	; 5
     5ea:	80 58       	subi	r24, 0x80	; 128
				lcdClearScreen();
     5ec:	85 b9       	out	0x05, r24	; 5
				lon = getNavPvtLon();
     5ee:	e7 de       	rcall	.-562    	; 0x3be <lcdClearScreen>
     5f0:	c6 d2       	rcall	.+1420   	; 0xb7e <getNavPvtLon>
     5f2:	60 93 1a 02 	sts	0x021A, r22	; 0x80021a <__data_end>
     5f6:	70 93 1b 02 	sts	0x021B, r23	; 0x80021b <__data_end+0x1>
     5fa:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <__data_end+0x2>
     5fe:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <__data_end+0x3>
				lat = getNavPvtLat();
     602:	af d2       	rcall	.+1374   	; 0xb62 <getNavPvtLat>
     604:	60 93 1e 02 	sts	0x021E, r22	; 0x80021e <lat>
     608:	70 93 1f 02 	sts	0x021F, r23	; 0x80021f <lat+0x1>
     60c:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <lat+0x2>
     610:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <lat+0x3>
				sprintf(msg, "%f", (lat*1e-7));
     614:	25 e9       	ldi	r18, 0x95	; 149
     616:	3f eb       	ldi	r19, 0xBF	; 191
     618:	46 ed       	ldi	r20, 0xD6	; 214
     61a:	53 e3       	ldi	r21, 0x33	; 51
     61c:	45 d4       	rcall	.+2186   	; 0xea8 <__mulsf3>
     61e:	9f 93       	push	r25
     620:	8f 93       	push	r24
     622:	7f 93       	push	r23
     624:	6f 93       	push	r22
     626:	06 e1       	ldi	r16, 0x16	; 22
     628:	12 e0       	ldi	r17, 0x02	; 2
     62a:	1f 93       	push	r17
     62c:	0f 93       	push	r16
     62e:	ce e3       	ldi	r28, 0x3E	; 62
     630:	d2 e0       	ldi	r29, 0x02	; 2
     632:	df 93       	push	r29
     634:	cf 93       	push	r28
     636:	0e 94 99 0c 	call	0x1932	; 0x1932 <sprintf>
				lcdSetPos(0,0);
     63a:	60 e0       	ldi	r22, 0x00	; 0
     63c:	80 e0       	ldi	r24, 0x00	; 0
				lcdPuts(msg);
     63e:	b5 de       	rcall	.-662    	; 0x3aa <lcdSetPos>
     640:	ce 01       	movw	r24, r28
     642:	9f de       	rcall	.-706    	; 0x382 <lcdPuts>
				sprintf(msg, "%f", (lon*1e-7));
     644:	25 e9       	ldi	r18, 0x95	; 149
     646:	3f eb       	ldi	r19, 0xBF	; 191
     648:	46 ed       	ldi	r20, 0xD6	; 214
     64a:	53 e3       	ldi	r21, 0x33	; 51
     64c:	60 91 1a 02 	lds	r22, 0x021A	; 0x80021a <__data_end>
     650:	70 91 1b 02 	lds	r23, 0x021B	; 0x80021b <__data_end+0x1>
     654:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <__data_end+0x2>
     658:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <__data_end+0x3>
     65c:	25 d4       	rcall	.+2122   	; 0xea8 <__mulsf3>
     65e:	9f 93       	push	r25
     660:	8f 93       	push	r24
     662:	7f 93       	push	r23
     664:	6f 93       	push	r22
     666:	1f 93       	push	r17
     668:	0f 93       	push	r16
     66a:	df 93       	push	r29
     66c:	cf 93       	push	r28
     66e:	0e 94 99 0c 	call	0x1932	; 0x1932 <sprintf>
				lcdSetPos(0,1);
     672:	61 e0       	ldi	r22, 0x01	; 1
     674:	80 e0       	ldi	r24, 0x00	; 0
     676:	99 de       	rcall	.-718    	; 0x3aa <lcdSetPos>
				lcdPuts(msg);
     678:	ce 01       	movw	r24, r28
     67a:	83 de       	rcall	.-762    	; 0x382 <lcdPuts>
     67c:	8d b7       	in	r24, 0x3d	; 61
     67e:	9e b7       	in	r25, 0x3e	; 62
     680:	40 96       	adiw	r24, 0x10	; 16
     682:	0f b6       	in	r0, 0x3f	; 63
     684:	f8 94       	cli
     686:	9e bf       	out	0x3e, r25	; 62
     688:	0f be       	out	0x3f, r0	; 63
     68a:	8d bf       	out	0x3d, r24	; 61
     68c:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <refreshBouton>
			}
		}
		if(refreshBouton==1)
     690:	81 30       	cpi	r24, 0x01	; 1
     692:	09 f0       	breq	.+2      	; 0x696 <main+0x14a>
     694:	89 cf       	rjmp	.-238    	; 0x5a8 <main+0x5c>
     696:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <refreshBouton>
		{
			refreshBouton = 0;
     69a:	86 cf       	rjmp	.-244    	; 0x5a8 <main+0x5c>

0000069c <__vector_21>:
     69c:	1f 92       	push	r1
}
/**
* @brief //A chaque interruption du timer 0 le programme execute DixiemeDeSec++ comme ca on verifie l'etat des boutons a chaque 100ms.
*/
ISR(TIMER0_COMPA_vect)//Quand l'interruption globale est appeller le programme vient executer le vecteur Comparatif.
{
     69e:	0f 92       	push	r0
     6a0:	0f b6       	in	r0, 0x3f	; 63
     6a2:	0f 92       	push	r0
     6a4:	11 24       	eor	r1, r1
     6a6:	2f 93       	push	r18
     6a8:	8f 93       	push	r24
     6aa:	9f 93       	push	r25
	cntDixiemeDeSec++;
     6ac:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <cntDixiemeDeSec>
     6b0:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <cntDixiemeDeSec+0x1>
     6b4:	01 96       	adiw	r24, 0x01	; 1
     6b6:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <cntDixiemeDeSec+0x1>
     6ba:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <cntDixiemeDeSec>
	if(cntDixiemeDeSec <= 1000)
     6be:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <cntDixiemeDeSec>
     6c2:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <cntDixiemeDeSec+0x1>
     6c6:	89 3e       	cpi	r24, 0xE9	; 233
     6c8:	93 40       	sbci	r25, 0x03	; 3
     6ca:	68 f4       	brcc	.+26     	; 0x6e6 <__vector_21+0x4a>
	{
		cntDixiemeDeSec -= 1000;
     6cc:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <cntDixiemeDeSec>
     6d0:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <cntDixiemeDeSec+0x1>
     6d4:	88 5e       	subi	r24, 0xE8	; 232
     6d6:	93 40       	sbci	r25, 0x03	; 3
     6d8:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <cntDixiemeDeSec+0x1>
     6dc:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <cntDixiemeDeSec>
		refreshBouton = 1;
     6e0:	81 e0       	ldi	r24, 0x01	; 1
     6e2:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <refreshBouton>
	}
}
     6e6:	9f 91       	pop	r25
     6e8:	8f 91       	pop	r24
     6ea:	2f 91       	pop	r18
     6ec:	0f 90       	pop	r0
     6ee:	0f be       	out	0x3f, r0	; 63
     6f0:	0f 90       	pop	r0
     6f2:	1f 90       	pop	r1
     6f4:	18 95       	reti

000006f6 <usartSendByte>:
		if(!usartSendByte(str[i]))
			cntStr++;
	}
	
	return cntStr;
}
     6f6:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <txCnt>
     6fa:	99 23       	and	r25, r25
     6fc:	f4 f0       	brlt	.+60     	; 0x73a <usartSendByte+0x44>
     6fe:	e0 91 2c 02 	lds	r30, 0x022C	; 0x80022c <txBufferIn>
     702:	91 e0       	ldi	r25, 0x01	; 1
     704:	9e 0f       	add	r25, r30
     706:	90 93 2c 02 	sts	0x022C, r25	; 0x80022c <txBufferIn>
     70a:	f0 e0       	ldi	r31, 0x00	; 0
     70c:	e4 50       	subi	r30, 0x04	; 4
     70e:	fd 4f       	sbci	r31, 0xFD	; 253
     710:	80 83       	st	Z, r24
     712:	f8 94       	cli
     714:	80 91 27 02 	lds	r24, 0x0227	; 0x800227 <txCnt>
     718:	8f 5f       	subi	r24, 0xFF	; 255
     71a:	80 93 27 02 	sts	0x0227, r24	; 0x800227 <txCnt>
     71e:	78 94       	sei
     720:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <txBufferIn>
     724:	88 23       	and	r24, r24
     726:	14 f4       	brge	.+4      	; 0x72c <usartSendByte+0x36>
     728:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <txBufferIn>
     72c:	e9 ec       	ldi	r30, 0xC9	; 201
     72e:	f0 e0       	ldi	r31, 0x00	; 0
     730:	80 81       	ld	r24, Z
     732:	80 62       	ori	r24, 0x20	; 32
     734:	80 83       	st	Z, r24
     736:	80 e0       	ldi	r24, 0x00	; 0
     738:	08 95       	ret
     73a:	81 e0       	ldi	r24, 0x01	; 1
     73c:	08 95       	ret

0000073e <usartInit>:
     73e:	8f 92       	push	r8
     740:	9f 92       	push	r9
     742:	af 92       	push	r10
     744:	bf 92       	push	r11
     746:	cf 92       	push	r12
     748:	df 92       	push	r13
     74a:	ef 92       	push	r14
     74c:	ff 92       	push	r15
     74e:	cf 93       	push	r28
     750:	df 93       	push	r29
     752:	49 01       	movw	r8, r18
     754:	5a 01       	movw	r10, r20
     756:	c9 ec       	ldi	r28, 0xC9	; 201
     758:	d0 e0       	ldi	r29, 0x00	; 0
     75a:	28 e1       	ldi	r18, 0x18	; 24
     75c:	28 83       	st	Y, r18
     75e:	26 e0       	ldi	r18, 0x06	; 6
     760:	20 93 ca 00 	sts	0x00CA, r18	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7c00ca>
     764:	13 d3       	rcall	.+1574   	; 0xd8c <__floatunsisf>
     766:	20 e0       	ldi	r18, 0x00	; 0
     768:	30 e0       	ldi	r19, 0x00	; 0
     76a:	40 e8       	ldi	r20, 0x80	; 128
     76c:	51 e4       	ldi	r21, 0x41	; 65
     76e:	9c d3       	rcall	.+1848   	; 0xea8 <__mulsf3>
     770:	6b 01       	movw	r12, r22
     772:	7c 01       	movw	r14, r24
     774:	c5 01       	movw	r24, r10
     776:	b4 01       	movw	r22, r8
     778:	09 d3       	rcall	.+1554   	; 0xd8c <__floatunsisf>
     77a:	a7 01       	movw	r20, r14
     77c:	96 01       	movw	r18, r12
     77e:	72 d2       	rcall	.+1252   	; 0xc64 <__divsf3>
     780:	20 e0       	ldi	r18, 0x00	; 0
     782:	30 e0       	ldi	r19, 0x00	; 0
     784:	40 e0       	ldi	r20, 0x00	; 0
     786:	5f e3       	ldi	r21, 0x3F	; 63
     788:	08 d2       	rcall	.+1040   	; 0xb9a <__subsf3>
     78a:	d4 d2       	rcall	.+1448   	; 0xd34 <__fixunssfsi>
     78c:	70 93 cd 00 	sts	0x00CD, r23	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7c00cd>
     790:	60 93 cc 00 	sts	0x00CC, r22	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7c00cc>
     794:	88 81       	ld	r24, Y
     796:	80 68       	ori	r24, 0x80	; 128
     798:	88 83       	st	Y, r24
     79a:	78 94       	sei
     79c:	df 91       	pop	r29
     79e:	cf 91       	pop	r28
     7a0:	ff 90       	pop	r15
     7a2:	ef 90       	pop	r14
     7a4:	df 90       	pop	r13
     7a6:	cf 90       	pop	r12
     7a8:	bf 90       	pop	r11
     7aa:	af 90       	pop	r10
     7ac:	9f 90       	pop	r9
     7ae:	8f 90       	pop	r8
     7b0:	08 95       	ret

000007b2 <usartRxAvailable>:
     7b2:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <rxCnt>
     7b6:	08 95       	ret

000007b8 <usartRemRxData>:
     7b8:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <rxCnt>
     7bc:	88 23       	and	r24, r24
     7be:	c9 f0       	breq	.+50     	; 0x7f2 <usartRemRxData+0x3a>
     7c0:	e0 91 29 02 	lds	r30, 0x0229	; 0x800229 <rxBufferOut>
     7c4:	81 e0       	ldi	r24, 0x01	; 1
     7c6:	8e 0f       	add	r24, r30
     7c8:	80 93 29 02 	sts	0x0229, r24	; 0x800229 <rxBufferOut>
     7cc:	f0 e0       	ldi	r31, 0x00	; 0
     7ce:	e4 58       	subi	r30, 0x84	; 132
     7d0:	fd 4f       	sbci	r31, 0xFD	; 253
     7d2:	80 81       	ld	r24, Z
     7d4:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <rxContent>
     7d8:	f8 94       	cli
     7da:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <rxCnt>
     7de:	81 50       	subi	r24, 0x01	; 1
     7e0:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <rxCnt>
     7e4:	78 94       	sei
     7e6:	80 91 29 02 	lds	r24, 0x0229	; 0x800229 <rxBufferOut>
     7ea:	88 23       	and	r24, r24
     7ec:	14 f4       	brge	.+4      	; 0x7f2 <usartRemRxData+0x3a>
     7ee:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <rxBufferOut>
     7f2:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <rxContent>
     7f6:	08 95       	ret

000007f8 <usartSendBytes>:
* @param uint8_t size Recoit la longueur de la string a transmettre vers le PC.
* @return nombre d'octets ajoutes a la transmission
*/

uint8_t usartSendBytes(const uint8_t * source, uint8_t size)
{
     7f8:	ef 92       	push	r14
     7fa:	ff 92       	push	r15
     7fc:	1f 93       	push	r17
     7fe:	cf 93       	push	r28
     800:	df 93       	push	r29
     802:	7c 01       	movw	r14, r24
     804:	16 2f       	mov	r17, r22
	uint8_t nbOctet = 0;
	
 	for(uint8_t i = 0;i<size;i++)
     806:	c0 e0       	ldi	r28, 0x00	; 0
* @return nombre d'octets ajoutes a la transmission
*/

uint8_t usartSendBytes(const uint8_t * source, uint8_t size)
{
	uint8_t nbOctet = 0;
     808:	d0 e0       	ldi	r29, 0x00	; 0
	
 	for(uint8_t i = 0;i<size;i++)
     80a:	09 c0       	rjmp	.+18     	; 0x81e <usartSendBytes+0x26>
	{
		if(!usartSendByte(source[i]))
     80c:	f7 01       	movw	r30, r14
     80e:	ec 0f       	add	r30, r28
     810:	f1 1d       	adc	r31, r1
     812:	80 81       	ld	r24, Z
     814:	70 df       	rcall	.-288    	; 0x6f6 <usartSendByte>
     816:	81 11       	cpse	r24, r1
     818:	01 c0       	rjmp	.+2      	; 0x81c <usartSendBytes+0x24>
			nbOctet++;
     81a:	df 5f       	subi	r29, 0xFF	; 255

uint8_t usartSendBytes(const uint8_t * source, uint8_t size)
{
	uint8_t nbOctet = 0;
	
 	for(uint8_t i = 0;i<size;i++)
     81c:	cf 5f       	subi	r28, 0xFF	; 255
     81e:	c1 17       	cp	r28, r17
     820:	a8 f3       	brcs	.-22     	; 0x80c <usartSendBytes+0x14>
		if(!usartSendByte(source[i]))
			nbOctet++;
		
	}
	return nbOctet;
}
     822:	8d 2f       	mov	r24, r29
     824:	df 91       	pop	r29
     826:	cf 91       	pop	r28
     828:	1f 91       	pop	r17
     82a:	ff 90       	pop	r15
     82c:	ef 90       	pop	r14
     82e:	08 95       	ret

00000830 <__vector_37>:

ISR(USART1_UDRE_vect)//a chaque fois que l'interruption est appeller le programme tansmet des donnes avec le registre UDR1 si il y a bien une donne a transmettre.
{
     830:	1f 92       	push	r1
     832:	0f 92       	push	r0
     834:	0f b6       	in	r0, 0x3f	; 63
     836:	0f 92       	push	r0
     838:	11 24       	eor	r1, r1
     83a:	0b b6       	in	r0, 0x3b	; 59
     83c:	0f 92       	push	r0
     83e:	8f 93       	push	r24
     840:	ef 93       	push	r30
     842:	ff 93       	push	r31
	if(!txCnt)
     844:	80 91 27 02 	lds	r24, 0x0227	; 0x800227 <txCnt>
     848:	81 11       	cpse	r24, r1
     84a:	06 c0       	rjmp	.+12     	; 0x858 <__vector_37+0x28>
	{
		UCSR1B &= ~(1<<UDRIE1);//desactive l'interruption si il n'y a pus de contenu dans txCnt
     84c:	e9 ec       	ldi	r30, 0xC9	; 201
     84e:	f0 e0       	ldi	r31, 0x00	; 0
     850:	80 81       	ld	r24, Z
     852:	8f 7d       	andi	r24, 0xDF	; 223
     854:	80 83       	st	Z, r24
     856:	17 c0       	rjmp	.+46     	; 0x886 <__vector_37+0x56>
	}
	else
	{
		UDR1 = txBuffer[txBufferOut++];//sert a transmettre les donnes du txBuffer vers le PC
     858:	e0 91 2a 02 	lds	r30, 0x022A	; 0x80022a <txBufferOut>
     85c:	81 e0       	ldi	r24, 0x01	; 1
     85e:	8e 0f       	add	r24, r30
     860:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <txBufferOut>
     864:	f0 e0       	ldi	r31, 0x00	; 0
     866:	e4 50       	subi	r30, 0x04	; 4
     868:	fd 4f       	sbci	r31, 0xFD	; 253
     86a:	80 81       	ld	r24, Z
     86c:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
		txCnt--;
     870:	80 91 27 02 	lds	r24, 0x0227	; 0x800227 <txCnt>
     874:	81 50       	subi	r24, 0x01	; 1
     876:	80 93 27 02 	sts	0x0227, r24	; 0x800227 <txCnt>
		if(txBufferOut >= TX_BUFFER_SIZE)
     87a:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <txBufferOut>
     87e:	88 23       	and	r24, r24
     880:	14 f4       	brge	.+4      	; 0x886 <__vector_37+0x56>
			txBufferOut = 0;
     882:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <txBufferOut>
	}
}
     886:	ff 91       	pop	r31
     888:	ef 91       	pop	r30
     88a:	8f 91       	pop	r24
     88c:	0f 90       	pop	r0
     88e:	0b be       	out	0x3b, r0	; 59
     890:	0f 90       	pop	r0
     892:	0f be       	out	0x3f, r0	; 63
     894:	0f 90       	pop	r0
     896:	1f 90       	pop	r1
     898:	18 95       	reti

0000089a <__vector_36>:
volatile uint8_t _usartRxTmp;
ISR(USART1_RX_vect)//cette interruption est semblable a la derniere mais celle ci gere la reception des donnes du atmega32u4 en mettant les valeurs du rx buffer dans UDR1.
{
     89a:	1f 92       	push	r1
     89c:	0f 92       	push	r0
     89e:	0f b6       	in	r0, 0x3f	; 63
     8a0:	0f 92       	push	r0
     8a2:	11 24       	eor	r1, r1
     8a4:	0b b6       	in	r0, 0x3b	; 59
     8a6:	0f 92       	push	r0
     8a8:	8f 93       	push	r24
     8aa:	9f 93       	push	r25
     8ac:	ef 93       	push	r30
     8ae:	ff 93       	push	r31
	_usartRxTmp = UDR1;
     8b0:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
     8b4:	80 93 7b 02 	sts	0x027B, r24	; 0x80027b <_usartRxTmp>
	if(rxCnt<RX_BUFFER_SIZE)
     8b8:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <rxCnt>
     8bc:	88 23       	and	r24, r24
     8be:	ac f0       	brlt	.+42     	; 0x8ea <__vector_36+0x50>
	{
		rxBuffer[rxBufferIn++] = _usartRxTmp;//recoit les valeurs en reception et les met dans le regisre UDR1
     8c0:	e0 91 2b 02 	lds	r30, 0x022B	; 0x80022b <rxBufferIn>
     8c4:	91 e0       	ldi	r25, 0x01	; 1
     8c6:	9e 0f       	add	r25, r30
     8c8:	90 93 2b 02 	sts	0x022B, r25	; 0x80022b <rxBufferIn>
     8cc:	f0 e0       	ldi	r31, 0x00	; 0
     8ce:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <_usartRxTmp>
     8d2:	e4 58       	subi	r30, 0x84	; 132
     8d4:	fd 4f       	sbci	r31, 0xFD	; 253
     8d6:	90 83       	st	Z, r25
		rxCnt++;
     8d8:	8f 5f       	subi	r24, 0xFF	; 255
     8da:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <rxCnt>
		if(rxBufferIn >= RX_BUFFER_SIZE)//Si le buffer de reception est plein le buffer se met a 0
     8de:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <rxBufferIn>
     8e2:	88 23       	and	r24, r24
     8e4:	14 f4       	brge	.+4      	; 0x8ea <__vector_36+0x50>
			rxBufferIn = 0;
     8e6:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <rxBufferIn>
	}
	
     8ea:	ff 91       	pop	r31
     8ec:	ef 91       	pop	r30
     8ee:	9f 91       	pop	r25
     8f0:	8f 91       	pop	r24
     8f2:	0f 90       	pop	r0
     8f4:	0b be       	out	0x3b, r0	; 59
     8f6:	0f 90       	pop	r0
     8f8:	0f be       	out	0x3f, r0	; 63
     8fa:	0f 90       	pop	r0
     8fc:	1f 90       	pop	r1
     8fe:	18 95       	reti

00000900 <parseRxUbxNavPvt>:

long longitude = 0;
long latitude = 0;

uint8_t parseRxUbxNavPvt(uint8_t u8Data)
{
     900:	28 2f       	mov	r18, r24
	
	switch(state)
     902:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <state>
     906:	90 e0       	ldi	r25, 0x00	; 0
     908:	88 30       	cpi	r24, 0x08	; 8
     90a:	91 05       	cpc	r25, r1
     90c:	08 f0       	brcs	.+2      	; 0x910 <parseRxUbxNavPvt+0x10>
     90e:	26 c1       	rjmp	.+588    	; 0xb5c <parseRxUbxNavPvt+0x25c>
     910:	fc 01       	movw	r30, r24
     912:	88 27       	eor	r24, r24
     914:	ee 58       	subi	r30, 0x8E	; 142
     916:	ff 4f       	sbci	r31, 0xFF	; 255
     918:	8f 4f       	sbci	r24, 0xFF	; 255
     91a:	c5 c6       	rjmp	.+3466   	; 0x16a6 <__tablejump2__>
	{
		case DEBUT_TRAME:
		if(u8Data == 0xB5)
     91c:	25 3b       	cpi	r18, 0xB5	; 181
     91e:	09 f0       	breq	.+2      	; 0x922 <parseRxUbxNavPvt+0x22>
     920:	1d c1       	rjmp	.+570    	; 0xb5c <parseRxUbxNavPvt+0x25c>
		{
			checksumA = 0;
     922:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <checksumA>
			checksumB = 0;
     926:	10 92 37 02 	sts	0x0237, r1	; 0x800237 <checksumB>
			indexTrame = 0;
			indexPayload = 0;
     92a:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <indexPayload>
			retour = 0;
     92e:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <retour>
			trameGpsRx[indexTrame++] = u8Data;
     932:	81 e0       	ldi	r24, 0x01	; 1
     934:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <indexTrame>
     938:	20 93 bc 03 	sts	0x03BC, r18	; 0x8003bc <trameGpsRx>
			state = DEBUT_TRAME_DEUX;
     93c:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <state>
     940:	0d c1       	rjmp	.+538    	; 0xb5c <parseRxUbxNavPvt+0x25c>
		}
		break;
		
		case DEBUT_TRAME_DEUX:
		if(u8Data == 0x62)
     942:	22 36       	cpi	r18, 0x62	; 98
     944:	71 f4       	brne	.+28     	; 0x962 <parseRxUbxNavPvt+0x62>
		{
			trameGpsRx[indexTrame++] = u8Data;
     946:	e0 91 3a 02 	lds	r30, 0x023A	; 0x80023a <indexTrame>
     94a:	81 e0       	ldi	r24, 0x01	; 1
     94c:	8e 0f       	add	r24, r30
     94e:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <indexTrame>
     952:	f0 e0       	ldi	r31, 0x00	; 0
     954:	e4 54       	subi	r30, 0x44	; 68
     956:	fc 4f       	sbci	r31, 0xFC	; 252
     958:	20 83       	st	Z, r18
			state = CLASSE;
     95a:	82 e0       	ldi	r24, 0x02	; 2
     95c:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <state>
     960:	fd c0       	rjmp	.+506    	; 0xb5c <parseRxUbxNavPvt+0x25c>
		}
		else
		{
			state = DEBUT_TRAME;
     962:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <state>
     966:	fa c0       	rjmp	.+500    	; 0xb5c <parseRxUbxNavPvt+0x25c>
		}
		break;
		
		case CLASSE:
		if(u8Data == 0x01)
     968:	21 30       	cpi	r18, 0x01	; 1
     96a:	71 f4       	brne	.+28     	; 0x988 <parseRxUbxNavPvt+0x88>
		{
			trameGpsRx[indexTrame++] = u8Data;
     96c:	e0 91 3a 02 	lds	r30, 0x023A	; 0x80023a <indexTrame>
     970:	81 e0       	ldi	r24, 0x01	; 1
     972:	8e 0f       	add	r24, r30
     974:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <indexTrame>
     978:	f0 e0       	ldi	r31, 0x00	; 0
     97a:	e4 54       	subi	r30, 0x44	; 68
     97c:	fc 4f       	sbci	r31, 0xFC	; 252
     97e:	20 83       	st	Z, r18
			state = ID;
     980:	83 e0       	ldi	r24, 0x03	; 3
     982:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <state>
     986:	ea c0       	rjmp	.+468    	; 0xb5c <parseRxUbxNavPvt+0x25c>
		}
		else
		{
			state = DEBUT_TRAME;
     988:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <state>
     98c:	e7 c0       	rjmp	.+462    	; 0xb5c <parseRxUbxNavPvt+0x25c>
		}
		break;
		
		case ID:
		if(u8Data == PVT)
     98e:	27 30       	cpi	r18, 0x07	; 7
     990:	81 f4       	brne	.+32     	; 0x9b2 <parseRxUbxNavPvt+0xb2>
		{
			trameGpsRx[indexTrame++] = u8Data;
     992:	e0 91 3a 02 	lds	r30, 0x023A	; 0x80023a <indexTrame>
     996:	81 e0       	ldi	r24, 0x01	; 1
     998:	8e 0f       	add	r24, r30
     99a:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <indexTrame>
     99e:	f0 e0       	ldi	r31, 0x00	; 0
     9a0:	e4 54       	subi	r30, 0x44	; 68
     9a2:	fc 4f       	sbci	r31, 0xFC	; 252
     9a4:	20 83       	st	Z, r18
			id = NAV_PVT;
     9a6:	10 92 09 02 	sts	0x0209, r1	; 0x800209 <id>
			state = LENGTH_A;
     9aa:	84 e0       	ldi	r24, 0x04	; 4
     9ac:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <state>
     9b0:	d5 c0       	rjmp	.+426    	; 0xb5c <parseRxUbxNavPvt+0x25c>
		}
		else if(u8Data == ODO)
     9b2:	29 30       	cpi	r18, 0x09	; 9
     9b4:	89 f4       	brne	.+34     	; 0x9d8 <parseRxUbxNavPvt+0xd8>
		{
			trameGpsRx[indexTrame++] = u8Data;
     9b6:	e0 91 3a 02 	lds	r30, 0x023A	; 0x80023a <indexTrame>
     9ba:	81 e0       	ldi	r24, 0x01	; 1
     9bc:	8e 0f       	add	r24, r30
     9be:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <indexTrame>
     9c2:	f0 e0       	ldi	r31, 0x00	; 0
     9c4:	e4 54       	subi	r30, 0x44	; 68
     9c6:	fc 4f       	sbci	r31, 0xFC	; 252
     9c8:	20 83       	st	Z, r18
			id = NAV_ODO;
     9ca:	81 e0       	ldi	r24, 0x01	; 1
     9cc:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <id>
			state = LENGTH_A;
     9d0:	84 e0       	ldi	r24, 0x04	; 4
     9d2:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <state>
     9d6:	c2 c0       	rjmp	.+388    	; 0xb5c <parseRxUbxNavPvt+0x25c>
		}
		else if(u8Data == POSLLH)
     9d8:	22 30       	cpi	r18, 0x02	; 2
     9da:	89 f4       	brne	.+34     	; 0x9fe <parseRxUbxNavPvt+0xfe>
		{
			trameGpsRx[indexTrame++] = u8Data;
     9dc:	e0 91 3a 02 	lds	r30, 0x023A	; 0x80023a <indexTrame>
     9e0:	81 e0       	ldi	r24, 0x01	; 1
     9e2:	8e 0f       	add	r24, r30
     9e4:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <indexTrame>
     9e8:	f0 e0       	ldi	r31, 0x00	; 0
     9ea:	e4 54       	subi	r30, 0x44	; 68
     9ec:	fc 4f       	sbci	r31, 0xFC	; 252
     9ee:	20 83       	st	Z, r18
			id = NAV_POLLSH;
     9f0:	82 e0       	ldi	r24, 0x02	; 2
     9f2:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <id>
			state = LENGTH_A;
     9f6:	84 e0       	ldi	r24, 0x04	; 4
     9f8:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <state>
     9fc:	af c0       	rjmp	.+350    	; 0xb5c <parseRxUbxNavPvt+0x25c>
		}
		else
		{
			id = NONE;
     9fe:	83 e0       	ldi	r24, 0x03	; 3
     a00:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <id>
			state = DEBUT_TRAME;
     a04:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <state>
     a08:	a9 c0       	rjmp	.+338    	; 0xb5c <parseRxUbxNavPvt+0x25c>
		}
		break;
		
		case LENGTH_A:
		trameGpsRx[indexTrame++] = u8Data;
     a0a:	e0 91 3a 02 	lds	r30, 0x023A	; 0x80023a <indexTrame>
     a0e:	81 e0       	ldi	r24, 0x01	; 1
     a10:	8e 0f       	add	r24, r30
     a12:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <indexTrame>
     a16:	f0 e0       	ldi	r31, 0x00	; 0
     a18:	e4 54       	subi	r30, 0x44	; 68
     a1a:	fc 4f       	sbci	r31, 0xFC	; 252
     a1c:	20 83       	st	Z, r18
		length = u8Data + 6;
     a1e:	2a 5f       	subi	r18, 0xFA	; 250
     a20:	20 93 35 02 	sts	0x0235, r18	; 0x800235 <length>
		state = LENGTH_B;
     a24:	85 e0       	ldi	r24, 0x05	; 5
     a26:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <state>
		break;
     a2a:	98 c0       	rjmp	.+304    	; 0xb5c <parseRxUbxNavPvt+0x25c>
		
		case LENGTH_B:
		if(u8Data == 0)
     a2c:	21 11       	cpse	r18, r1
     a2e:	0e c0       	rjmp	.+28     	; 0xa4c <parseRxUbxNavPvt+0x14c>
		{
			trameGpsRx[indexTrame++] = u8Data;
     a30:	e0 91 3a 02 	lds	r30, 0x023A	; 0x80023a <indexTrame>
     a34:	81 e0       	ldi	r24, 0x01	; 1
     a36:	8e 0f       	add	r24, r30
     a38:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <indexTrame>
     a3c:	f0 e0       	ldi	r31, 0x00	; 0
     a3e:	e4 54       	subi	r30, 0x44	; 68
     a40:	fc 4f       	sbci	r31, 0xFC	; 252
     a42:	20 83       	st	Z, r18
			state = PAYLOAD;
     a44:	86 e0       	ldi	r24, 0x06	; 6
     a46:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <state>
     a4a:	88 c0       	rjmp	.+272    	; 0xb5c <parseRxUbxNavPvt+0x25c>
		}
		else
		{
			state = DEBUT_TRAME;
     a4c:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <state>
     a50:	85 c0       	rjmp	.+266    	; 0xb5c <parseRxUbxNavPvt+0x25c>
		}
		break;
		
		case PAYLOAD:
		if(indexPayload < TRAME_UBX_NAV_PVT_SIZE)
     a52:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <indexPayload>
     a56:	84 36       	cpi	r24, 0x64	; 100
     a58:	58 f4       	brcc	.+22     	; 0xa70 <parseRxUbxNavPvt+0x170>
		{
			trameGpsRx[indexTrame++] = u8Data;
     a5a:	e0 91 3a 02 	lds	r30, 0x023A	; 0x80023a <indexTrame>
     a5e:	81 e0       	ldi	r24, 0x01	; 1
     a60:	8e 0f       	add	r24, r30
     a62:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <indexTrame>
     a66:	f0 e0       	ldi	r31, 0x00	; 0
     a68:	e4 54       	subi	r30, 0x44	; 68
     a6a:	fc 4f       	sbci	r31, 0xFC	; 252
     a6c:	20 83       	st	Z, r18
     a6e:	03 c0       	rjmp	.+6      	; 0xa76 <parseRxUbxNavPvt+0x176>
			
		}
		else
		state = CHECKSUM_VERIF;
     a70:	87 e0       	ldi	r24, 0x07	; 7
     a72:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <state>
		
		indexPayload++;
     a76:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <indexPayload>
     a7a:	8f 5f       	subi	r24, 0xFF	; 255
     a7c:	80 93 39 02 	sts	0x0239, r24	; 0x800239 <indexPayload>
		break;
     a80:	6d c0       	rjmp	.+218    	; 0xb5c <parseRxUbxNavPvt+0x25c>
		
		case CHECKSUM_VERIF:
		
		for(uint8_t n=2;n<length;n++)
		{
			checksumA = checksumA + trameGpsRx[n];
     a82:	e9 2f       	mov	r30, r25
     a84:	f0 e0       	ldi	r31, 0x00	; 0
     a86:	e4 54       	subi	r30, 0x44	; 68
     a88:	fc 4f       	sbci	r31, 0xFC	; 252
     a8a:	20 81       	ld	r18, Z
     a8c:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <checksumA>
     a90:	82 0f       	add	r24, r18
     a92:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <checksumA>
			checksumB = checksumB + checksumA;
     a96:	20 91 37 02 	lds	r18, 0x0237	; 0x800237 <checksumB>
     a9a:	82 0f       	add	r24, r18
     a9c:	80 93 37 02 	sts	0x0237, r24	; 0x800237 <checksumB>
		indexPayload++;
		break;
		
		case CHECKSUM_VERIF:
		
		for(uint8_t n=2;n<length;n++)
     aa0:	9f 5f       	subi	r25, 0xFF	; 255
     aa2:	01 c0       	rjmp	.+2      	; 0xaa6 <parseRxUbxNavPvt+0x1a6>
long latitude = 0;

uint8_t parseRxUbxNavPvt(uint8_t u8Data)
{
	
	switch(state)
     aa4:	92 e0       	ldi	r25, 0x02	; 2
		indexPayload++;
		break;
		
		case CHECKSUM_VERIF:
		
		for(uint8_t n=2;n<length;n++)
     aa6:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <length>
     aaa:	98 17       	cp	r25, r24
     aac:	50 f3       	brcs	.-44     	; 0xa82 <parseRxUbxNavPvt+0x182>
		{
			checksumA = checksumA + trameGpsRx[n];
			checksumB = checksumB + checksumA;
		}
		if((checksumA == trameGpsRx[length]) && (checksumB == trameGpsRx[length+1]))
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	fc 01       	movw	r30, r24
     ab2:	e4 54       	subi	r30, 0x44	; 68
     ab4:	fc 4f       	sbci	r31, 0xFC	; 252
     ab6:	30 81       	ld	r19, Z
     ab8:	20 91 38 02 	lds	r18, 0x0238	; 0x800238 <checksumA>
     abc:	32 13       	cpse	r19, r18
     abe:	43 c0       	rjmp	.+134    	; 0xb46 <parseRxUbxNavPvt+0x246>
     ac0:	fc 01       	movw	r30, r24
     ac2:	e3 54       	subi	r30, 0x43	; 67
     ac4:	fc 4f       	sbci	r31, 0xFC	; 252
     ac6:	90 81       	ld	r25, Z
     ac8:	80 91 37 02 	lds	r24, 0x0237	; 0x800237 <checksumB>
     acc:	98 13       	cpse	r25, r24
     ace:	3b c0       	rjmp	.+118    	; 0xb46 <parseRxUbxNavPvt+0x246>
		{
			retour = 1;
     ad0:	81 e0       	ldi	r24, 0x01	; 1
     ad2:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <retour>
			switch(id)
     ad6:	80 91 09 02 	lds	r24, 0x0209	; 0x800209 <id>
     ada:	81 30       	cpi	r24, 0x01	; 1
     adc:	81 f1       	breq	.+96     	; 0xb3e <parseRxUbxNavPvt+0x23e>
     ade:	78 f0       	brcs	.+30     	; 0xafe <parseRxUbxNavPvt+0x1fe>
     ae0:	82 30       	cpi	r24, 0x02	; 2
     ae2:	e9 f0       	breq	.+58     	; 0xb1e <parseRxUbxNavPvt+0x21e>
     ae4:	32 c0       	rjmp	.+100    	; 0xb4a <parseRxUbxNavPvt+0x24a>
			{
				case NAV_PVT:
				for(uint8_t x = 0; x<TRAME_UBX_NAV_PVT_SIZE; x++)
				{
					trameGpsNavPvtValide[x] = trameGpsRx[x];
     ae6:	82 2f       	mov	r24, r18
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	fc 01       	movw	r30, r24
     aec:	e4 54       	subi	r30, 0x44	; 68
     aee:	fc 4f       	sbci	r31, 0xFC	; 252
     af0:	30 81       	ld	r19, Z
     af2:	fc 01       	movw	r30, r24
     af4:	e0 5e       	subi	r30, 0xE0	; 224
     af6:	fb 4f       	sbci	r31, 0xFB	; 251
     af8:	30 83       	st	Z, r19
		{
			retour = 1;
			switch(id)
			{
				case NAV_PVT:
				for(uint8_t x = 0; x<TRAME_UBX_NAV_PVT_SIZE; x++)
     afa:	2f 5f       	subi	r18, 0xFF	; 255
     afc:	01 c0       	rjmp	.+2      	; 0xb00 <parseRxUbxNavPvt+0x200>
			checksumB = checksumB + checksumA;
		}
		if((checksumA == trameGpsRx[length]) && (checksumB == trameGpsRx[length+1]))
		{
			retour = 1;
			switch(id)
     afe:	20 e0       	ldi	r18, 0x00	; 0
			{
				case NAV_PVT:
				for(uint8_t x = 0; x<TRAME_UBX_NAV_PVT_SIZE; x++)
     b00:	24 36       	cpi	r18, 0x64	; 100
     b02:	88 f3       	brcs	.-30     	; 0xae6 <parseRxUbxNavPvt+0x1e6>
     b04:	22 c0       	rjmp	.+68     	; 0xb4a <parseRxUbxNavPvt+0x24a>
				}
				break;
				case NAV_POLLSH:
				for(uint8_t x = 0; x<TRAME_UBX_NAV_POSLLH_SIZE; x++)
				{
					trameGpsNavPosllhValide[x] = trameGpsRx[x];
     b06:	82 2f       	mov	r24, r18
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	fc 01       	movw	r30, r24
     b0c:	e4 54       	subi	r30, 0x44	; 68
     b0e:	fc 4f       	sbci	r31, 0xFC	; 252
     b10:	30 81       	ld	r19, Z
     b12:	fc 01       	movw	r30, r24
     b14:	e8 56       	subi	r30, 0x68	; 104
     b16:	fc 4f       	sbci	r31, 0xFC	; 252
     b18:	30 83       	st	Z, r19
				{
					trameGpsNavPvtValide[x] = trameGpsRx[x];
				}
				break;
				case NAV_POLLSH:
				for(uint8_t x = 0; x<TRAME_UBX_NAV_POSLLH_SIZE; x++)
     b1a:	2f 5f       	subi	r18, 0xFF	; 255
     b1c:	01 c0       	rjmp	.+2      	; 0xb20 <parseRxUbxNavPvt+0x220>
			checksumB = checksumB + checksumA;
		}
		if((checksumA == trameGpsRx[length]) && (checksumB == trameGpsRx[length+1]))
		{
			retour = 1;
			switch(id)
     b1e:	20 e0       	ldi	r18, 0x00	; 0
				{
					trameGpsNavPvtValide[x] = trameGpsRx[x];
				}
				break;
				case NAV_POLLSH:
				for(uint8_t x = 0; x<TRAME_UBX_NAV_POSLLH_SIZE; x++)
     b20:	24 32       	cpi	r18, 0x24	; 36
     b22:	88 f3       	brcs	.-30     	; 0xb06 <parseRxUbxNavPvt+0x206>
     b24:	12 c0       	rjmp	.+36     	; 0xb4a <parseRxUbxNavPvt+0x24a>
				}
				break;
				case NAV_ODO:
				for(uint8_t x = 0; x<TRAME_UBX_NAV_ODO_SIZE; x++)
				{
					trameGpsNavOdoValide[x] = trameGpsRx[x];
     b26:	82 2f       	mov	r24, r18
     b28:	90 e0       	ldi	r25, 0x00	; 0
     b2a:	fc 01       	movw	r30, r24
     b2c:	e4 54       	subi	r30, 0x44	; 68
     b2e:	fc 4f       	sbci	r31, 0xFC	; 252
     b30:	30 81       	ld	r19, Z
     b32:	fc 01       	movw	r30, r24
     b34:	e4 58       	subi	r30, 0x84	; 132
     b36:	fc 4f       	sbci	r31, 0xFC	; 252
     b38:	30 83       	st	Z, r19
				{
					trameGpsNavPosllhValide[x] = trameGpsRx[x];
				}
				break;
				case NAV_ODO:
				for(uint8_t x = 0; x<TRAME_UBX_NAV_ODO_SIZE; x++)
     b3a:	2f 5f       	subi	r18, 0xFF	; 255
     b3c:	01 c0       	rjmp	.+2      	; 0xb40 <parseRxUbxNavPvt+0x240>
			checksumB = checksumB + checksumA;
		}
		if((checksumA == trameGpsRx[length]) && (checksumB == trameGpsRx[length+1]))
		{
			retour = 1;
			switch(id)
     b3e:	20 e0       	ldi	r18, 0x00	; 0
				{
					trameGpsNavPosllhValide[x] = trameGpsRx[x];
				}
				break;
				case NAV_ODO:
				for(uint8_t x = 0; x<TRAME_UBX_NAV_ODO_SIZE; x++)
     b40:	2c 31       	cpi	r18, 0x1C	; 28
     b42:	88 f3       	brcs	.-30     	; 0xb26 <parseRxUbxNavPvt+0x226>
     b44:	02 c0       	rjmp	.+4      	; 0xb4a <parseRxUbxNavPvt+0x24a>
				break;
			}
		}
		else
		{
			retour = 0;
     b46:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <retour>
		}
		memset(trameGpsRx, 0, sizeof(trameGpsRx));
     b4a:	84 e6       	ldi	r24, 0x64	; 100
     b4c:	ec eb       	ldi	r30, 0xBC	; 188
     b4e:	f3 e0       	ldi	r31, 0x03	; 3
     b50:	df 01       	movw	r26, r30
     b52:	1d 92       	st	X+, r1
     b54:	8a 95       	dec	r24
     b56:	e9 f7       	brne	.-6      	; 0xb52 <parseRxUbxNavPvt+0x252>
		state = DEBUT_TRAME;
     b58:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <state>
		break;
	}
	return retour;
}
     b5c:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <retour>
     b60:	08 95       	ret

00000b62 <getNavPvtLat>:
float getNavPvtLat()
{
	uint8_t tabLat[4];
	
	tabLat[0] = trameGpsNavPvtValide[34];
     b62:	e0 e2       	ldi	r30, 0x20	; 32
     b64:	f4 e0       	ldi	r31, 0x04	; 4
     b66:	62 a1       	ldd	r22, Z+34	; 0x22
	tabLat[1] = trameGpsNavPvtValide[35];
     b68:	73 a1       	ldd	r23, Z+35	; 0x23
	tabLat[2] = trameGpsNavPvtValide[36];
     b6a:	84 a1       	ldd	r24, Z+36	; 0x24
	tabLat[3] = trameGpsNavPvtValide[37];
     b6c:	95 a1       	ldd	r25, Z+37	; 0x25
	
	latitude = 0;
	memcpy(&latitude, tabLat, sizeof(latitude));
     b6e:	ed e2       	ldi	r30, 0x2D	; 45
     b70:	f2 e0       	ldi	r31, 0x02	; 2
     b72:	60 83       	st	Z, r22
     b74:	71 83       	std	Z+1, r23	; 0x01
     b76:	82 83       	std	Z+2, r24	; 0x02
     b78:	93 83       	std	Z+3, r25	; 0x03
	return (float)latitude;
     b7a:	0a c1       	rjmp	.+532    	; 0xd90 <__floatsisf>
}
     b7c:	08 95       	ret

00000b7e <getNavPvtLon>:
float getNavPvtLon()
{
	uint8_t tabLon[4];
	
	tabLon[0] = trameGpsNavPvtValide[30];
     b7e:	e0 e2       	ldi	r30, 0x20	; 32
     b80:	f4 e0       	ldi	r31, 0x04	; 4
     b82:	66 8d       	ldd	r22, Z+30	; 0x1e
	tabLon[1] = trameGpsNavPvtValide[31];
     b84:	77 8d       	ldd	r23, Z+31	; 0x1f
	tabLon[2] = trameGpsNavPvtValide[32];
     b86:	80 a1       	ldd	r24, Z+32	; 0x20
	tabLon[3] = trameGpsNavPvtValide[33];
     b88:	91 a1       	ldd	r25, Z+33	; 0x21
	
	longitude = 0;
	memcpy(&longitude, tabLon, sizeof(longitude));
     b8a:	e1 e3       	ldi	r30, 0x31	; 49
     b8c:	f2 e0       	ldi	r31, 0x02	; 2
     b8e:	60 83       	st	Z, r22
     b90:	71 83       	std	Z+1, r23	; 0x01
     b92:	82 83       	std	Z+2, r24	; 0x02
     b94:	93 83       	std	Z+3, r25	; 0x03
	return (float)longitude;
     b96:	fc c0       	rjmp	.+504    	; 0xd90 <__floatsisf>
}
     b98:	08 95       	ret

00000b9a <__subsf3>:
     b9a:	50 58       	subi	r21, 0x80	; 128

00000b9c <__addsf3>:
     b9c:	bb 27       	eor	r27, r27
     b9e:	aa 27       	eor	r26, r26
     ba0:	0e d0       	rcall	.+28     	; 0xbbe <__addsf3x>
     ba2:	48 c1       	rjmp	.+656    	; 0xe34 <__fp_round>
     ba4:	39 d1       	rcall	.+626    	; 0xe18 <__fp_pscA>
     ba6:	30 f0       	brcs	.+12     	; 0xbb4 <__addsf3+0x18>
     ba8:	3e d1       	rcall	.+636    	; 0xe26 <__fp_pscB>
     baa:	20 f0       	brcs	.+8      	; 0xbb4 <__addsf3+0x18>
     bac:	31 f4       	brne	.+12     	; 0xbba <__addsf3+0x1e>
     bae:	9f 3f       	cpi	r25, 0xFF	; 255
     bb0:	11 f4       	brne	.+4      	; 0xbb6 <__addsf3+0x1a>
     bb2:	1e f4       	brtc	.+6      	; 0xbba <__addsf3+0x1e>
     bb4:	2e c1       	rjmp	.+604    	; 0xe12 <__fp_nan>
     bb6:	0e f4       	brtc	.+2      	; 0xbba <__addsf3+0x1e>
     bb8:	e0 95       	com	r30
     bba:	e7 fb       	bst	r30, 7
     bbc:	24 c1       	rjmp	.+584    	; 0xe06 <__fp_inf>

00000bbe <__addsf3x>:
     bbe:	e9 2f       	mov	r30, r25
     bc0:	4a d1       	rcall	.+660    	; 0xe56 <__fp_split3>
     bc2:	80 f3       	brcs	.-32     	; 0xba4 <__addsf3+0x8>
     bc4:	ba 17       	cp	r27, r26
     bc6:	62 07       	cpc	r22, r18
     bc8:	73 07       	cpc	r23, r19
     bca:	84 07       	cpc	r24, r20
     bcc:	95 07       	cpc	r25, r21
     bce:	18 f0       	brcs	.+6      	; 0xbd6 <__addsf3x+0x18>
     bd0:	71 f4       	brne	.+28     	; 0xbee <__addsf3x+0x30>
     bd2:	9e f5       	brtc	.+102    	; 0xc3a <__addsf3x+0x7c>
     bd4:	62 c1       	rjmp	.+708    	; 0xe9a <__fp_zero>
     bd6:	0e f4       	brtc	.+2      	; 0xbda <__addsf3x+0x1c>
     bd8:	e0 95       	com	r30
     bda:	0b 2e       	mov	r0, r27
     bdc:	ba 2f       	mov	r27, r26
     bde:	a0 2d       	mov	r26, r0
     be0:	0b 01       	movw	r0, r22
     be2:	b9 01       	movw	r22, r18
     be4:	90 01       	movw	r18, r0
     be6:	0c 01       	movw	r0, r24
     be8:	ca 01       	movw	r24, r20
     bea:	a0 01       	movw	r20, r0
     bec:	11 24       	eor	r1, r1
     bee:	ff 27       	eor	r31, r31
     bf0:	59 1b       	sub	r21, r25
     bf2:	99 f0       	breq	.+38     	; 0xc1a <__addsf3x+0x5c>
     bf4:	59 3f       	cpi	r21, 0xF9	; 249
     bf6:	50 f4       	brcc	.+20     	; 0xc0c <__addsf3x+0x4e>
     bf8:	50 3e       	cpi	r21, 0xE0	; 224
     bfa:	68 f1       	brcs	.+90     	; 0xc56 <__addsf3x+0x98>
     bfc:	1a 16       	cp	r1, r26
     bfe:	f0 40       	sbci	r31, 0x00	; 0
     c00:	a2 2f       	mov	r26, r18
     c02:	23 2f       	mov	r18, r19
     c04:	34 2f       	mov	r19, r20
     c06:	44 27       	eor	r20, r20
     c08:	58 5f       	subi	r21, 0xF8	; 248
     c0a:	f3 cf       	rjmp	.-26     	; 0xbf2 <__addsf3x+0x34>
     c0c:	46 95       	lsr	r20
     c0e:	37 95       	ror	r19
     c10:	27 95       	ror	r18
     c12:	a7 95       	ror	r26
     c14:	f0 40       	sbci	r31, 0x00	; 0
     c16:	53 95       	inc	r21
     c18:	c9 f7       	brne	.-14     	; 0xc0c <__addsf3x+0x4e>
     c1a:	7e f4       	brtc	.+30     	; 0xc3a <__addsf3x+0x7c>
     c1c:	1f 16       	cp	r1, r31
     c1e:	ba 0b       	sbc	r27, r26
     c20:	62 0b       	sbc	r22, r18
     c22:	73 0b       	sbc	r23, r19
     c24:	84 0b       	sbc	r24, r20
     c26:	ba f0       	brmi	.+46     	; 0xc56 <__addsf3x+0x98>
     c28:	91 50       	subi	r25, 0x01	; 1
     c2a:	a1 f0       	breq	.+40     	; 0xc54 <__addsf3x+0x96>
     c2c:	ff 0f       	add	r31, r31
     c2e:	bb 1f       	adc	r27, r27
     c30:	66 1f       	adc	r22, r22
     c32:	77 1f       	adc	r23, r23
     c34:	88 1f       	adc	r24, r24
     c36:	c2 f7       	brpl	.-16     	; 0xc28 <__addsf3x+0x6a>
     c38:	0e c0       	rjmp	.+28     	; 0xc56 <__addsf3x+0x98>
     c3a:	ba 0f       	add	r27, r26
     c3c:	62 1f       	adc	r22, r18
     c3e:	73 1f       	adc	r23, r19
     c40:	84 1f       	adc	r24, r20
     c42:	48 f4       	brcc	.+18     	; 0xc56 <__addsf3x+0x98>
     c44:	87 95       	ror	r24
     c46:	77 95       	ror	r23
     c48:	67 95       	ror	r22
     c4a:	b7 95       	ror	r27
     c4c:	f7 95       	ror	r31
     c4e:	9e 3f       	cpi	r25, 0xFE	; 254
     c50:	08 f0       	brcs	.+2      	; 0xc54 <__addsf3x+0x96>
     c52:	b3 cf       	rjmp	.-154    	; 0xbba <__addsf3+0x1e>
     c54:	93 95       	inc	r25
     c56:	88 0f       	add	r24, r24
     c58:	08 f0       	brcs	.+2      	; 0xc5c <__addsf3x+0x9e>
     c5a:	99 27       	eor	r25, r25
     c5c:	ee 0f       	add	r30, r30
     c5e:	97 95       	ror	r25
     c60:	87 95       	ror	r24
     c62:	08 95       	ret

00000c64 <__divsf3>:
     c64:	0c d0       	rcall	.+24     	; 0xc7e <__divsf3x>
     c66:	e6 c0       	rjmp	.+460    	; 0xe34 <__fp_round>
     c68:	de d0       	rcall	.+444    	; 0xe26 <__fp_pscB>
     c6a:	40 f0       	brcs	.+16     	; 0xc7c <__divsf3+0x18>
     c6c:	d5 d0       	rcall	.+426    	; 0xe18 <__fp_pscA>
     c6e:	30 f0       	brcs	.+12     	; 0xc7c <__divsf3+0x18>
     c70:	21 f4       	brne	.+8      	; 0xc7a <__divsf3+0x16>
     c72:	5f 3f       	cpi	r21, 0xFF	; 255
     c74:	19 f0       	breq	.+6      	; 0xc7c <__divsf3+0x18>
     c76:	c7 c0       	rjmp	.+398    	; 0xe06 <__fp_inf>
     c78:	51 11       	cpse	r21, r1
     c7a:	10 c1       	rjmp	.+544    	; 0xe9c <__fp_szero>
     c7c:	ca c0       	rjmp	.+404    	; 0xe12 <__fp_nan>

00000c7e <__divsf3x>:
     c7e:	eb d0       	rcall	.+470    	; 0xe56 <__fp_split3>
     c80:	98 f3       	brcs	.-26     	; 0xc68 <__divsf3+0x4>

00000c82 <__divsf3_pse>:
     c82:	99 23       	and	r25, r25
     c84:	c9 f3       	breq	.-14     	; 0xc78 <__divsf3+0x14>
     c86:	55 23       	and	r21, r21
     c88:	b1 f3       	breq	.-20     	; 0xc76 <__divsf3+0x12>
     c8a:	95 1b       	sub	r25, r21
     c8c:	55 0b       	sbc	r21, r21
     c8e:	bb 27       	eor	r27, r27
     c90:	aa 27       	eor	r26, r26
     c92:	62 17       	cp	r22, r18
     c94:	73 07       	cpc	r23, r19
     c96:	84 07       	cpc	r24, r20
     c98:	38 f0       	brcs	.+14     	; 0xca8 <__divsf3_pse+0x26>
     c9a:	9f 5f       	subi	r25, 0xFF	; 255
     c9c:	5f 4f       	sbci	r21, 0xFF	; 255
     c9e:	22 0f       	add	r18, r18
     ca0:	33 1f       	adc	r19, r19
     ca2:	44 1f       	adc	r20, r20
     ca4:	aa 1f       	adc	r26, r26
     ca6:	a9 f3       	breq	.-22     	; 0xc92 <__divsf3_pse+0x10>
     ca8:	33 d0       	rcall	.+102    	; 0xd10 <__divsf3_pse+0x8e>
     caa:	0e 2e       	mov	r0, r30
     cac:	3a f0       	brmi	.+14     	; 0xcbc <__divsf3_pse+0x3a>
     cae:	e0 e8       	ldi	r30, 0x80	; 128
     cb0:	30 d0       	rcall	.+96     	; 0xd12 <__divsf3_pse+0x90>
     cb2:	91 50       	subi	r25, 0x01	; 1
     cb4:	50 40       	sbci	r21, 0x00	; 0
     cb6:	e6 95       	lsr	r30
     cb8:	00 1c       	adc	r0, r0
     cba:	ca f7       	brpl	.-14     	; 0xcae <__divsf3_pse+0x2c>
     cbc:	29 d0       	rcall	.+82     	; 0xd10 <__divsf3_pse+0x8e>
     cbe:	fe 2f       	mov	r31, r30
     cc0:	27 d0       	rcall	.+78     	; 0xd10 <__divsf3_pse+0x8e>
     cc2:	66 0f       	add	r22, r22
     cc4:	77 1f       	adc	r23, r23
     cc6:	88 1f       	adc	r24, r24
     cc8:	bb 1f       	adc	r27, r27
     cca:	26 17       	cp	r18, r22
     ccc:	37 07       	cpc	r19, r23
     cce:	48 07       	cpc	r20, r24
     cd0:	ab 07       	cpc	r26, r27
     cd2:	b0 e8       	ldi	r27, 0x80	; 128
     cd4:	09 f0       	breq	.+2      	; 0xcd8 <__divsf3_pse+0x56>
     cd6:	bb 0b       	sbc	r27, r27
     cd8:	80 2d       	mov	r24, r0
     cda:	bf 01       	movw	r22, r30
     cdc:	ff 27       	eor	r31, r31
     cde:	93 58       	subi	r25, 0x83	; 131
     ce0:	5f 4f       	sbci	r21, 0xFF	; 255
     ce2:	2a f0       	brmi	.+10     	; 0xcee <__divsf3_pse+0x6c>
     ce4:	9e 3f       	cpi	r25, 0xFE	; 254
     ce6:	51 05       	cpc	r21, r1
     ce8:	68 f0       	brcs	.+26     	; 0xd04 <__divsf3_pse+0x82>
     cea:	8d c0       	rjmp	.+282    	; 0xe06 <__fp_inf>
     cec:	d7 c0       	rjmp	.+430    	; 0xe9c <__fp_szero>
     cee:	5f 3f       	cpi	r21, 0xFF	; 255
     cf0:	ec f3       	brlt	.-6      	; 0xcec <__divsf3_pse+0x6a>
     cf2:	98 3e       	cpi	r25, 0xE8	; 232
     cf4:	dc f3       	brlt	.-10     	; 0xcec <__divsf3_pse+0x6a>
     cf6:	86 95       	lsr	r24
     cf8:	77 95       	ror	r23
     cfa:	67 95       	ror	r22
     cfc:	b7 95       	ror	r27
     cfe:	f7 95       	ror	r31
     d00:	9f 5f       	subi	r25, 0xFF	; 255
     d02:	c9 f7       	brne	.-14     	; 0xcf6 <__divsf3_pse+0x74>
     d04:	88 0f       	add	r24, r24
     d06:	91 1d       	adc	r25, r1
     d08:	96 95       	lsr	r25
     d0a:	87 95       	ror	r24
     d0c:	97 f9       	bld	r25, 7
     d0e:	08 95       	ret
     d10:	e1 e0       	ldi	r30, 0x01	; 1
     d12:	66 0f       	add	r22, r22
     d14:	77 1f       	adc	r23, r23
     d16:	88 1f       	adc	r24, r24
     d18:	bb 1f       	adc	r27, r27
     d1a:	62 17       	cp	r22, r18
     d1c:	73 07       	cpc	r23, r19
     d1e:	84 07       	cpc	r24, r20
     d20:	ba 07       	cpc	r27, r26
     d22:	20 f0       	brcs	.+8      	; 0xd2c <__divsf3_pse+0xaa>
     d24:	62 1b       	sub	r22, r18
     d26:	73 0b       	sbc	r23, r19
     d28:	84 0b       	sbc	r24, r20
     d2a:	ba 0b       	sbc	r27, r26
     d2c:	ee 1f       	adc	r30, r30
     d2e:	88 f7       	brcc	.-30     	; 0xd12 <__divsf3_pse+0x90>
     d30:	e0 95       	com	r30
     d32:	08 95       	ret

00000d34 <__fixunssfsi>:
     d34:	98 d0       	rcall	.+304    	; 0xe66 <__fp_splitA>
     d36:	88 f0       	brcs	.+34     	; 0xd5a <__fixunssfsi+0x26>
     d38:	9f 57       	subi	r25, 0x7F	; 127
     d3a:	90 f0       	brcs	.+36     	; 0xd60 <__fixunssfsi+0x2c>
     d3c:	b9 2f       	mov	r27, r25
     d3e:	99 27       	eor	r25, r25
     d40:	b7 51       	subi	r27, 0x17	; 23
     d42:	a0 f0       	brcs	.+40     	; 0xd6c <__fixunssfsi+0x38>
     d44:	d1 f0       	breq	.+52     	; 0xd7a <__fixunssfsi+0x46>
     d46:	66 0f       	add	r22, r22
     d48:	77 1f       	adc	r23, r23
     d4a:	88 1f       	adc	r24, r24
     d4c:	99 1f       	adc	r25, r25
     d4e:	1a f0       	brmi	.+6      	; 0xd56 <__fixunssfsi+0x22>
     d50:	ba 95       	dec	r27
     d52:	c9 f7       	brne	.-14     	; 0xd46 <__fixunssfsi+0x12>
     d54:	12 c0       	rjmp	.+36     	; 0xd7a <__fixunssfsi+0x46>
     d56:	b1 30       	cpi	r27, 0x01	; 1
     d58:	81 f0       	breq	.+32     	; 0xd7a <__fixunssfsi+0x46>
     d5a:	9f d0       	rcall	.+318    	; 0xe9a <__fp_zero>
     d5c:	b1 e0       	ldi	r27, 0x01	; 1
     d5e:	08 95       	ret
     d60:	9c c0       	rjmp	.+312    	; 0xe9a <__fp_zero>
     d62:	67 2f       	mov	r22, r23
     d64:	78 2f       	mov	r23, r24
     d66:	88 27       	eor	r24, r24
     d68:	b8 5f       	subi	r27, 0xF8	; 248
     d6a:	39 f0       	breq	.+14     	; 0xd7a <__fixunssfsi+0x46>
     d6c:	b9 3f       	cpi	r27, 0xF9	; 249
     d6e:	cc f3       	brlt	.-14     	; 0xd62 <__fixunssfsi+0x2e>
     d70:	86 95       	lsr	r24
     d72:	77 95       	ror	r23
     d74:	67 95       	ror	r22
     d76:	b3 95       	inc	r27
     d78:	d9 f7       	brne	.-10     	; 0xd70 <__fixunssfsi+0x3c>
     d7a:	3e f4       	brtc	.+14     	; 0xd8a <__fixunssfsi+0x56>
     d7c:	90 95       	com	r25
     d7e:	80 95       	com	r24
     d80:	70 95       	com	r23
     d82:	61 95       	neg	r22
     d84:	7f 4f       	sbci	r23, 0xFF	; 255
     d86:	8f 4f       	sbci	r24, 0xFF	; 255
     d88:	9f 4f       	sbci	r25, 0xFF	; 255
     d8a:	08 95       	ret

00000d8c <__floatunsisf>:
     d8c:	e8 94       	clt
     d8e:	09 c0       	rjmp	.+18     	; 0xda2 <__floatsisf+0x12>

00000d90 <__floatsisf>:
     d90:	97 fb       	bst	r25, 7
     d92:	3e f4       	brtc	.+14     	; 0xda2 <__floatsisf+0x12>
     d94:	90 95       	com	r25
     d96:	80 95       	com	r24
     d98:	70 95       	com	r23
     d9a:	61 95       	neg	r22
     d9c:	7f 4f       	sbci	r23, 0xFF	; 255
     d9e:	8f 4f       	sbci	r24, 0xFF	; 255
     da0:	9f 4f       	sbci	r25, 0xFF	; 255
     da2:	99 23       	and	r25, r25
     da4:	a9 f0       	breq	.+42     	; 0xdd0 <__floatsisf+0x40>
     da6:	f9 2f       	mov	r31, r25
     da8:	96 e9       	ldi	r25, 0x96	; 150
     daa:	bb 27       	eor	r27, r27
     dac:	93 95       	inc	r25
     dae:	f6 95       	lsr	r31
     db0:	87 95       	ror	r24
     db2:	77 95       	ror	r23
     db4:	67 95       	ror	r22
     db6:	b7 95       	ror	r27
     db8:	f1 11       	cpse	r31, r1
     dba:	f8 cf       	rjmp	.-16     	; 0xdac <__floatsisf+0x1c>
     dbc:	fa f4       	brpl	.+62     	; 0xdfc <__floatsisf+0x6c>
     dbe:	bb 0f       	add	r27, r27
     dc0:	11 f4       	brne	.+4      	; 0xdc6 <__floatsisf+0x36>
     dc2:	60 ff       	sbrs	r22, 0
     dc4:	1b c0       	rjmp	.+54     	; 0xdfc <__floatsisf+0x6c>
     dc6:	6f 5f       	subi	r22, 0xFF	; 255
     dc8:	7f 4f       	sbci	r23, 0xFF	; 255
     dca:	8f 4f       	sbci	r24, 0xFF	; 255
     dcc:	9f 4f       	sbci	r25, 0xFF	; 255
     dce:	16 c0       	rjmp	.+44     	; 0xdfc <__floatsisf+0x6c>
     dd0:	88 23       	and	r24, r24
     dd2:	11 f0       	breq	.+4      	; 0xdd8 <__floatsisf+0x48>
     dd4:	96 e9       	ldi	r25, 0x96	; 150
     dd6:	11 c0       	rjmp	.+34     	; 0xdfa <__floatsisf+0x6a>
     dd8:	77 23       	and	r23, r23
     dda:	21 f0       	breq	.+8      	; 0xde4 <__floatsisf+0x54>
     ddc:	9e e8       	ldi	r25, 0x8E	; 142
     dde:	87 2f       	mov	r24, r23
     de0:	76 2f       	mov	r23, r22
     de2:	05 c0       	rjmp	.+10     	; 0xdee <__floatsisf+0x5e>
     de4:	66 23       	and	r22, r22
     de6:	71 f0       	breq	.+28     	; 0xe04 <__floatsisf+0x74>
     de8:	96 e8       	ldi	r25, 0x86	; 134
     dea:	86 2f       	mov	r24, r22
     dec:	70 e0       	ldi	r23, 0x00	; 0
     dee:	60 e0       	ldi	r22, 0x00	; 0
     df0:	2a f0       	brmi	.+10     	; 0xdfc <__floatsisf+0x6c>
     df2:	9a 95       	dec	r25
     df4:	66 0f       	add	r22, r22
     df6:	77 1f       	adc	r23, r23
     df8:	88 1f       	adc	r24, r24
     dfa:	da f7       	brpl	.-10     	; 0xdf2 <__floatsisf+0x62>
     dfc:	88 0f       	add	r24, r24
     dfe:	96 95       	lsr	r25
     e00:	87 95       	ror	r24
     e02:	97 f9       	bld	r25, 7
     e04:	08 95       	ret

00000e06 <__fp_inf>:
     e06:	97 f9       	bld	r25, 7
     e08:	9f 67       	ori	r25, 0x7F	; 127
     e0a:	80 e8       	ldi	r24, 0x80	; 128
     e0c:	70 e0       	ldi	r23, 0x00	; 0
     e0e:	60 e0       	ldi	r22, 0x00	; 0
     e10:	08 95       	ret

00000e12 <__fp_nan>:
     e12:	9f ef       	ldi	r25, 0xFF	; 255
     e14:	80 ec       	ldi	r24, 0xC0	; 192
     e16:	08 95       	ret

00000e18 <__fp_pscA>:
     e18:	00 24       	eor	r0, r0
     e1a:	0a 94       	dec	r0
     e1c:	16 16       	cp	r1, r22
     e1e:	17 06       	cpc	r1, r23
     e20:	18 06       	cpc	r1, r24
     e22:	09 06       	cpc	r0, r25
     e24:	08 95       	ret

00000e26 <__fp_pscB>:
     e26:	00 24       	eor	r0, r0
     e28:	0a 94       	dec	r0
     e2a:	12 16       	cp	r1, r18
     e2c:	13 06       	cpc	r1, r19
     e2e:	14 06       	cpc	r1, r20
     e30:	05 06       	cpc	r0, r21
     e32:	08 95       	ret

00000e34 <__fp_round>:
     e34:	09 2e       	mov	r0, r25
     e36:	03 94       	inc	r0
     e38:	00 0c       	add	r0, r0
     e3a:	11 f4       	brne	.+4      	; 0xe40 <__fp_round+0xc>
     e3c:	88 23       	and	r24, r24
     e3e:	52 f0       	brmi	.+20     	; 0xe54 <__fp_round+0x20>
     e40:	bb 0f       	add	r27, r27
     e42:	40 f4       	brcc	.+16     	; 0xe54 <__fp_round+0x20>
     e44:	bf 2b       	or	r27, r31
     e46:	11 f4       	brne	.+4      	; 0xe4c <__fp_round+0x18>
     e48:	60 ff       	sbrs	r22, 0
     e4a:	04 c0       	rjmp	.+8      	; 0xe54 <__fp_round+0x20>
     e4c:	6f 5f       	subi	r22, 0xFF	; 255
     e4e:	7f 4f       	sbci	r23, 0xFF	; 255
     e50:	8f 4f       	sbci	r24, 0xFF	; 255
     e52:	9f 4f       	sbci	r25, 0xFF	; 255
     e54:	08 95       	ret

00000e56 <__fp_split3>:
     e56:	57 fd       	sbrc	r21, 7
     e58:	90 58       	subi	r25, 0x80	; 128
     e5a:	44 0f       	add	r20, r20
     e5c:	55 1f       	adc	r21, r21
     e5e:	59 f0       	breq	.+22     	; 0xe76 <__fp_splitA+0x10>
     e60:	5f 3f       	cpi	r21, 0xFF	; 255
     e62:	71 f0       	breq	.+28     	; 0xe80 <__fp_splitA+0x1a>
     e64:	47 95       	ror	r20

00000e66 <__fp_splitA>:
     e66:	88 0f       	add	r24, r24
     e68:	97 fb       	bst	r25, 7
     e6a:	99 1f       	adc	r25, r25
     e6c:	61 f0       	breq	.+24     	; 0xe86 <__fp_splitA+0x20>
     e6e:	9f 3f       	cpi	r25, 0xFF	; 255
     e70:	79 f0       	breq	.+30     	; 0xe90 <__fp_splitA+0x2a>
     e72:	87 95       	ror	r24
     e74:	08 95       	ret
     e76:	12 16       	cp	r1, r18
     e78:	13 06       	cpc	r1, r19
     e7a:	14 06       	cpc	r1, r20
     e7c:	55 1f       	adc	r21, r21
     e7e:	f2 cf       	rjmp	.-28     	; 0xe64 <__fp_split3+0xe>
     e80:	46 95       	lsr	r20
     e82:	f1 df       	rcall	.-30     	; 0xe66 <__fp_splitA>
     e84:	08 c0       	rjmp	.+16     	; 0xe96 <__fp_splitA+0x30>
     e86:	16 16       	cp	r1, r22
     e88:	17 06       	cpc	r1, r23
     e8a:	18 06       	cpc	r1, r24
     e8c:	99 1f       	adc	r25, r25
     e8e:	f1 cf       	rjmp	.-30     	; 0xe72 <__fp_splitA+0xc>
     e90:	86 95       	lsr	r24
     e92:	71 05       	cpc	r23, r1
     e94:	61 05       	cpc	r22, r1
     e96:	08 94       	sec
     e98:	08 95       	ret

00000e9a <__fp_zero>:
     e9a:	e8 94       	clt

00000e9c <__fp_szero>:
     e9c:	bb 27       	eor	r27, r27
     e9e:	66 27       	eor	r22, r22
     ea0:	77 27       	eor	r23, r23
     ea2:	cb 01       	movw	r24, r22
     ea4:	97 f9       	bld	r25, 7
     ea6:	08 95       	ret

00000ea8 <__mulsf3>:
     ea8:	0b d0       	rcall	.+22     	; 0xec0 <__mulsf3x>
     eaa:	c4 cf       	rjmp	.-120    	; 0xe34 <__fp_round>
     eac:	b5 df       	rcall	.-150    	; 0xe18 <__fp_pscA>
     eae:	28 f0       	brcs	.+10     	; 0xeba <__mulsf3+0x12>
     eb0:	ba df       	rcall	.-140    	; 0xe26 <__fp_pscB>
     eb2:	18 f0       	brcs	.+6      	; 0xeba <__mulsf3+0x12>
     eb4:	95 23       	and	r25, r21
     eb6:	09 f0       	breq	.+2      	; 0xeba <__mulsf3+0x12>
     eb8:	a6 cf       	rjmp	.-180    	; 0xe06 <__fp_inf>
     eba:	ab cf       	rjmp	.-170    	; 0xe12 <__fp_nan>
     ebc:	11 24       	eor	r1, r1
     ebe:	ee cf       	rjmp	.-36     	; 0xe9c <__fp_szero>

00000ec0 <__mulsf3x>:
     ec0:	ca df       	rcall	.-108    	; 0xe56 <__fp_split3>
     ec2:	a0 f3       	brcs	.-24     	; 0xeac <__mulsf3+0x4>

00000ec4 <__mulsf3_pse>:
     ec4:	95 9f       	mul	r25, r21
     ec6:	d1 f3       	breq	.-12     	; 0xebc <__mulsf3+0x14>
     ec8:	95 0f       	add	r25, r21
     eca:	50 e0       	ldi	r21, 0x00	; 0
     ecc:	55 1f       	adc	r21, r21
     ece:	62 9f       	mul	r22, r18
     ed0:	f0 01       	movw	r30, r0
     ed2:	72 9f       	mul	r23, r18
     ed4:	bb 27       	eor	r27, r27
     ed6:	f0 0d       	add	r31, r0
     ed8:	b1 1d       	adc	r27, r1
     eda:	63 9f       	mul	r22, r19
     edc:	aa 27       	eor	r26, r26
     ede:	f0 0d       	add	r31, r0
     ee0:	b1 1d       	adc	r27, r1
     ee2:	aa 1f       	adc	r26, r26
     ee4:	64 9f       	mul	r22, r20
     ee6:	66 27       	eor	r22, r22
     ee8:	b0 0d       	add	r27, r0
     eea:	a1 1d       	adc	r26, r1
     eec:	66 1f       	adc	r22, r22
     eee:	82 9f       	mul	r24, r18
     ef0:	22 27       	eor	r18, r18
     ef2:	b0 0d       	add	r27, r0
     ef4:	a1 1d       	adc	r26, r1
     ef6:	62 1f       	adc	r22, r18
     ef8:	73 9f       	mul	r23, r19
     efa:	b0 0d       	add	r27, r0
     efc:	a1 1d       	adc	r26, r1
     efe:	62 1f       	adc	r22, r18
     f00:	83 9f       	mul	r24, r19
     f02:	a0 0d       	add	r26, r0
     f04:	61 1d       	adc	r22, r1
     f06:	22 1f       	adc	r18, r18
     f08:	74 9f       	mul	r23, r20
     f0a:	33 27       	eor	r19, r19
     f0c:	a0 0d       	add	r26, r0
     f0e:	61 1d       	adc	r22, r1
     f10:	23 1f       	adc	r18, r19
     f12:	84 9f       	mul	r24, r20
     f14:	60 0d       	add	r22, r0
     f16:	21 1d       	adc	r18, r1
     f18:	82 2f       	mov	r24, r18
     f1a:	76 2f       	mov	r23, r22
     f1c:	6a 2f       	mov	r22, r26
     f1e:	11 24       	eor	r1, r1
     f20:	9f 57       	subi	r25, 0x7F	; 127
     f22:	50 40       	sbci	r21, 0x00	; 0
     f24:	8a f0       	brmi	.+34     	; 0xf48 <__mulsf3_pse+0x84>
     f26:	e1 f0       	breq	.+56     	; 0xf60 <__mulsf3_pse+0x9c>
     f28:	88 23       	and	r24, r24
     f2a:	4a f0       	brmi	.+18     	; 0xf3e <__mulsf3_pse+0x7a>
     f2c:	ee 0f       	add	r30, r30
     f2e:	ff 1f       	adc	r31, r31
     f30:	bb 1f       	adc	r27, r27
     f32:	66 1f       	adc	r22, r22
     f34:	77 1f       	adc	r23, r23
     f36:	88 1f       	adc	r24, r24
     f38:	91 50       	subi	r25, 0x01	; 1
     f3a:	50 40       	sbci	r21, 0x00	; 0
     f3c:	a9 f7       	brne	.-22     	; 0xf28 <__mulsf3_pse+0x64>
     f3e:	9e 3f       	cpi	r25, 0xFE	; 254
     f40:	51 05       	cpc	r21, r1
     f42:	70 f0       	brcs	.+28     	; 0xf60 <__mulsf3_pse+0x9c>
     f44:	60 cf       	rjmp	.-320    	; 0xe06 <__fp_inf>
     f46:	aa cf       	rjmp	.-172    	; 0xe9c <__fp_szero>
     f48:	5f 3f       	cpi	r21, 0xFF	; 255
     f4a:	ec f3       	brlt	.-6      	; 0xf46 <__mulsf3_pse+0x82>
     f4c:	98 3e       	cpi	r25, 0xE8	; 232
     f4e:	dc f3       	brlt	.-10     	; 0xf46 <__mulsf3_pse+0x82>
     f50:	86 95       	lsr	r24
     f52:	77 95       	ror	r23
     f54:	67 95       	ror	r22
     f56:	b7 95       	ror	r27
     f58:	f7 95       	ror	r31
     f5a:	e7 95       	ror	r30
     f5c:	9f 5f       	subi	r25, 0xFF	; 255
     f5e:	c1 f7       	brne	.-16     	; 0xf50 <__mulsf3_pse+0x8c>
     f60:	fe 2b       	or	r31, r30
     f62:	88 0f       	add	r24, r24
     f64:	91 1d       	adc	r25, r1
     f66:	96 95       	lsr	r25
     f68:	87 95       	ror	r24
     f6a:	97 f9       	bld	r25, 7
     f6c:	08 95       	ret

00000f6e <vfprintf>:
     f6e:	2f 92       	push	r2
     f70:	3f 92       	push	r3
     f72:	4f 92       	push	r4
     f74:	5f 92       	push	r5
     f76:	6f 92       	push	r6
     f78:	7f 92       	push	r7
     f7a:	8f 92       	push	r8
     f7c:	9f 92       	push	r9
     f7e:	af 92       	push	r10
     f80:	bf 92       	push	r11
     f82:	cf 92       	push	r12
     f84:	df 92       	push	r13
     f86:	ef 92       	push	r14
     f88:	ff 92       	push	r15
     f8a:	0f 93       	push	r16
     f8c:	1f 93       	push	r17
     f8e:	cf 93       	push	r28
     f90:	df 93       	push	r29
     f92:	cd b7       	in	r28, 0x3d	; 61
     f94:	de b7       	in	r29, 0x3e	; 62
     f96:	60 97       	sbiw	r28, 0x10	; 16
     f98:	0f b6       	in	r0, 0x3f	; 63
     f9a:	f8 94       	cli
     f9c:	de bf       	out	0x3e, r29	; 62
     f9e:	0f be       	out	0x3f, r0	; 63
     fa0:	cd bf       	out	0x3d, r28	; 61
     fa2:	7c 01       	movw	r14, r24
     fa4:	1b 01       	movw	r2, r22
     fa6:	6a 01       	movw	r12, r20
     fa8:	fc 01       	movw	r30, r24
     faa:	17 82       	std	Z+7, r1	; 0x07
     fac:	16 82       	std	Z+6, r1	; 0x06
     fae:	83 81       	ldd	r24, Z+3	; 0x03
     fb0:	81 ff       	sbrs	r24, 1
     fb2:	2a c3       	rjmp	.+1620   	; 0x1608 <__EEPROM_REGION_LENGTH__+0x608>
     fb4:	9e 01       	movw	r18, r28
     fb6:	2f 5f       	subi	r18, 0xFF	; 255
     fb8:	3f 4f       	sbci	r19, 0xFF	; 255
     fba:	39 01       	movw	r6, r18
     fbc:	f7 01       	movw	r30, r14
     fbe:	93 81       	ldd	r25, Z+3	; 0x03
     fc0:	f1 01       	movw	r30, r2
     fc2:	93 fd       	sbrc	r25, 3
     fc4:	85 91       	lpm	r24, Z+
     fc6:	93 ff       	sbrs	r25, 3
     fc8:	81 91       	ld	r24, Z+
     fca:	1f 01       	movw	r2, r30
     fcc:	88 23       	and	r24, r24
     fce:	09 f4       	brne	.+2      	; 0xfd2 <vfprintf+0x64>
     fd0:	17 c3       	rjmp	.+1582   	; 0x1600 <__EEPROM_REGION_LENGTH__+0x600>
     fd2:	85 32       	cpi	r24, 0x25	; 37
     fd4:	39 f4       	brne	.+14     	; 0xfe4 <vfprintf+0x76>
     fd6:	93 fd       	sbrc	r25, 3
     fd8:	85 91       	lpm	r24, Z+
     fda:	93 ff       	sbrs	r25, 3
     fdc:	81 91       	ld	r24, Z+
     fde:	1f 01       	movw	r2, r30
     fe0:	85 32       	cpi	r24, 0x25	; 37
     fe2:	31 f4       	brne	.+12     	; 0xff0 <vfprintf+0x82>
     fe4:	b7 01       	movw	r22, r14
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	68 d4       	rcall	.+2256   	; 0x18ba <fputc>
     fea:	56 01       	movw	r10, r12
     fec:	65 01       	movw	r12, r10
     fee:	e6 cf       	rjmp	.-52     	; 0xfbc <vfprintf+0x4e>
     ff0:	10 e0       	ldi	r17, 0x00	; 0
     ff2:	51 2c       	mov	r5, r1
     ff4:	91 2c       	mov	r9, r1
     ff6:	ff e1       	ldi	r31, 0x1F	; 31
     ff8:	f9 15       	cp	r31, r9
     ffa:	d8 f0       	brcs	.+54     	; 0x1032 <__EEPROM_REGION_LENGTH__+0x32>
     ffc:	8b 32       	cpi	r24, 0x2B	; 43
     ffe:	79 f0       	breq	.+30     	; 0x101e <__EEPROM_REGION_LENGTH__+0x1e>
    1000:	38 f4       	brcc	.+14     	; 0x1010 <__EEPROM_REGION_LENGTH__+0x10>
    1002:	80 32       	cpi	r24, 0x20	; 32
    1004:	79 f0       	breq	.+30     	; 0x1024 <__EEPROM_REGION_LENGTH__+0x24>
    1006:	83 32       	cpi	r24, 0x23	; 35
    1008:	a1 f4       	brne	.+40     	; 0x1032 <__EEPROM_REGION_LENGTH__+0x32>
    100a:	f9 2d       	mov	r31, r9
    100c:	f0 61       	ori	r31, 0x10	; 16
    100e:	2e c0       	rjmp	.+92     	; 0x106c <__EEPROM_REGION_LENGTH__+0x6c>
    1010:	8d 32       	cpi	r24, 0x2D	; 45
    1012:	61 f0       	breq	.+24     	; 0x102c <__EEPROM_REGION_LENGTH__+0x2c>
    1014:	80 33       	cpi	r24, 0x30	; 48
    1016:	69 f4       	brne	.+26     	; 0x1032 <__EEPROM_REGION_LENGTH__+0x32>
    1018:	29 2d       	mov	r18, r9
    101a:	21 60       	ori	r18, 0x01	; 1
    101c:	2d c0       	rjmp	.+90     	; 0x1078 <__EEPROM_REGION_LENGTH__+0x78>
    101e:	39 2d       	mov	r19, r9
    1020:	32 60       	ori	r19, 0x02	; 2
    1022:	93 2e       	mov	r9, r19
    1024:	89 2d       	mov	r24, r9
    1026:	84 60       	ori	r24, 0x04	; 4
    1028:	98 2e       	mov	r9, r24
    102a:	2a c0       	rjmp	.+84     	; 0x1080 <__EEPROM_REGION_LENGTH__+0x80>
    102c:	e9 2d       	mov	r30, r9
    102e:	e8 60       	ori	r30, 0x08	; 8
    1030:	15 c0       	rjmp	.+42     	; 0x105c <__EEPROM_REGION_LENGTH__+0x5c>
    1032:	97 fc       	sbrc	r9, 7
    1034:	2d c0       	rjmp	.+90     	; 0x1090 <__EEPROM_REGION_LENGTH__+0x90>
    1036:	20 ed       	ldi	r18, 0xD0	; 208
    1038:	28 0f       	add	r18, r24
    103a:	2a 30       	cpi	r18, 0x0A	; 10
    103c:	88 f4       	brcc	.+34     	; 0x1060 <__EEPROM_REGION_LENGTH__+0x60>
    103e:	96 fe       	sbrs	r9, 6
    1040:	06 c0       	rjmp	.+12     	; 0x104e <__EEPROM_REGION_LENGTH__+0x4e>
    1042:	3a e0       	ldi	r19, 0x0A	; 10
    1044:	13 9f       	mul	r17, r19
    1046:	20 0d       	add	r18, r0
    1048:	11 24       	eor	r1, r1
    104a:	12 2f       	mov	r17, r18
    104c:	19 c0       	rjmp	.+50     	; 0x1080 <__EEPROM_REGION_LENGTH__+0x80>
    104e:	8a e0       	ldi	r24, 0x0A	; 10
    1050:	58 9e       	mul	r5, r24
    1052:	20 0d       	add	r18, r0
    1054:	11 24       	eor	r1, r1
    1056:	52 2e       	mov	r5, r18
    1058:	e9 2d       	mov	r30, r9
    105a:	e0 62       	ori	r30, 0x20	; 32
    105c:	9e 2e       	mov	r9, r30
    105e:	10 c0       	rjmp	.+32     	; 0x1080 <__EEPROM_REGION_LENGTH__+0x80>
    1060:	8e 32       	cpi	r24, 0x2E	; 46
    1062:	31 f4       	brne	.+12     	; 0x1070 <__EEPROM_REGION_LENGTH__+0x70>
    1064:	96 fc       	sbrc	r9, 6
    1066:	cc c2       	rjmp	.+1432   	; 0x1600 <__EEPROM_REGION_LENGTH__+0x600>
    1068:	f9 2d       	mov	r31, r9
    106a:	f0 64       	ori	r31, 0x40	; 64
    106c:	9f 2e       	mov	r9, r31
    106e:	08 c0       	rjmp	.+16     	; 0x1080 <__EEPROM_REGION_LENGTH__+0x80>
    1070:	8c 36       	cpi	r24, 0x6C	; 108
    1072:	21 f4       	brne	.+8      	; 0x107c <__EEPROM_REGION_LENGTH__+0x7c>
    1074:	29 2d       	mov	r18, r9
    1076:	20 68       	ori	r18, 0x80	; 128
    1078:	92 2e       	mov	r9, r18
    107a:	02 c0       	rjmp	.+4      	; 0x1080 <__EEPROM_REGION_LENGTH__+0x80>
    107c:	88 36       	cpi	r24, 0x68	; 104
    107e:	41 f4       	brne	.+16     	; 0x1090 <__EEPROM_REGION_LENGTH__+0x90>
    1080:	f1 01       	movw	r30, r2
    1082:	93 fd       	sbrc	r25, 3
    1084:	85 91       	lpm	r24, Z+
    1086:	93 ff       	sbrs	r25, 3
    1088:	81 91       	ld	r24, Z+
    108a:	1f 01       	movw	r2, r30
    108c:	81 11       	cpse	r24, r1
    108e:	b3 cf       	rjmp	.-154    	; 0xff6 <vfprintf+0x88>
    1090:	9b eb       	ldi	r25, 0xBB	; 187
    1092:	98 0f       	add	r25, r24
    1094:	93 30       	cpi	r25, 0x03	; 3
    1096:	20 f4       	brcc	.+8      	; 0x10a0 <__EEPROM_REGION_LENGTH__+0xa0>
    1098:	99 2d       	mov	r25, r9
    109a:	90 61       	ori	r25, 0x10	; 16
    109c:	80 5e       	subi	r24, 0xE0	; 224
    109e:	07 c0       	rjmp	.+14     	; 0x10ae <__EEPROM_REGION_LENGTH__+0xae>
    10a0:	9b e9       	ldi	r25, 0x9B	; 155
    10a2:	98 0f       	add	r25, r24
    10a4:	93 30       	cpi	r25, 0x03	; 3
    10a6:	08 f0       	brcs	.+2      	; 0x10aa <__EEPROM_REGION_LENGTH__+0xaa>
    10a8:	59 c1       	rjmp	.+690    	; 0x135c <__EEPROM_REGION_LENGTH__+0x35c>
    10aa:	99 2d       	mov	r25, r9
    10ac:	9f 7e       	andi	r25, 0xEF	; 239
    10ae:	96 ff       	sbrs	r25, 6
    10b0:	16 e0       	ldi	r17, 0x06	; 6
    10b2:	9f 73       	andi	r25, 0x3F	; 63
    10b4:	99 2e       	mov	r9, r25
    10b6:	85 36       	cpi	r24, 0x65	; 101
    10b8:	19 f4       	brne	.+6      	; 0x10c0 <__EEPROM_REGION_LENGTH__+0xc0>
    10ba:	90 64       	ori	r25, 0x40	; 64
    10bc:	99 2e       	mov	r9, r25
    10be:	08 c0       	rjmp	.+16     	; 0x10d0 <__EEPROM_REGION_LENGTH__+0xd0>
    10c0:	86 36       	cpi	r24, 0x66	; 102
    10c2:	21 f4       	brne	.+8      	; 0x10cc <__EEPROM_REGION_LENGTH__+0xcc>
    10c4:	39 2f       	mov	r19, r25
    10c6:	30 68       	ori	r19, 0x80	; 128
    10c8:	93 2e       	mov	r9, r19
    10ca:	02 c0       	rjmp	.+4      	; 0x10d0 <__EEPROM_REGION_LENGTH__+0xd0>
    10cc:	11 11       	cpse	r17, r1
    10ce:	11 50       	subi	r17, 0x01	; 1
    10d0:	97 fe       	sbrs	r9, 7
    10d2:	07 c0       	rjmp	.+14     	; 0x10e2 <__EEPROM_REGION_LENGTH__+0xe2>
    10d4:	1c 33       	cpi	r17, 0x3C	; 60
    10d6:	50 f4       	brcc	.+20     	; 0x10ec <__EEPROM_REGION_LENGTH__+0xec>
    10d8:	44 24       	eor	r4, r4
    10da:	43 94       	inc	r4
    10dc:	41 0e       	add	r4, r17
    10de:	27 e0       	ldi	r18, 0x07	; 7
    10e0:	0b c0       	rjmp	.+22     	; 0x10f8 <__EEPROM_REGION_LENGTH__+0xf8>
    10e2:	18 30       	cpi	r17, 0x08	; 8
    10e4:	38 f0       	brcs	.+14     	; 0x10f4 <__EEPROM_REGION_LENGTH__+0xf4>
    10e6:	27 e0       	ldi	r18, 0x07	; 7
    10e8:	17 e0       	ldi	r17, 0x07	; 7
    10ea:	05 c0       	rjmp	.+10     	; 0x10f6 <__EEPROM_REGION_LENGTH__+0xf6>
    10ec:	27 e0       	ldi	r18, 0x07	; 7
    10ee:	9c e3       	ldi	r25, 0x3C	; 60
    10f0:	49 2e       	mov	r4, r25
    10f2:	02 c0       	rjmp	.+4      	; 0x10f8 <__EEPROM_REGION_LENGTH__+0xf8>
    10f4:	21 2f       	mov	r18, r17
    10f6:	41 2c       	mov	r4, r1
    10f8:	56 01       	movw	r10, r12
    10fa:	84 e0       	ldi	r24, 0x04	; 4
    10fc:	a8 0e       	add	r10, r24
    10fe:	b1 1c       	adc	r11, r1
    1100:	f6 01       	movw	r30, r12
    1102:	60 81       	ld	r22, Z
    1104:	71 81       	ldd	r23, Z+1	; 0x01
    1106:	82 81       	ldd	r24, Z+2	; 0x02
    1108:	93 81       	ldd	r25, Z+3	; 0x03
    110a:	04 2d       	mov	r16, r4
    110c:	a3 01       	movw	r20, r6
    110e:	e7 d2       	rcall	.+1486   	; 0x16de <__ftoa_engine>
    1110:	6c 01       	movw	r12, r24
    1112:	f9 81       	ldd	r31, Y+1	; 0x01
    1114:	fc 87       	std	Y+12, r31	; 0x0c
    1116:	f0 ff       	sbrs	r31, 0
    1118:	02 c0       	rjmp	.+4      	; 0x111e <__EEPROM_REGION_LENGTH__+0x11e>
    111a:	f3 ff       	sbrs	r31, 3
    111c:	06 c0       	rjmp	.+12     	; 0x112a <__EEPROM_REGION_LENGTH__+0x12a>
    111e:	91 fc       	sbrc	r9, 1
    1120:	06 c0       	rjmp	.+12     	; 0x112e <__EEPROM_REGION_LENGTH__+0x12e>
    1122:	92 fe       	sbrs	r9, 2
    1124:	06 c0       	rjmp	.+12     	; 0x1132 <__EEPROM_REGION_LENGTH__+0x132>
    1126:	00 e2       	ldi	r16, 0x20	; 32
    1128:	05 c0       	rjmp	.+10     	; 0x1134 <__EEPROM_REGION_LENGTH__+0x134>
    112a:	0d e2       	ldi	r16, 0x2D	; 45
    112c:	03 c0       	rjmp	.+6      	; 0x1134 <__EEPROM_REGION_LENGTH__+0x134>
    112e:	0b e2       	ldi	r16, 0x2B	; 43
    1130:	01 c0       	rjmp	.+2      	; 0x1134 <__EEPROM_REGION_LENGTH__+0x134>
    1132:	00 e0       	ldi	r16, 0x00	; 0
    1134:	8c 85       	ldd	r24, Y+12	; 0x0c
    1136:	8c 70       	andi	r24, 0x0C	; 12
    1138:	19 f0       	breq	.+6      	; 0x1140 <__EEPROM_REGION_LENGTH__+0x140>
    113a:	01 11       	cpse	r16, r1
    113c:	43 c2       	rjmp	.+1158   	; 0x15c4 <__EEPROM_REGION_LENGTH__+0x5c4>
    113e:	80 c2       	rjmp	.+1280   	; 0x1640 <__EEPROM_REGION_LENGTH__+0x640>
    1140:	97 fe       	sbrs	r9, 7
    1142:	10 c0       	rjmp	.+32     	; 0x1164 <__EEPROM_REGION_LENGTH__+0x164>
    1144:	4c 0c       	add	r4, r12
    1146:	fc 85       	ldd	r31, Y+12	; 0x0c
    1148:	f4 ff       	sbrs	r31, 4
    114a:	04 c0       	rjmp	.+8      	; 0x1154 <__EEPROM_REGION_LENGTH__+0x154>
    114c:	8a 81       	ldd	r24, Y+2	; 0x02
    114e:	81 33       	cpi	r24, 0x31	; 49
    1150:	09 f4       	brne	.+2      	; 0x1154 <__EEPROM_REGION_LENGTH__+0x154>
    1152:	4a 94       	dec	r4
    1154:	14 14       	cp	r1, r4
    1156:	74 f5       	brge	.+92     	; 0x11b4 <__EEPROM_REGION_LENGTH__+0x1b4>
    1158:	28 e0       	ldi	r18, 0x08	; 8
    115a:	24 15       	cp	r18, r4
    115c:	78 f5       	brcc	.+94     	; 0x11bc <__EEPROM_REGION_LENGTH__+0x1bc>
    115e:	88 e0       	ldi	r24, 0x08	; 8
    1160:	48 2e       	mov	r4, r24
    1162:	2c c0       	rjmp	.+88     	; 0x11bc <__EEPROM_REGION_LENGTH__+0x1bc>
    1164:	96 fc       	sbrc	r9, 6
    1166:	2a c0       	rjmp	.+84     	; 0x11bc <__EEPROM_REGION_LENGTH__+0x1bc>
    1168:	81 2f       	mov	r24, r17
    116a:	90 e0       	ldi	r25, 0x00	; 0
    116c:	8c 15       	cp	r24, r12
    116e:	9d 05       	cpc	r25, r13
    1170:	9c f0       	brlt	.+38     	; 0x1198 <__EEPROM_REGION_LENGTH__+0x198>
    1172:	3c ef       	ldi	r19, 0xFC	; 252
    1174:	c3 16       	cp	r12, r19
    1176:	3f ef       	ldi	r19, 0xFF	; 255
    1178:	d3 06       	cpc	r13, r19
    117a:	74 f0       	brlt	.+28     	; 0x1198 <__EEPROM_REGION_LENGTH__+0x198>
    117c:	89 2d       	mov	r24, r9
    117e:	80 68       	ori	r24, 0x80	; 128
    1180:	98 2e       	mov	r9, r24
    1182:	0a c0       	rjmp	.+20     	; 0x1198 <__EEPROM_REGION_LENGTH__+0x198>
    1184:	e2 e0       	ldi	r30, 0x02	; 2
    1186:	f0 e0       	ldi	r31, 0x00	; 0
    1188:	ec 0f       	add	r30, r28
    118a:	fd 1f       	adc	r31, r29
    118c:	e1 0f       	add	r30, r17
    118e:	f1 1d       	adc	r31, r1
    1190:	80 81       	ld	r24, Z
    1192:	80 33       	cpi	r24, 0x30	; 48
    1194:	19 f4       	brne	.+6      	; 0x119c <__EEPROM_REGION_LENGTH__+0x19c>
    1196:	11 50       	subi	r17, 0x01	; 1
    1198:	11 11       	cpse	r17, r1
    119a:	f4 cf       	rjmp	.-24     	; 0x1184 <__EEPROM_REGION_LENGTH__+0x184>
    119c:	97 fe       	sbrs	r9, 7
    119e:	0e c0       	rjmp	.+28     	; 0x11bc <__EEPROM_REGION_LENGTH__+0x1bc>
    11a0:	44 24       	eor	r4, r4
    11a2:	43 94       	inc	r4
    11a4:	41 0e       	add	r4, r17
    11a6:	81 2f       	mov	r24, r17
    11a8:	90 e0       	ldi	r25, 0x00	; 0
    11aa:	c8 16       	cp	r12, r24
    11ac:	d9 06       	cpc	r13, r25
    11ae:	2c f4       	brge	.+10     	; 0x11ba <__EEPROM_REGION_LENGTH__+0x1ba>
    11b0:	1c 19       	sub	r17, r12
    11b2:	04 c0       	rjmp	.+8      	; 0x11bc <__EEPROM_REGION_LENGTH__+0x1bc>
    11b4:	44 24       	eor	r4, r4
    11b6:	43 94       	inc	r4
    11b8:	01 c0       	rjmp	.+2      	; 0x11bc <__EEPROM_REGION_LENGTH__+0x1bc>
    11ba:	10 e0       	ldi	r17, 0x00	; 0
    11bc:	97 fe       	sbrs	r9, 7
    11be:	06 c0       	rjmp	.+12     	; 0x11cc <__EEPROM_REGION_LENGTH__+0x1cc>
    11c0:	1c 14       	cp	r1, r12
    11c2:	1d 04       	cpc	r1, r13
    11c4:	34 f4       	brge	.+12     	; 0x11d2 <__EEPROM_REGION_LENGTH__+0x1d2>
    11c6:	c6 01       	movw	r24, r12
    11c8:	01 96       	adiw	r24, 0x01	; 1
    11ca:	05 c0       	rjmp	.+10     	; 0x11d6 <__EEPROM_REGION_LENGTH__+0x1d6>
    11cc:	85 e0       	ldi	r24, 0x05	; 5
    11ce:	90 e0       	ldi	r25, 0x00	; 0
    11d0:	02 c0       	rjmp	.+4      	; 0x11d6 <__EEPROM_REGION_LENGTH__+0x1d6>
    11d2:	81 e0       	ldi	r24, 0x01	; 1
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	01 11       	cpse	r16, r1
    11d8:	01 96       	adiw	r24, 0x01	; 1
    11da:	11 23       	and	r17, r17
    11dc:	31 f0       	breq	.+12     	; 0x11ea <__EEPROM_REGION_LENGTH__+0x1ea>
    11de:	21 2f       	mov	r18, r17
    11e0:	30 e0       	ldi	r19, 0x00	; 0
    11e2:	2f 5f       	subi	r18, 0xFF	; 255
    11e4:	3f 4f       	sbci	r19, 0xFF	; 255
    11e6:	82 0f       	add	r24, r18
    11e8:	93 1f       	adc	r25, r19
    11ea:	25 2d       	mov	r18, r5
    11ec:	30 e0       	ldi	r19, 0x00	; 0
    11ee:	82 17       	cp	r24, r18
    11f0:	93 07       	cpc	r25, r19
    11f2:	14 f4       	brge	.+4      	; 0x11f8 <__EEPROM_REGION_LENGTH__+0x1f8>
    11f4:	58 1a       	sub	r5, r24
    11f6:	01 c0       	rjmp	.+2      	; 0x11fa <__EEPROM_REGION_LENGTH__+0x1fa>
    11f8:	51 2c       	mov	r5, r1
    11fa:	89 2d       	mov	r24, r9
    11fc:	89 70       	andi	r24, 0x09	; 9
    11fe:	41 f4       	brne	.+16     	; 0x1210 <__EEPROM_REGION_LENGTH__+0x210>
    1200:	55 20       	and	r5, r5
    1202:	31 f0       	breq	.+12     	; 0x1210 <__EEPROM_REGION_LENGTH__+0x210>
    1204:	b7 01       	movw	r22, r14
    1206:	80 e2       	ldi	r24, 0x20	; 32
    1208:	90 e0       	ldi	r25, 0x00	; 0
    120a:	57 d3       	rcall	.+1710   	; 0x18ba <fputc>
    120c:	5a 94       	dec	r5
    120e:	f8 cf       	rjmp	.-16     	; 0x1200 <__EEPROM_REGION_LENGTH__+0x200>
    1210:	00 23       	and	r16, r16
    1212:	21 f0       	breq	.+8      	; 0x121c <__EEPROM_REGION_LENGTH__+0x21c>
    1214:	b7 01       	movw	r22, r14
    1216:	80 2f       	mov	r24, r16
    1218:	90 e0       	ldi	r25, 0x00	; 0
    121a:	4f d3       	rcall	.+1694   	; 0x18ba <fputc>
    121c:	93 fc       	sbrc	r9, 3
    121e:	08 c0       	rjmp	.+16     	; 0x1230 <__EEPROM_REGION_LENGTH__+0x230>
    1220:	55 20       	and	r5, r5
    1222:	31 f0       	breq	.+12     	; 0x1230 <__EEPROM_REGION_LENGTH__+0x230>
    1224:	b7 01       	movw	r22, r14
    1226:	80 e3       	ldi	r24, 0x30	; 48
    1228:	90 e0       	ldi	r25, 0x00	; 0
    122a:	47 d3       	rcall	.+1678   	; 0x18ba <fputc>
    122c:	5a 94       	dec	r5
    122e:	f8 cf       	rjmp	.-16     	; 0x1220 <__EEPROM_REGION_LENGTH__+0x220>
    1230:	97 fe       	sbrs	r9, 7
    1232:	4a c0       	rjmp	.+148    	; 0x12c8 <__EEPROM_REGION_LENGTH__+0x2c8>
    1234:	46 01       	movw	r8, r12
    1236:	d7 fe       	sbrs	r13, 7
    1238:	02 c0       	rjmp	.+4      	; 0x123e <__EEPROM_REGION_LENGTH__+0x23e>
    123a:	81 2c       	mov	r8, r1
    123c:	91 2c       	mov	r9, r1
    123e:	c6 01       	movw	r24, r12
    1240:	88 19       	sub	r24, r8
    1242:	99 09       	sbc	r25, r9
    1244:	f3 01       	movw	r30, r6
    1246:	e8 0f       	add	r30, r24
    1248:	f9 1f       	adc	r31, r25
    124a:	fe 87       	std	Y+14, r31	; 0x0e
    124c:	ed 87       	std	Y+13, r30	; 0x0d
    124e:	96 01       	movw	r18, r12
    1250:	24 19       	sub	r18, r4
    1252:	31 09       	sbc	r19, r1
    1254:	38 8b       	std	Y+16, r19	; 0x10
    1256:	2f 87       	std	Y+15, r18	; 0x0f
    1258:	01 2f       	mov	r16, r17
    125a:	10 e0       	ldi	r17, 0x00	; 0
    125c:	11 95       	neg	r17
    125e:	01 95       	neg	r16
    1260:	11 09       	sbc	r17, r1
    1262:	3f ef       	ldi	r19, 0xFF	; 255
    1264:	83 16       	cp	r8, r19
    1266:	93 06       	cpc	r9, r19
    1268:	21 f4       	brne	.+8      	; 0x1272 <__EEPROM_REGION_LENGTH__+0x272>
    126a:	b7 01       	movw	r22, r14
    126c:	8e e2       	ldi	r24, 0x2E	; 46
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	24 d3       	rcall	.+1608   	; 0x18ba <fputc>
    1272:	c8 14       	cp	r12, r8
    1274:	d9 04       	cpc	r13, r9
    1276:	4c f0       	brlt	.+18     	; 0x128a <__EEPROM_REGION_LENGTH__+0x28a>
    1278:	8f 85       	ldd	r24, Y+15	; 0x0f
    127a:	98 89       	ldd	r25, Y+16	; 0x10
    127c:	88 15       	cp	r24, r8
    127e:	99 05       	cpc	r25, r9
    1280:	24 f4       	brge	.+8      	; 0x128a <__EEPROM_REGION_LENGTH__+0x28a>
    1282:	ed 85       	ldd	r30, Y+13	; 0x0d
    1284:	fe 85       	ldd	r31, Y+14	; 0x0e
    1286:	81 81       	ldd	r24, Z+1	; 0x01
    1288:	01 c0       	rjmp	.+2      	; 0x128c <__EEPROM_REGION_LENGTH__+0x28c>
    128a:	80 e3       	ldi	r24, 0x30	; 48
    128c:	f1 e0       	ldi	r31, 0x01	; 1
    128e:	8f 1a       	sub	r8, r31
    1290:	91 08       	sbc	r9, r1
    1292:	2d 85       	ldd	r18, Y+13	; 0x0d
    1294:	3e 85       	ldd	r19, Y+14	; 0x0e
    1296:	2f 5f       	subi	r18, 0xFF	; 255
    1298:	3f 4f       	sbci	r19, 0xFF	; 255
    129a:	3e 87       	std	Y+14, r19	; 0x0e
    129c:	2d 87       	std	Y+13, r18	; 0x0d
    129e:	80 16       	cp	r8, r16
    12a0:	91 06       	cpc	r9, r17
    12a2:	24 f0       	brlt	.+8      	; 0x12ac <__EEPROM_REGION_LENGTH__+0x2ac>
    12a4:	b7 01       	movw	r22, r14
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	08 d3       	rcall	.+1552   	; 0x18ba <fputc>
    12aa:	db cf       	rjmp	.-74     	; 0x1262 <__EEPROM_REGION_LENGTH__+0x262>
    12ac:	c8 14       	cp	r12, r8
    12ae:	d9 04       	cpc	r13, r9
    12b0:	41 f4       	brne	.+16     	; 0x12c2 <__EEPROM_REGION_LENGTH__+0x2c2>
    12b2:	9a 81       	ldd	r25, Y+2	; 0x02
    12b4:	96 33       	cpi	r25, 0x36	; 54
    12b6:	20 f4       	brcc	.+8      	; 0x12c0 <__EEPROM_REGION_LENGTH__+0x2c0>
    12b8:	95 33       	cpi	r25, 0x35	; 53
    12ba:	19 f4       	brne	.+6      	; 0x12c2 <__EEPROM_REGION_LENGTH__+0x2c2>
    12bc:	3c 85       	ldd	r19, Y+12	; 0x0c
    12be:	34 ff       	sbrs	r19, 4
    12c0:	81 e3       	ldi	r24, 0x31	; 49
    12c2:	b7 01       	movw	r22, r14
    12c4:	90 e0       	ldi	r25, 0x00	; 0
    12c6:	48 c0       	rjmp	.+144    	; 0x1358 <__EEPROM_REGION_LENGTH__+0x358>
    12c8:	8a 81       	ldd	r24, Y+2	; 0x02
    12ca:	81 33       	cpi	r24, 0x31	; 49
    12cc:	19 f0       	breq	.+6      	; 0x12d4 <__EEPROM_REGION_LENGTH__+0x2d4>
    12ce:	9c 85       	ldd	r25, Y+12	; 0x0c
    12d0:	9f 7e       	andi	r25, 0xEF	; 239
    12d2:	9c 87       	std	Y+12, r25	; 0x0c
    12d4:	b7 01       	movw	r22, r14
    12d6:	90 e0       	ldi	r25, 0x00	; 0
    12d8:	f0 d2       	rcall	.+1504   	; 0x18ba <fputc>
    12da:	11 11       	cpse	r17, r1
    12dc:	05 c0       	rjmp	.+10     	; 0x12e8 <__EEPROM_REGION_LENGTH__+0x2e8>
    12de:	94 fc       	sbrc	r9, 4
    12e0:	16 c0       	rjmp	.+44     	; 0x130e <__EEPROM_REGION_LENGTH__+0x30e>
    12e2:	85 e6       	ldi	r24, 0x65	; 101
    12e4:	90 e0       	ldi	r25, 0x00	; 0
    12e6:	15 c0       	rjmp	.+42     	; 0x1312 <__EEPROM_REGION_LENGTH__+0x312>
    12e8:	b7 01       	movw	r22, r14
    12ea:	8e e2       	ldi	r24, 0x2E	; 46
    12ec:	90 e0       	ldi	r25, 0x00	; 0
    12ee:	e5 d2       	rcall	.+1482   	; 0x18ba <fputc>
    12f0:	1e 5f       	subi	r17, 0xFE	; 254
    12f2:	82 e0       	ldi	r24, 0x02	; 2
    12f4:	01 e0       	ldi	r16, 0x01	; 1
    12f6:	08 0f       	add	r16, r24
    12f8:	f3 01       	movw	r30, r6
    12fa:	e8 0f       	add	r30, r24
    12fc:	f1 1d       	adc	r31, r1
    12fe:	80 81       	ld	r24, Z
    1300:	b7 01       	movw	r22, r14
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	da d2       	rcall	.+1460   	; 0x18ba <fputc>
    1306:	80 2f       	mov	r24, r16
    1308:	01 13       	cpse	r16, r17
    130a:	f4 cf       	rjmp	.-24     	; 0x12f4 <__EEPROM_REGION_LENGTH__+0x2f4>
    130c:	e8 cf       	rjmp	.-48     	; 0x12de <__EEPROM_REGION_LENGTH__+0x2de>
    130e:	85 e4       	ldi	r24, 0x45	; 69
    1310:	90 e0       	ldi	r25, 0x00	; 0
    1312:	b7 01       	movw	r22, r14
    1314:	d2 d2       	rcall	.+1444   	; 0x18ba <fputc>
    1316:	d7 fc       	sbrc	r13, 7
    1318:	06 c0       	rjmp	.+12     	; 0x1326 <__EEPROM_REGION_LENGTH__+0x326>
    131a:	c1 14       	cp	r12, r1
    131c:	d1 04       	cpc	r13, r1
    131e:	41 f4       	brne	.+16     	; 0x1330 <__EEPROM_REGION_LENGTH__+0x330>
    1320:	ec 85       	ldd	r30, Y+12	; 0x0c
    1322:	e4 ff       	sbrs	r30, 4
    1324:	05 c0       	rjmp	.+10     	; 0x1330 <__EEPROM_REGION_LENGTH__+0x330>
    1326:	d1 94       	neg	r13
    1328:	c1 94       	neg	r12
    132a:	d1 08       	sbc	r13, r1
    132c:	8d e2       	ldi	r24, 0x2D	; 45
    132e:	01 c0       	rjmp	.+2      	; 0x1332 <__EEPROM_REGION_LENGTH__+0x332>
    1330:	8b e2       	ldi	r24, 0x2B	; 43
    1332:	b7 01       	movw	r22, r14
    1334:	90 e0       	ldi	r25, 0x00	; 0
    1336:	c1 d2       	rcall	.+1410   	; 0x18ba <fputc>
    1338:	80 e3       	ldi	r24, 0x30	; 48
    133a:	2a e0       	ldi	r18, 0x0A	; 10
    133c:	c2 16       	cp	r12, r18
    133e:	d1 04       	cpc	r13, r1
    1340:	2c f0       	brlt	.+10     	; 0x134c <__EEPROM_REGION_LENGTH__+0x34c>
    1342:	8f 5f       	subi	r24, 0xFF	; 255
    1344:	fa e0       	ldi	r31, 0x0A	; 10
    1346:	cf 1a       	sub	r12, r31
    1348:	d1 08       	sbc	r13, r1
    134a:	f7 cf       	rjmp	.-18     	; 0x133a <__EEPROM_REGION_LENGTH__+0x33a>
    134c:	b7 01       	movw	r22, r14
    134e:	90 e0       	ldi	r25, 0x00	; 0
    1350:	b4 d2       	rcall	.+1384   	; 0x18ba <fputc>
    1352:	b7 01       	movw	r22, r14
    1354:	c6 01       	movw	r24, r12
    1356:	c0 96       	adiw	r24, 0x30	; 48
    1358:	b0 d2       	rcall	.+1376   	; 0x18ba <fputc>
    135a:	49 c1       	rjmp	.+658    	; 0x15ee <__EEPROM_REGION_LENGTH__+0x5ee>
    135c:	83 36       	cpi	r24, 0x63	; 99
    135e:	31 f0       	breq	.+12     	; 0x136c <__EEPROM_REGION_LENGTH__+0x36c>
    1360:	83 37       	cpi	r24, 0x73	; 115
    1362:	79 f0       	breq	.+30     	; 0x1382 <__EEPROM_REGION_LENGTH__+0x382>
    1364:	83 35       	cpi	r24, 0x53	; 83
    1366:	09 f0       	breq	.+2      	; 0x136a <__EEPROM_REGION_LENGTH__+0x36a>
    1368:	52 c0       	rjmp	.+164    	; 0x140e <__EEPROM_REGION_LENGTH__+0x40e>
    136a:	1f c0       	rjmp	.+62     	; 0x13aa <__EEPROM_REGION_LENGTH__+0x3aa>
    136c:	56 01       	movw	r10, r12
    136e:	32 e0       	ldi	r19, 0x02	; 2
    1370:	a3 0e       	add	r10, r19
    1372:	b1 1c       	adc	r11, r1
    1374:	f6 01       	movw	r30, r12
    1376:	80 81       	ld	r24, Z
    1378:	89 83       	std	Y+1, r24	; 0x01
    137a:	01 e0       	ldi	r16, 0x01	; 1
    137c:	10 e0       	ldi	r17, 0x00	; 0
    137e:	63 01       	movw	r12, r6
    1380:	11 c0       	rjmp	.+34     	; 0x13a4 <__EEPROM_REGION_LENGTH__+0x3a4>
    1382:	56 01       	movw	r10, r12
    1384:	f2 e0       	ldi	r31, 0x02	; 2
    1386:	af 0e       	add	r10, r31
    1388:	b1 1c       	adc	r11, r1
    138a:	f6 01       	movw	r30, r12
    138c:	c0 80       	ld	r12, Z
    138e:	d1 80       	ldd	r13, Z+1	; 0x01
    1390:	96 fe       	sbrs	r9, 6
    1392:	03 c0       	rjmp	.+6      	; 0x139a <__EEPROM_REGION_LENGTH__+0x39a>
    1394:	61 2f       	mov	r22, r17
    1396:	70 e0       	ldi	r23, 0x00	; 0
    1398:	02 c0       	rjmp	.+4      	; 0x139e <__EEPROM_REGION_LENGTH__+0x39e>
    139a:	6f ef       	ldi	r22, 0xFF	; 255
    139c:	7f ef       	ldi	r23, 0xFF	; 255
    139e:	c6 01       	movw	r24, r12
    13a0:	81 d2       	rcall	.+1282   	; 0x18a4 <strnlen>
    13a2:	8c 01       	movw	r16, r24
    13a4:	f9 2d       	mov	r31, r9
    13a6:	ff 77       	andi	r31, 0x7F	; 127
    13a8:	13 c0       	rjmp	.+38     	; 0x13d0 <__EEPROM_REGION_LENGTH__+0x3d0>
    13aa:	56 01       	movw	r10, r12
    13ac:	22 e0       	ldi	r18, 0x02	; 2
    13ae:	a2 0e       	add	r10, r18
    13b0:	b1 1c       	adc	r11, r1
    13b2:	f6 01       	movw	r30, r12
    13b4:	c0 80       	ld	r12, Z
    13b6:	d1 80       	ldd	r13, Z+1	; 0x01
    13b8:	96 fe       	sbrs	r9, 6
    13ba:	03 c0       	rjmp	.+6      	; 0x13c2 <__EEPROM_REGION_LENGTH__+0x3c2>
    13bc:	61 2f       	mov	r22, r17
    13be:	70 e0       	ldi	r23, 0x00	; 0
    13c0:	02 c0       	rjmp	.+4      	; 0x13c6 <__EEPROM_REGION_LENGTH__+0x3c6>
    13c2:	6f ef       	ldi	r22, 0xFF	; 255
    13c4:	7f ef       	ldi	r23, 0xFF	; 255
    13c6:	c6 01       	movw	r24, r12
    13c8:	62 d2       	rcall	.+1220   	; 0x188e <strnlen_P>
    13ca:	8c 01       	movw	r16, r24
    13cc:	f9 2d       	mov	r31, r9
    13ce:	f0 68       	ori	r31, 0x80	; 128
    13d0:	9f 2e       	mov	r9, r31
    13d2:	f3 fd       	sbrc	r31, 3
    13d4:	18 c0       	rjmp	.+48     	; 0x1406 <__EEPROM_REGION_LENGTH__+0x406>
    13d6:	85 2d       	mov	r24, r5
    13d8:	90 e0       	ldi	r25, 0x00	; 0
    13da:	08 17       	cp	r16, r24
    13dc:	19 07       	cpc	r17, r25
    13de:	98 f4       	brcc	.+38     	; 0x1406 <__EEPROM_REGION_LENGTH__+0x406>
    13e0:	b7 01       	movw	r22, r14
    13e2:	80 e2       	ldi	r24, 0x20	; 32
    13e4:	90 e0       	ldi	r25, 0x00	; 0
    13e6:	69 d2       	rcall	.+1234   	; 0x18ba <fputc>
    13e8:	5a 94       	dec	r5
    13ea:	f5 cf       	rjmp	.-22     	; 0x13d6 <__EEPROM_REGION_LENGTH__+0x3d6>
    13ec:	f6 01       	movw	r30, r12
    13ee:	97 fc       	sbrc	r9, 7
    13f0:	85 91       	lpm	r24, Z+
    13f2:	97 fe       	sbrs	r9, 7
    13f4:	81 91       	ld	r24, Z+
    13f6:	6f 01       	movw	r12, r30
    13f8:	b7 01       	movw	r22, r14
    13fa:	90 e0       	ldi	r25, 0x00	; 0
    13fc:	5e d2       	rcall	.+1212   	; 0x18ba <fputc>
    13fe:	51 10       	cpse	r5, r1
    1400:	5a 94       	dec	r5
    1402:	01 50       	subi	r16, 0x01	; 1
    1404:	11 09       	sbc	r17, r1
    1406:	01 15       	cp	r16, r1
    1408:	11 05       	cpc	r17, r1
    140a:	81 f7       	brne	.-32     	; 0x13ec <__EEPROM_REGION_LENGTH__+0x3ec>
    140c:	f0 c0       	rjmp	.+480    	; 0x15ee <__EEPROM_REGION_LENGTH__+0x5ee>
    140e:	84 36       	cpi	r24, 0x64	; 100
    1410:	11 f0       	breq	.+4      	; 0x1416 <__EEPROM_REGION_LENGTH__+0x416>
    1412:	89 36       	cpi	r24, 0x69	; 105
    1414:	59 f5       	brne	.+86     	; 0x146c <__EEPROM_REGION_LENGTH__+0x46c>
    1416:	56 01       	movw	r10, r12
    1418:	97 fe       	sbrs	r9, 7
    141a:	09 c0       	rjmp	.+18     	; 0x142e <__EEPROM_REGION_LENGTH__+0x42e>
    141c:	24 e0       	ldi	r18, 0x04	; 4
    141e:	a2 0e       	add	r10, r18
    1420:	b1 1c       	adc	r11, r1
    1422:	f6 01       	movw	r30, r12
    1424:	60 81       	ld	r22, Z
    1426:	71 81       	ldd	r23, Z+1	; 0x01
    1428:	82 81       	ldd	r24, Z+2	; 0x02
    142a:	93 81       	ldd	r25, Z+3	; 0x03
    142c:	0a c0       	rjmp	.+20     	; 0x1442 <__EEPROM_REGION_LENGTH__+0x442>
    142e:	f2 e0       	ldi	r31, 0x02	; 2
    1430:	af 0e       	add	r10, r31
    1432:	b1 1c       	adc	r11, r1
    1434:	f6 01       	movw	r30, r12
    1436:	60 81       	ld	r22, Z
    1438:	71 81       	ldd	r23, Z+1	; 0x01
    143a:	07 2e       	mov	r0, r23
    143c:	00 0c       	add	r0, r0
    143e:	88 0b       	sbc	r24, r24
    1440:	99 0b       	sbc	r25, r25
    1442:	f9 2d       	mov	r31, r9
    1444:	ff 76       	andi	r31, 0x6F	; 111
    1446:	9f 2e       	mov	r9, r31
    1448:	97 ff       	sbrs	r25, 7
    144a:	09 c0       	rjmp	.+18     	; 0x145e <__EEPROM_REGION_LENGTH__+0x45e>
    144c:	90 95       	com	r25
    144e:	80 95       	com	r24
    1450:	70 95       	com	r23
    1452:	61 95       	neg	r22
    1454:	7f 4f       	sbci	r23, 0xFF	; 255
    1456:	8f 4f       	sbci	r24, 0xFF	; 255
    1458:	9f 4f       	sbci	r25, 0xFF	; 255
    145a:	f0 68       	ori	r31, 0x80	; 128
    145c:	9f 2e       	mov	r9, r31
    145e:	2a e0       	ldi	r18, 0x0A	; 10
    1460:	30 e0       	ldi	r19, 0x00	; 0
    1462:	a3 01       	movw	r20, r6
    1464:	94 d2       	rcall	.+1320   	; 0x198e <__ultoa_invert>
    1466:	c8 2e       	mov	r12, r24
    1468:	c6 18       	sub	r12, r6
    146a:	3e c0       	rjmp	.+124    	; 0x14e8 <__EEPROM_REGION_LENGTH__+0x4e8>
    146c:	09 2d       	mov	r16, r9
    146e:	85 37       	cpi	r24, 0x75	; 117
    1470:	21 f4       	brne	.+8      	; 0x147a <__EEPROM_REGION_LENGTH__+0x47a>
    1472:	0f 7e       	andi	r16, 0xEF	; 239
    1474:	2a e0       	ldi	r18, 0x0A	; 10
    1476:	30 e0       	ldi	r19, 0x00	; 0
    1478:	1d c0       	rjmp	.+58     	; 0x14b4 <__EEPROM_REGION_LENGTH__+0x4b4>
    147a:	09 7f       	andi	r16, 0xF9	; 249
    147c:	8f 36       	cpi	r24, 0x6F	; 111
    147e:	91 f0       	breq	.+36     	; 0x14a4 <__EEPROM_REGION_LENGTH__+0x4a4>
    1480:	18 f4       	brcc	.+6      	; 0x1488 <__EEPROM_REGION_LENGTH__+0x488>
    1482:	88 35       	cpi	r24, 0x58	; 88
    1484:	59 f0       	breq	.+22     	; 0x149c <__EEPROM_REGION_LENGTH__+0x49c>
    1486:	bc c0       	rjmp	.+376    	; 0x1600 <__EEPROM_REGION_LENGTH__+0x600>
    1488:	80 37       	cpi	r24, 0x70	; 112
    148a:	19 f0       	breq	.+6      	; 0x1492 <__EEPROM_REGION_LENGTH__+0x492>
    148c:	88 37       	cpi	r24, 0x78	; 120
    148e:	11 f0       	breq	.+4      	; 0x1494 <__EEPROM_REGION_LENGTH__+0x494>
    1490:	b7 c0       	rjmp	.+366    	; 0x1600 <__EEPROM_REGION_LENGTH__+0x600>
    1492:	00 61       	ori	r16, 0x10	; 16
    1494:	04 ff       	sbrs	r16, 4
    1496:	09 c0       	rjmp	.+18     	; 0x14aa <__EEPROM_REGION_LENGTH__+0x4aa>
    1498:	04 60       	ori	r16, 0x04	; 4
    149a:	07 c0       	rjmp	.+14     	; 0x14aa <__EEPROM_REGION_LENGTH__+0x4aa>
    149c:	94 fe       	sbrs	r9, 4
    149e:	08 c0       	rjmp	.+16     	; 0x14b0 <__EEPROM_REGION_LENGTH__+0x4b0>
    14a0:	06 60       	ori	r16, 0x06	; 6
    14a2:	06 c0       	rjmp	.+12     	; 0x14b0 <__EEPROM_REGION_LENGTH__+0x4b0>
    14a4:	28 e0       	ldi	r18, 0x08	; 8
    14a6:	30 e0       	ldi	r19, 0x00	; 0
    14a8:	05 c0       	rjmp	.+10     	; 0x14b4 <__EEPROM_REGION_LENGTH__+0x4b4>
    14aa:	20 e1       	ldi	r18, 0x10	; 16
    14ac:	30 e0       	ldi	r19, 0x00	; 0
    14ae:	02 c0       	rjmp	.+4      	; 0x14b4 <__EEPROM_REGION_LENGTH__+0x4b4>
    14b0:	20 e1       	ldi	r18, 0x10	; 16
    14b2:	32 e0       	ldi	r19, 0x02	; 2
    14b4:	56 01       	movw	r10, r12
    14b6:	07 ff       	sbrs	r16, 7
    14b8:	09 c0       	rjmp	.+18     	; 0x14cc <__EEPROM_REGION_LENGTH__+0x4cc>
    14ba:	84 e0       	ldi	r24, 0x04	; 4
    14bc:	a8 0e       	add	r10, r24
    14be:	b1 1c       	adc	r11, r1
    14c0:	f6 01       	movw	r30, r12
    14c2:	60 81       	ld	r22, Z
    14c4:	71 81       	ldd	r23, Z+1	; 0x01
    14c6:	82 81       	ldd	r24, Z+2	; 0x02
    14c8:	93 81       	ldd	r25, Z+3	; 0x03
    14ca:	08 c0       	rjmp	.+16     	; 0x14dc <__EEPROM_REGION_LENGTH__+0x4dc>
    14cc:	f2 e0       	ldi	r31, 0x02	; 2
    14ce:	af 0e       	add	r10, r31
    14d0:	b1 1c       	adc	r11, r1
    14d2:	f6 01       	movw	r30, r12
    14d4:	60 81       	ld	r22, Z
    14d6:	71 81       	ldd	r23, Z+1	; 0x01
    14d8:	80 e0       	ldi	r24, 0x00	; 0
    14da:	90 e0       	ldi	r25, 0x00	; 0
    14dc:	a3 01       	movw	r20, r6
    14de:	57 d2       	rcall	.+1198   	; 0x198e <__ultoa_invert>
    14e0:	c8 2e       	mov	r12, r24
    14e2:	c6 18       	sub	r12, r6
    14e4:	0f 77       	andi	r16, 0x7F	; 127
    14e6:	90 2e       	mov	r9, r16
    14e8:	96 fe       	sbrs	r9, 6
    14ea:	0b c0       	rjmp	.+22     	; 0x1502 <__EEPROM_REGION_LENGTH__+0x502>
    14ec:	09 2d       	mov	r16, r9
    14ee:	0e 7f       	andi	r16, 0xFE	; 254
    14f0:	c1 16       	cp	r12, r17
    14f2:	50 f4       	brcc	.+20     	; 0x1508 <__EEPROM_REGION_LENGTH__+0x508>
    14f4:	94 fe       	sbrs	r9, 4
    14f6:	0a c0       	rjmp	.+20     	; 0x150c <__EEPROM_REGION_LENGTH__+0x50c>
    14f8:	92 fc       	sbrc	r9, 2
    14fa:	08 c0       	rjmp	.+16     	; 0x150c <__EEPROM_REGION_LENGTH__+0x50c>
    14fc:	09 2d       	mov	r16, r9
    14fe:	0e 7e       	andi	r16, 0xEE	; 238
    1500:	05 c0       	rjmp	.+10     	; 0x150c <__EEPROM_REGION_LENGTH__+0x50c>
    1502:	dc 2c       	mov	r13, r12
    1504:	09 2d       	mov	r16, r9
    1506:	03 c0       	rjmp	.+6      	; 0x150e <__EEPROM_REGION_LENGTH__+0x50e>
    1508:	dc 2c       	mov	r13, r12
    150a:	01 c0       	rjmp	.+2      	; 0x150e <__EEPROM_REGION_LENGTH__+0x50e>
    150c:	d1 2e       	mov	r13, r17
    150e:	04 ff       	sbrs	r16, 4
    1510:	0d c0       	rjmp	.+26     	; 0x152c <__EEPROM_REGION_LENGTH__+0x52c>
    1512:	fe 01       	movw	r30, r28
    1514:	ec 0d       	add	r30, r12
    1516:	f1 1d       	adc	r31, r1
    1518:	80 81       	ld	r24, Z
    151a:	80 33       	cpi	r24, 0x30	; 48
    151c:	11 f4       	brne	.+4      	; 0x1522 <__EEPROM_REGION_LENGTH__+0x522>
    151e:	09 7e       	andi	r16, 0xE9	; 233
    1520:	09 c0       	rjmp	.+18     	; 0x1534 <__EEPROM_REGION_LENGTH__+0x534>
    1522:	02 ff       	sbrs	r16, 2
    1524:	06 c0       	rjmp	.+12     	; 0x1532 <__EEPROM_REGION_LENGTH__+0x532>
    1526:	d3 94       	inc	r13
    1528:	d3 94       	inc	r13
    152a:	04 c0       	rjmp	.+8      	; 0x1534 <__EEPROM_REGION_LENGTH__+0x534>
    152c:	80 2f       	mov	r24, r16
    152e:	86 78       	andi	r24, 0x86	; 134
    1530:	09 f0       	breq	.+2      	; 0x1534 <__EEPROM_REGION_LENGTH__+0x534>
    1532:	d3 94       	inc	r13
    1534:	03 fd       	sbrc	r16, 3
    1536:	10 c0       	rjmp	.+32     	; 0x1558 <__EEPROM_REGION_LENGTH__+0x558>
    1538:	00 ff       	sbrs	r16, 0
    153a:	06 c0       	rjmp	.+12     	; 0x1548 <__EEPROM_REGION_LENGTH__+0x548>
    153c:	1c 2d       	mov	r17, r12
    153e:	d5 14       	cp	r13, r5
    1540:	78 f4       	brcc	.+30     	; 0x1560 <__EEPROM_REGION_LENGTH__+0x560>
    1542:	15 0d       	add	r17, r5
    1544:	1d 19       	sub	r17, r13
    1546:	0c c0       	rjmp	.+24     	; 0x1560 <__EEPROM_REGION_LENGTH__+0x560>
    1548:	d5 14       	cp	r13, r5
    154a:	50 f4       	brcc	.+20     	; 0x1560 <__EEPROM_REGION_LENGTH__+0x560>
    154c:	b7 01       	movw	r22, r14
    154e:	80 e2       	ldi	r24, 0x20	; 32
    1550:	90 e0       	ldi	r25, 0x00	; 0
    1552:	b3 d1       	rcall	.+870    	; 0x18ba <fputc>
    1554:	d3 94       	inc	r13
    1556:	f8 cf       	rjmp	.-16     	; 0x1548 <__EEPROM_REGION_LENGTH__+0x548>
    1558:	d5 14       	cp	r13, r5
    155a:	10 f4       	brcc	.+4      	; 0x1560 <__EEPROM_REGION_LENGTH__+0x560>
    155c:	5d 18       	sub	r5, r13
    155e:	01 c0       	rjmp	.+2      	; 0x1562 <__EEPROM_REGION_LENGTH__+0x562>
    1560:	51 2c       	mov	r5, r1
    1562:	04 ff       	sbrs	r16, 4
    1564:	0f c0       	rjmp	.+30     	; 0x1584 <__EEPROM_REGION_LENGTH__+0x584>
    1566:	b7 01       	movw	r22, r14
    1568:	80 e3       	ldi	r24, 0x30	; 48
    156a:	90 e0       	ldi	r25, 0x00	; 0
    156c:	a6 d1       	rcall	.+844    	; 0x18ba <fputc>
    156e:	02 ff       	sbrs	r16, 2
    1570:	16 c0       	rjmp	.+44     	; 0x159e <__EEPROM_REGION_LENGTH__+0x59e>
    1572:	01 fd       	sbrc	r16, 1
    1574:	03 c0       	rjmp	.+6      	; 0x157c <__EEPROM_REGION_LENGTH__+0x57c>
    1576:	88 e7       	ldi	r24, 0x78	; 120
    1578:	90 e0       	ldi	r25, 0x00	; 0
    157a:	02 c0       	rjmp	.+4      	; 0x1580 <__EEPROM_REGION_LENGTH__+0x580>
    157c:	88 e5       	ldi	r24, 0x58	; 88
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	b7 01       	movw	r22, r14
    1582:	0c c0       	rjmp	.+24     	; 0x159c <__EEPROM_REGION_LENGTH__+0x59c>
    1584:	80 2f       	mov	r24, r16
    1586:	86 78       	andi	r24, 0x86	; 134
    1588:	51 f0       	breq	.+20     	; 0x159e <__EEPROM_REGION_LENGTH__+0x59e>
    158a:	01 ff       	sbrs	r16, 1
    158c:	02 c0       	rjmp	.+4      	; 0x1592 <__EEPROM_REGION_LENGTH__+0x592>
    158e:	8b e2       	ldi	r24, 0x2B	; 43
    1590:	01 c0       	rjmp	.+2      	; 0x1594 <__EEPROM_REGION_LENGTH__+0x594>
    1592:	80 e2       	ldi	r24, 0x20	; 32
    1594:	07 fd       	sbrc	r16, 7
    1596:	8d e2       	ldi	r24, 0x2D	; 45
    1598:	b7 01       	movw	r22, r14
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	8e d1       	rcall	.+796    	; 0x18ba <fputc>
    159e:	c1 16       	cp	r12, r17
    15a0:	30 f4       	brcc	.+12     	; 0x15ae <__EEPROM_REGION_LENGTH__+0x5ae>
    15a2:	b7 01       	movw	r22, r14
    15a4:	80 e3       	ldi	r24, 0x30	; 48
    15a6:	90 e0       	ldi	r25, 0x00	; 0
    15a8:	88 d1       	rcall	.+784    	; 0x18ba <fputc>
    15aa:	11 50       	subi	r17, 0x01	; 1
    15ac:	f8 cf       	rjmp	.-16     	; 0x159e <__EEPROM_REGION_LENGTH__+0x59e>
    15ae:	ca 94       	dec	r12
    15b0:	f3 01       	movw	r30, r6
    15b2:	ec 0d       	add	r30, r12
    15b4:	f1 1d       	adc	r31, r1
    15b6:	80 81       	ld	r24, Z
    15b8:	b7 01       	movw	r22, r14
    15ba:	90 e0       	ldi	r25, 0x00	; 0
    15bc:	7e d1       	rcall	.+764    	; 0x18ba <fputc>
    15be:	c1 10       	cpse	r12, r1
    15c0:	f6 cf       	rjmp	.-20     	; 0x15ae <__EEPROM_REGION_LENGTH__+0x5ae>
    15c2:	15 c0       	rjmp	.+42     	; 0x15ee <__EEPROM_REGION_LENGTH__+0x5ee>
    15c4:	f4 e0       	ldi	r31, 0x04	; 4
    15c6:	f5 15       	cp	r31, r5
    15c8:	50 f5       	brcc	.+84     	; 0x161e <__EEPROM_REGION_LENGTH__+0x61e>
    15ca:	84 e0       	ldi	r24, 0x04	; 4
    15cc:	58 1a       	sub	r5, r24
    15ce:	93 fe       	sbrs	r9, 3
    15d0:	1e c0       	rjmp	.+60     	; 0x160e <__EEPROM_REGION_LENGTH__+0x60e>
    15d2:	01 11       	cpse	r16, r1
    15d4:	25 c0       	rjmp	.+74     	; 0x1620 <__EEPROM_REGION_LENGTH__+0x620>
    15d6:	2c 85       	ldd	r18, Y+12	; 0x0c
    15d8:	23 ff       	sbrs	r18, 3
    15da:	27 c0       	rjmp	.+78     	; 0x162a <__EEPROM_REGION_LENGTH__+0x62a>
    15dc:	04 ef       	ldi	r16, 0xF4	; 244
    15de:	10 e0       	ldi	r17, 0x00	; 0
    15e0:	39 2d       	mov	r19, r9
    15e2:	30 71       	andi	r19, 0x10	; 16
    15e4:	93 2e       	mov	r9, r19
    15e6:	f8 01       	movw	r30, r16
    15e8:	84 91       	lpm	r24, Z
    15ea:	81 11       	cpse	r24, r1
    15ec:	21 c0       	rjmp	.+66     	; 0x1630 <__EEPROM_REGION_LENGTH__+0x630>
    15ee:	55 20       	and	r5, r5
    15f0:	09 f4       	brne	.+2      	; 0x15f4 <__EEPROM_REGION_LENGTH__+0x5f4>
    15f2:	fc cc       	rjmp	.-1544   	; 0xfec <vfprintf+0x7e>
    15f4:	b7 01       	movw	r22, r14
    15f6:	80 e2       	ldi	r24, 0x20	; 32
    15f8:	90 e0       	ldi	r25, 0x00	; 0
    15fa:	5f d1       	rcall	.+702    	; 0x18ba <fputc>
    15fc:	5a 94       	dec	r5
    15fe:	f7 cf       	rjmp	.-18     	; 0x15ee <__EEPROM_REGION_LENGTH__+0x5ee>
    1600:	f7 01       	movw	r30, r14
    1602:	86 81       	ldd	r24, Z+6	; 0x06
    1604:	97 81       	ldd	r25, Z+7	; 0x07
    1606:	23 c0       	rjmp	.+70     	; 0x164e <__EEPROM_REGION_LENGTH__+0x64e>
    1608:	8f ef       	ldi	r24, 0xFF	; 255
    160a:	9f ef       	ldi	r25, 0xFF	; 255
    160c:	20 c0       	rjmp	.+64     	; 0x164e <__EEPROM_REGION_LENGTH__+0x64e>
    160e:	b7 01       	movw	r22, r14
    1610:	80 e2       	ldi	r24, 0x20	; 32
    1612:	90 e0       	ldi	r25, 0x00	; 0
    1614:	52 d1       	rcall	.+676    	; 0x18ba <fputc>
    1616:	5a 94       	dec	r5
    1618:	51 10       	cpse	r5, r1
    161a:	f9 cf       	rjmp	.-14     	; 0x160e <__EEPROM_REGION_LENGTH__+0x60e>
    161c:	da cf       	rjmp	.-76     	; 0x15d2 <__EEPROM_REGION_LENGTH__+0x5d2>
    161e:	51 2c       	mov	r5, r1
    1620:	b7 01       	movw	r22, r14
    1622:	80 2f       	mov	r24, r16
    1624:	90 e0       	ldi	r25, 0x00	; 0
    1626:	49 d1       	rcall	.+658    	; 0x18ba <fputc>
    1628:	d6 cf       	rjmp	.-84     	; 0x15d6 <__EEPROM_REGION_LENGTH__+0x5d6>
    162a:	08 ef       	ldi	r16, 0xF8	; 248
    162c:	10 e0       	ldi	r17, 0x00	; 0
    162e:	d8 cf       	rjmp	.-80     	; 0x15e0 <__EEPROM_REGION_LENGTH__+0x5e0>
    1630:	91 10       	cpse	r9, r1
    1632:	80 52       	subi	r24, 0x20	; 32
    1634:	b7 01       	movw	r22, r14
    1636:	90 e0       	ldi	r25, 0x00	; 0
    1638:	40 d1       	rcall	.+640    	; 0x18ba <fputc>
    163a:	0f 5f       	subi	r16, 0xFF	; 255
    163c:	1f 4f       	sbci	r17, 0xFF	; 255
    163e:	d3 cf       	rjmp	.-90     	; 0x15e6 <__EEPROM_REGION_LENGTH__+0x5e6>
    1640:	23 e0       	ldi	r18, 0x03	; 3
    1642:	25 15       	cp	r18, r5
    1644:	10 f4       	brcc	.+4      	; 0x164a <__EEPROM_REGION_LENGTH__+0x64a>
    1646:	83 e0       	ldi	r24, 0x03	; 3
    1648:	c1 cf       	rjmp	.-126    	; 0x15cc <__EEPROM_REGION_LENGTH__+0x5cc>
    164a:	51 2c       	mov	r5, r1
    164c:	c4 cf       	rjmp	.-120    	; 0x15d6 <__EEPROM_REGION_LENGTH__+0x5d6>
    164e:	60 96       	adiw	r28, 0x10	; 16
    1650:	0f b6       	in	r0, 0x3f	; 63
    1652:	f8 94       	cli
    1654:	de bf       	out	0x3e, r29	; 62
    1656:	0f be       	out	0x3f, r0	; 63
    1658:	cd bf       	out	0x3d, r28	; 61
    165a:	df 91       	pop	r29
    165c:	cf 91       	pop	r28
    165e:	1f 91       	pop	r17
    1660:	0f 91       	pop	r16
    1662:	ff 90       	pop	r15
    1664:	ef 90       	pop	r14
    1666:	df 90       	pop	r13
    1668:	cf 90       	pop	r12
    166a:	bf 90       	pop	r11
    166c:	af 90       	pop	r10
    166e:	9f 90       	pop	r9
    1670:	8f 90       	pop	r8
    1672:	7f 90       	pop	r7
    1674:	6f 90       	pop	r6
    1676:	5f 90       	pop	r5
    1678:	4f 90       	pop	r4
    167a:	3f 90       	pop	r3
    167c:	2f 90       	pop	r2
    167e:	08 95       	ret

00001680 <__divmodhi4>:
    1680:	97 fb       	bst	r25, 7
    1682:	07 2e       	mov	r0, r23
    1684:	16 f4       	brtc	.+4      	; 0x168a <__divmodhi4+0xa>
    1686:	00 94       	com	r0
    1688:	06 d0       	rcall	.+12     	; 0x1696 <__divmodhi4_neg1>
    168a:	77 fd       	sbrc	r23, 7
    168c:	08 d0       	rcall	.+16     	; 0x169e <__divmodhi4_neg2>
    168e:	13 d0       	rcall	.+38     	; 0x16b6 <__udivmodhi4>
    1690:	07 fc       	sbrc	r0, 7
    1692:	05 d0       	rcall	.+10     	; 0x169e <__divmodhi4_neg2>
    1694:	3e f4       	brtc	.+14     	; 0x16a4 <__divmodhi4_exit>

00001696 <__divmodhi4_neg1>:
    1696:	90 95       	com	r25
    1698:	81 95       	neg	r24
    169a:	9f 4f       	sbci	r25, 0xFF	; 255
    169c:	08 95       	ret

0000169e <__divmodhi4_neg2>:
    169e:	70 95       	com	r23
    16a0:	61 95       	neg	r22
    16a2:	7f 4f       	sbci	r23, 0xFF	; 255

000016a4 <__divmodhi4_exit>:
    16a4:	08 95       	ret

000016a6 <__tablejump2__>:
    16a6:	ee 0f       	add	r30, r30
    16a8:	ff 1f       	adc	r31, r31
    16aa:	88 1f       	adc	r24, r24
    16ac:	8b bf       	out	0x3b, r24	; 59
    16ae:	07 90       	elpm	r0, Z+
    16b0:	f6 91       	elpm	r31, Z
    16b2:	e0 2d       	mov	r30, r0
    16b4:	19 94       	eijmp

000016b6 <__udivmodhi4>:
    16b6:	aa 1b       	sub	r26, r26
    16b8:	bb 1b       	sub	r27, r27
    16ba:	51 e1       	ldi	r21, 0x11	; 17
    16bc:	07 c0       	rjmp	.+14     	; 0x16cc <__udivmodhi4_ep>

000016be <__udivmodhi4_loop>:
    16be:	aa 1f       	adc	r26, r26
    16c0:	bb 1f       	adc	r27, r27
    16c2:	a6 17       	cp	r26, r22
    16c4:	b7 07       	cpc	r27, r23
    16c6:	10 f0       	brcs	.+4      	; 0x16cc <__udivmodhi4_ep>
    16c8:	a6 1b       	sub	r26, r22
    16ca:	b7 0b       	sbc	r27, r23

000016cc <__udivmodhi4_ep>:
    16cc:	88 1f       	adc	r24, r24
    16ce:	99 1f       	adc	r25, r25
    16d0:	5a 95       	dec	r21
    16d2:	a9 f7       	brne	.-22     	; 0x16be <__udivmodhi4_loop>
    16d4:	80 95       	com	r24
    16d6:	90 95       	com	r25
    16d8:	bc 01       	movw	r22, r24
    16da:	cd 01       	movw	r24, r26
    16dc:	08 95       	ret

000016de <__ftoa_engine>:
    16de:	28 30       	cpi	r18, 0x08	; 8
    16e0:	08 f0       	brcs	.+2      	; 0x16e4 <__ftoa_engine+0x6>
    16e2:	27 e0       	ldi	r18, 0x07	; 7
    16e4:	33 27       	eor	r19, r19
    16e6:	da 01       	movw	r26, r20
    16e8:	99 0f       	add	r25, r25
    16ea:	31 1d       	adc	r19, r1
    16ec:	87 fd       	sbrc	r24, 7
    16ee:	91 60       	ori	r25, 0x01	; 1
    16f0:	00 96       	adiw	r24, 0x00	; 0
    16f2:	61 05       	cpc	r22, r1
    16f4:	71 05       	cpc	r23, r1
    16f6:	39 f4       	brne	.+14     	; 0x1706 <__ftoa_engine+0x28>
    16f8:	32 60       	ori	r19, 0x02	; 2
    16fa:	2e 5f       	subi	r18, 0xFE	; 254
    16fc:	3d 93       	st	X+, r19
    16fe:	30 e3       	ldi	r19, 0x30	; 48
    1700:	2a 95       	dec	r18
    1702:	e1 f7       	brne	.-8      	; 0x16fc <__ftoa_engine+0x1e>
    1704:	08 95       	ret
    1706:	9f 3f       	cpi	r25, 0xFF	; 255
    1708:	30 f0       	brcs	.+12     	; 0x1716 <__ftoa_engine+0x38>
    170a:	80 38       	cpi	r24, 0x80	; 128
    170c:	71 05       	cpc	r23, r1
    170e:	61 05       	cpc	r22, r1
    1710:	09 f0       	breq	.+2      	; 0x1714 <__ftoa_engine+0x36>
    1712:	3c 5f       	subi	r19, 0xFC	; 252
    1714:	3c 5f       	subi	r19, 0xFC	; 252
    1716:	3d 93       	st	X+, r19
    1718:	91 30       	cpi	r25, 0x01	; 1
    171a:	08 f0       	brcs	.+2      	; 0x171e <__ftoa_engine+0x40>
    171c:	80 68       	ori	r24, 0x80	; 128
    171e:	91 1d       	adc	r25, r1
    1720:	df 93       	push	r29
    1722:	cf 93       	push	r28
    1724:	1f 93       	push	r17
    1726:	0f 93       	push	r16
    1728:	ff 92       	push	r15
    172a:	ef 92       	push	r14
    172c:	19 2f       	mov	r17, r25
    172e:	98 7f       	andi	r25, 0xF8	; 248
    1730:	96 95       	lsr	r25
    1732:	e9 2f       	mov	r30, r25
    1734:	96 95       	lsr	r25
    1736:	96 95       	lsr	r25
    1738:	e9 0f       	add	r30, r25
    173a:	ff 27       	eor	r31, r31
    173c:	ea 5a       	subi	r30, 0xAA	; 170
    173e:	fe 4f       	sbci	r31, 0xFE	; 254
    1740:	99 27       	eor	r25, r25
    1742:	33 27       	eor	r19, r19
    1744:	ee 24       	eor	r14, r14
    1746:	ff 24       	eor	r15, r15
    1748:	a7 01       	movw	r20, r14
    174a:	e7 01       	movw	r28, r14
    174c:	05 90       	lpm	r0, Z+
    174e:	08 94       	sec
    1750:	07 94       	ror	r0
    1752:	28 f4       	brcc	.+10     	; 0x175e <__ftoa_engine+0x80>
    1754:	36 0f       	add	r19, r22
    1756:	e7 1e       	adc	r14, r23
    1758:	f8 1e       	adc	r15, r24
    175a:	49 1f       	adc	r20, r25
    175c:	51 1d       	adc	r21, r1
    175e:	66 0f       	add	r22, r22
    1760:	77 1f       	adc	r23, r23
    1762:	88 1f       	adc	r24, r24
    1764:	99 1f       	adc	r25, r25
    1766:	06 94       	lsr	r0
    1768:	a1 f7       	brne	.-24     	; 0x1752 <__ftoa_engine+0x74>
    176a:	05 90       	lpm	r0, Z+
    176c:	07 94       	ror	r0
    176e:	28 f4       	brcc	.+10     	; 0x177a <__ftoa_engine+0x9c>
    1770:	e7 0e       	add	r14, r23
    1772:	f8 1e       	adc	r15, r24
    1774:	49 1f       	adc	r20, r25
    1776:	56 1f       	adc	r21, r22
    1778:	c1 1d       	adc	r28, r1
    177a:	77 0f       	add	r23, r23
    177c:	88 1f       	adc	r24, r24
    177e:	99 1f       	adc	r25, r25
    1780:	66 1f       	adc	r22, r22
    1782:	06 94       	lsr	r0
    1784:	a1 f7       	brne	.-24     	; 0x176e <__ftoa_engine+0x90>
    1786:	05 90       	lpm	r0, Z+
    1788:	07 94       	ror	r0
    178a:	28 f4       	brcc	.+10     	; 0x1796 <__ftoa_engine+0xb8>
    178c:	f8 0e       	add	r15, r24
    178e:	49 1f       	adc	r20, r25
    1790:	56 1f       	adc	r21, r22
    1792:	c7 1f       	adc	r28, r23
    1794:	d1 1d       	adc	r29, r1
    1796:	88 0f       	add	r24, r24
    1798:	99 1f       	adc	r25, r25
    179a:	66 1f       	adc	r22, r22
    179c:	77 1f       	adc	r23, r23
    179e:	06 94       	lsr	r0
    17a0:	a1 f7       	brne	.-24     	; 0x178a <__ftoa_engine+0xac>
    17a2:	05 90       	lpm	r0, Z+
    17a4:	07 94       	ror	r0
    17a6:	20 f4       	brcc	.+8      	; 0x17b0 <__ftoa_engine+0xd2>
    17a8:	49 0f       	add	r20, r25
    17aa:	56 1f       	adc	r21, r22
    17ac:	c7 1f       	adc	r28, r23
    17ae:	d8 1f       	adc	r29, r24
    17b0:	99 0f       	add	r25, r25
    17b2:	66 1f       	adc	r22, r22
    17b4:	77 1f       	adc	r23, r23
    17b6:	88 1f       	adc	r24, r24
    17b8:	06 94       	lsr	r0
    17ba:	a9 f7       	brne	.-22     	; 0x17a6 <__ftoa_engine+0xc8>
    17bc:	84 91       	lpm	r24, Z
    17be:	10 95       	com	r17
    17c0:	17 70       	andi	r17, 0x07	; 7
    17c2:	41 f0       	breq	.+16     	; 0x17d4 <__ftoa_engine+0xf6>
    17c4:	d6 95       	lsr	r29
    17c6:	c7 95       	ror	r28
    17c8:	57 95       	ror	r21
    17ca:	47 95       	ror	r20
    17cc:	f7 94       	ror	r15
    17ce:	e7 94       	ror	r14
    17d0:	1a 95       	dec	r17
    17d2:	c1 f7       	brne	.-16     	; 0x17c4 <__ftoa_engine+0xe6>
    17d4:	ec ef       	ldi	r30, 0xFC	; 252
    17d6:	f0 e0       	ldi	r31, 0x00	; 0
    17d8:	68 94       	set
    17da:	15 90       	lpm	r1, Z+
    17dc:	15 91       	lpm	r17, Z+
    17de:	35 91       	lpm	r19, Z+
    17e0:	65 91       	lpm	r22, Z+
    17e2:	95 91       	lpm	r25, Z+
    17e4:	05 90       	lpm	r0, Z+
    17e6:	7f e2       	ldi	r23, 0x2F	; 47
    17e8:	73 95       	inc	r23
    17ea:	e1 18       	sub	r14, r1
    17ec:	f1 0a       	sbc	r15, r17
    17ee:	43 0b       	sbc	r20, r19
    17f0:	56 0b       	sbc	r21, r22
    17f2:	c9 0b       	sbc	r28, r25
    17f4:	d0 09       	sbc	r29, r0
    17f6:	c0 f7       	brcc	.-16     	; 0x17e8 <__ftoa_engine+0x10a>
    17f8:	e1 0c       	add	r14, r1
    17fa:	f1 1e       	adc	r15, r17
    17fc:	43 1f       	adc	r20, r19
    17fe:	56 1f       	adc	r21, r22
    1800:	c9 1f       	adc	r28, r25
    1802:	d0 1d       	adc	r29, r0
    1804:	7e f4       	brtc	.+30     	; 0x1824 <__ftoa_engine+0x146>
    1806:	70 33       	cpi	r23, 0x30	; 48
    1808:	11 f4       	brne	.+4      	; 0x180e <__ftoa_engine+0x130>
    180a:	8a 95       	dec	r24
    180c:	e6 cf       	rjmp	.-52     	; 0x17da <__ftoa_engine+0xfc>
    180e:	e8 94       	clt
    1810:	01 50       	subi	r16, 0x01	; 1
    1812:	30 f0       	brcs	.+12     	; 0x1820 <__ftoa_engine+0x142>
    1814:	08 0f       	add	r16, r24
    1816:	0a f4       	brpl	.+2      	; 0x181a <__ftoa_engine+0x13c>
    1818:	00 27       	eor	r16, r16
    181a:	02 17       	cp	r16, r18
    181c:	08 f4       	brcc	.+2      	; 0x1820 <__ftoa_engine+0x142>
    181e:	20 2f       	mov	r18, r16
    1820:	23 95       	inc	r18
    1822:	02 2f       	mov	r16, r18
    1824:	7a 33       	cpi	r23, 0x3A	; 58
    1826:	28 f0       	brcs	.+10     	; 0x1832 <__ftoa_engine+0x154>
    1828:	79 e3       	ldi	r23, 0x39	; 57
    182a:	7d 93       	st	X+, r23
    182c:	2a 95       	dec	r18
    182e:	e9 f7       	brne	.-6      	; 0x182a <__ftoa_engine+0x14c>
    1830:	10 c0       	rjmp	.+32     	; 0x1852 <__ftoa_engine+0x174>
    1832:	7d 93       	st	X+, r23
    1834:	2a 95       	dec	r18
    1836:	89 f6       	brne	.-94     	; 0x17da <__ftoa_engine+0xfc>
    1838:	06 94       	lsr	r0
    183a:	97 95       	ror	r25
    183c:	67 95       	ror	r22
    183e:	37 95       	ror	r19
    1840:	17 95       	ror	r17
    1842:	17 94       	ror	r1
    1844:	e1 18       	sub	r14, r1
    1846:	f1 0a       	sbc	r15, r17
    1848:	43 0b       	sbc	r20, r19
    184a:	56 0b       	sbc	r21, r22
    184c:	c9 0b       	sbc	r28, r25
    184e:	d0 09       	sbc	r29, r0
    1850:	98 f0       	brcs	.+38     	; 0x1878 <__ftoa_engine+0x19a>
    1852:	23 95       	inc	r18
    1854:	7e 91       	ld	r23, -X
    1856:	73 95       	inc	r23
    1858:	7a 33       	cpi	r23, 0x3A	; 58
    185a:	08 f0       	brcs	.+2      	; 0x185e <__ftoa_engine+0x180>
    185c:	70 e3       	ldi	r23, 0x30	; 48
    185e:	7c 93       	st	X, r23
    1860:	20 13       	cpse	r18, r16
    1862:	b8 f7       	brcc	.-18     	; 0x1852 <__ftoa_engine+0x174>
    1864:	7e 91       	ld	r23, -X
    1866:	70 61       	ori	r23, 0x10	; 16
    1868:	7d 93       	st	X+, r23
    186a:	30 f0       	brcs	.+12     	; 0x1878 <__ftoa_engine+0x19a>
    186c:	83 95       	inc	r24
    186e:	71 e3       	ldi	r23, 0x31	; 49
    1870:	7d 93       	st	X+, r23
    1872:	70 e3       	ldi	r23, 0x30	; 48
    1874:	2a 95       	dec	r18
    1876:	e1 f7       	brne	.-8      	; 0x1870 <__ftoa_engine+0x192>
    1878:	11 24       	eor	r1, r1
    187a:	ef 90       	pop	r14
    187c:	ff 90       	pop	r15
    187e:	0f 91       	pop	r16
    1880:	1f 91       	pop	r17
    1882:	cf 91       	pop	r28
    1884:	df 91       	pop	r29
    1886:	99 27       	eor	r25, r25
    1888:	87 fd       	sbrc	r24, 7
    188a:	90 95       	com	r25
    188c:	08 95       	ret

0000188e <strnlen_P>:
    188e:	fc 01       	movw	r30, r24
    1890:	05 90       	lpm	r0, Z+
    1892:	61 50       	subi	r22, 0x01	; 1
    1894:	70 40       	sbci	r23, 0x00	; 0
    1896:	01 10       	cpse	r0, r1
    1898:	d8 f7       	brcc	.-10     	; 0x1890 <strnlen_P+0x2>
    189a:	80 95       	com	r24
    189c:	90 95       	com	r25
    189e:	8e 0f       	add	r24, r30
    18a0:	9f 1f       	adc	r25, r31
    18a2:	08 95       	ret

000018a4 <strnlen>:
    18a4:	fc 01       	movw	r30, r24
    18a6:	61 50       	subi	r22, 0x01	; 1
    18a8:	70 40       	sbci	r23, 0x00	; 0
    18aa:	01 90       	ld	r0, Z+
    18ac:	01 10       	cpse	r0, r1
    18ae:	d8 f7       	brcc	.-10     	; 0x18a6 <strnlen+0x2>
    18b0:	80 95       	com	r24
    18b2:	90 95       	com	r25
    18b4:	8e 0f       	add	r24, r30
    18b6:	9f 1f       	adc	r25, r31
    18b8:	08 95       	ret

000018ba <fputc>:
    18ba:	0f 93       	push	r16
    18bc:	1f 93       	push	r17
    18be:	cf 93       	push	r28
    18c0:	df 93       	push	r29
    18c2:	fb 01       	movw	r30, r22
    18c4:	23 81       	ldd	r18, Z+3	; 0x03
    18c6:	21 fd       	sbrc	r18, 1
    18c8:	03 c0       	rjmp	.+6      	; 0x18d0 <fputc+0x16>
    18ca:	8f ef       	ldi	r24, 0xFF	; 255
    18cc:	9f ef       	ldi	r25, 0xFF	; 255
    18ce:	2c c0       	rjmp	.+88     	; 0x1928 <fputc+0x6e>
    18d0:	22 ff       	sbrs	r18, 2
    18d2:	16 c0       	rjmp	.+44     	; 0x1900 <fputc+0x46>
    18d4:	46 81       	ldd	r20, Z+6	; 0x06
    18d6:	57 81       	ldd	r21, Z+7	; 0x07
    18d8:	24 81       	ldd	r18, Z+4	; 0x04
    18da:	35 81       	ldd	r19, Z+5	; 0x05
    18dc:	42 17       	cp	r20, r18
    18de:	53 07       	cpc	r21, r19
    18e0:	44 f4       	brge	.+16     	; 0x18f2 <fputc+0x38>
    18e2:	a0 81       	ld	r26, Z
    18e4:	b1 81       	ldd	r27, Z+1	; 0x01
    18e6:	9d 01       	movw	r18, r26
    18e8:	2f 5f       	subi	r18, 0xFF	; 255
    18ea:	3f 4f       	sbci	r19, 0xFF	; 255
    18ec:	31 83       	std	Z+1, r19	; 0x01
    18ee:	20 83       	st	Z, r18
    18f0:	8c 93       	st	X, r24
    18f2:	26 81       	ldd	r18, Z+6	; 0x06
    18f4:	37 81       	ldd	r19, Z+7	; 0x07
    18f6:	2f 5f       	subi	r18, 0xFF	; 255
    18f8:	3f 4f       	sbci	r19, 0xFF	; 255
    18fa:	37 83       	std	Z+7, r19	; 0x07
    18fc:	26 83       	std	Z+6, r18	; 0x06
    18fe:	14 c0       	rjmp	.+40     	; 0x1928 <fputc+0x6e>
    1900:	8b 01       	movw	r16, r22
    1902:	ec 01       	movw	r28, r24
    1904:	fb 01       	movw	r30, r22
    1906:	00 84       	ldd	r0, Z+8	; 0x08
    1908:	f1 85       	ldd	r31, Z+9	; 0x09
    190a:	e0 2d       	mov	r30, r0
    190c:	19 95       	eicall
    190e:	89 2b       	or	r24, r25
    1910:	e1 f6       	brne	.-72     	; 0x18ca <fputc+0x10>
    1912:	d8 01       	movw	r26, r16
    1914:	16 96       	adiw	r26, 0x06	; 6
    1916:	8d 91       	ld	r24, X+
    1918:	9c 91       	ld	r25, X
    191a:	17 97       	sbiw	r26, 0x07	; 7
    191c:	01 96       	adiw	r24, 0x01	; 1
    191e:	17 96       	adiw	r26, 0x07	; 7
    1920:	9c 93       	st	X, r25
    1922:	8e 93       	st	-X, r24
    1924:	16 97       	sbiw	r26, 0x06	; 6
    1926:	ce 01       	movw	r24, r28
    1928:	df 91       	pop	r29
    192a:	cf 91       	pop	r28
    192c:	1f 91       	pop	r17
    192e:	0f 91       	pop	r16
    1930:	08 95       	ret

00001932 <sprintf>:
    1932:	0f 93       	push	r16
    1934:	1f 93       	push	r17
    1936:	cf 93       	push	r28
    1938:	df 93       	push	r29
    193a:	cd b7       	in	r28, 0x3d	; 61
    193c:	de b7       	in	r29, 0x3e	; 62
    193e:	2e 97       	sbiw	r28, 0x0e	; 14
    1940:	0f b6       	in	r0, 0x3f	; 63
    1942:	f8 94       	cli
    1944:	de bf       	out	0x3e, r29	; 62
    1946:	0f be       	out	0x3f, r0	; 63
    1948:	cd bf       	out	0x3d, r28	; 61
    194a:	0e 89       	ldd	r16, Y+22	; 0x16
    194c:	1f 89       	ldd	r17, Y+23	; 0x17
    194e:	86 e0       	ldi	r24, 0x06	; 6
    1950:	8c 83       	std	Y+4, r24	; 0x04
    1952:	1a 83       	std	Y+2, r17	; 0x02
    1954:	09 83       	std	Y+1, r16	; 0x01
    1956:	8f ef       	ldi	r24, 0xFF	; 255
    1958:	9f e7       	ldi	r25, 0x7F	; 127
    195a:	9e 83       	std	Y+6, r25	; 0x06
    195c:	8d 83       	std	Y+5, r24	; 0x05
    195e:	ae 01       	movw	r20, r28
    1960:	46 5e       	subi	r20, 0xE6	; 230
    1962:	5f 4f       	sbci	r21, 0xFF	; 255
    1964:	68 8d       	ldd	r22, Y+24	; 0x18
    1966:	79 8d       	ldd	r23, Y+25	; 0x19
    1968:	ce 01       	movw	r24, r28
    196a:	01 96       	adiw	r24, 0x01	; 1
    196c:	00 db       	rcall	.-2560   	; 0xf6e <vfprintf>
    196e:	ef 81       	ldd	r30, Y+7	; 0x07
    1970:	f8 85       	ldd	r31, Y+8	; 0x08
    1972:	e0 0f       	add	r30, r16
    1974:	f1 1f       	adc	r31, r17
    1976:	10 82       	st	Z, r1
    1978:	2e 96       	adiw	r28, 0x0e	; 14
    197a:	0f b6       	in	r0, 0x3f	; 63
    197c:	f8 94       	cli
    197e:	de bf       	out	0x3e, r29	; 62
    1980:	0f be       	out	0x3f, r0	; 63
    1982:	cd bf       	out	0x3d, r28	; 61
    1984:	df 91       	pop	r29
    1986:	cf 91       	pop	r28
    1988:	1f 91       	pop	r17
    198a:	0f 91       	pop	r16
    198c:	08 95       	ret

0000198e <__ultoa_invert>:
    198e:	fa 01       	movw	r30, r20
    1990:	aa 27       	eor	r26, r26
    1992:	28 30       	cpi	r18, 0x08	; 8
    1994:	51 f1       	breq	.+84     	; 0x19ea <__ultoa_invert+0x5c>
    1996:	20 31       	cpi	r18, 0x10	; 16
    1998:	81 f1       	breq	.+96     	; 0x19fa <__ultoa_invert+0x6c>
    199a:	e8 94       	clt
    199c:	6f 93       	push	r22
    199e:	6e 7f       	andi	r22, 0xFE	; 254
    19a0:	6e 5f       	subi	r22, 0xFE	; 254
    19a2:	7f 4f       	sbci	r23, 0xFF	; 255
    19a4:	8f 4f       	sbci	r24, 0xFF	; 255
    19a6:	9f 4f       	sbci	r25, 0xFF	; 255
    19a8:	af 4f       	sbci	r26, 0xFF	; 255
    19aa:	b1 e0       	ldi	r27, 0x01	; 1
    19ac:	3e d0       	rcall	.+124    	; 0x1a2a <__ultoa_invert+0x9c>
    19ae:	b4 e0       	ldi	r27, 0x04	; 4
    19b0:	3c d0       	rcall	.+120    	; 0x1a2a <__ultoa_invert+0x9c>
    19b2:	67 0f       	add	r22, r23
    19b4:	78 1f       	adc	r23, r24
    19b6:	89 1f       	adc	r24, r25
    19b8:	9a 1f       	adc	r25, r26
    19ba:	a1 1d       	adc	r26, r1
    19bc:	68 0f       	add	r22, r24
    19be:	79 1f       	adc	r23, r25
    19c0:	8a 1f       	adc	r24, r26
    19c2:	91 1d       	adc	r25, r1
    19c4:	a1 1d       	adc	r26, r1
    19c6:	6a 0f       	add	r22, r26
    19c8:	71 1d       	adc	r23, r1
    19ca:	81 1d       	adc	r24, r1
    19cc:	91 1d       	adc	r25, r1
    19ce:	a1 1d       	adc	r26, r1
    19d0:	20 d0       	rcall	.+64     	; 0x1a12 <__ultoa_invert+0x84>
    19d2:	09 f4       	brne	.+2      	; 0x19d6 <__ultoa_invert+0x48>
    19d4:	68 94       	set
    19d6:	3f 91       	pop	r19
    19d8:	2a e0       	ldi	r18, 0x0A	; 10
    19da:	26 9f       	mul	r18, r22
    19dc:	11 24       	eor	r1, r1
    19de:	30 19       	sub	r19, r0
    19e0:	30 5d       	subi	r19, 0xD0	; 208
    19e2:	31 93       	st	Z+, r19
    19e4:	de f6       	brtc	.-74     	; 0x199c <__ultoa_invert+0xe>
    19e6:	cf 01       	movw	r24, r30
    19e8:	08 95       	ret
    19ea:	46 2f       	mov	r20, r22
    19ec:	47 70       	andi	r20, 0x07	; 7
    19ee:	40 5d       	subi	r20, 0xD0	; 208
    19f0:	41 93       	st	Z+, r20
    19f2:	b3 e0       	ldi	r27, 0x03	; 3
    19f4:	0f d0       	rcall	.+30     	; 0x1a14 <__ultoa_invert+0x86>
    19f6:	c9 f7       	brne	.-14     	; 0x19ea <__ultoa_invert+0x5c>
    19f8:	f6 cf       	rjmp	.-20     	; 0x19e6 <__ultoa_invert+0x58>
    19fa:	46 2f       	mov	r20, r22
    19fc:	4f 70       	andi	r20, 0x0F	; 15
    19fe:	40 5d       	subi	r20, 0xD0	; 208
    1a00:	4a 33       	cpi	r20, 0x3A	; 58
    1a02:	18 f0       	brcs	.+6      	; 0x1a0a <__ultoa_invert+0x7c>
    1a04:	49 5d       	subi	r20, 0xD9	; 217
    1a06:	31 fd       	sbrc	r19, 1
    1a08:	40 52       	subi	r20, 0x20	; 32
    1a0a:	41 93       	st	Z+, r20
    1a0c:	02 d0       	rcall	.+4      	; 0x1a12 <__ultoa_invert+0x84>
    1a0e:	a9 f7       	brne	.-22     	; 0x19fa <__ultoa_invert+0x6c>
    1a10:	ea cf       	rjmp	.-44     	; 0x19e6 <__ultoa_invert+0x58>
    1a12:	b4 e0       	ldi	r27, 0x04	; 4
    1a14:	a6 95       	lsr	r26
    1a16:	97 95       	ror	r25
    1a18:	87 95       	ror	r24
    1a1a:	77 95       	ror	r23
    1a1c:	67 95       	ror	r22
    1a1e:	ba 95       	dec	r27
    1a20:	c9 f7       	brne	.-14     	; 0x1a14 <__ultoa_invert+0x86>
    1a22:	00 97       	sbiw	r24, 0x00	; 0
    1a24:	61 05       	cpc	r22, r1
    1a26:	71 05       	cpc	r23, r1
    1a28:	08 95       	ret
    1a2a:	9b 01       	movw	r18, r22
    1a2c:	ac 01       	movw	r20, r24
    1a2e:	0a 2e       	mov	r0, r26
    1a30:	06 94       	lsr	r0
    1a32:	57 95       	ror	r21
    1a34:	47 95       	ror	r20
    1a36:	37 95       	ror	r19
    1a38:	27 95       	ror	r18
    1a3a:	ba 95       	dec	r27
    1a3c:	c9 f7       	brne	.-14     	; 0x1a30 <__ultoa_invert+0xa2>
    1a3e:	62 0f       	add	r22, r18
    1a40:	73 1f       	adc	r23, r19
    1a42:	84 1f       	adc	r24, r20
    1a44:	95 1f       	adc	r25, r21
    1a46:	a0 1d       	adc	r26, r0
    1a48:	08 95       	ret

00001a4a <_exit>:
    1a4a:	f8 94       	cli

00001a4c <__stop_program>:
    1a4c:	ff cf       	rjmp	.-2      	; 0x1a4c <__stop_program>
