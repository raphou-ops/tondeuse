
Adrian_Catuneanu_Laboratoire1_Communication.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800200  000019a8  00001a3c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000019a8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000022b  00800212  00800212  00001a4e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001a4e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001aac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000120  00000000  00000000  00001aec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001bcb  00000000  00000000  00001c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001054  00000000  00000000  000037d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c48  00000000  00000000  0000482b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000030c  00000000  00000000  00005474  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000974  00000000  00000000  00005780  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d7d  00000000  00000000  000060f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000140  00000000  00000000  00006e71  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	fa c0       	rjmp	.+500    	; 0x1f6 <__ctors_end>
       2:	00 00       	nop
       4:	18 c1       	rjmp	.+560    	; 0x236 <__bad_interrupt>
       6:	00 00       	nop
       8:	16 c1       	rjmp	.+556    	; 0x236 <__bad_interrupt>
       a:	00 00       	nop
       c:	14 c1       	rjmp	.+552    	; 0x236 <__bad_interrupt>
       e:	00 00       	nop
      10:	12 c1       	rjmp	.+548    	; 0x236 <__bad_interrupt>
      12:	00 00       	nop
      14:	10 c1       	rjmp	.+544    	; 0x236 <__bad_interrupt>
      16:	00 00       	nop
      18:	0e c1       	rjmp	.+540    	; 0x236 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	0c c1       	rjmp	.+536    	; 0x236 <__bad_interrupt>
      1e:	00 00       	nop
      20:	0a c1       	rjmp	.+532    	; 0x236 <__bad_interrupt>
      22:	00 00       	nop
      24:	08 c1       	rjmp	.+528    	; 0x236 <__bad_interrupt>
      26:	00 00       	nop
      28:	06 c1       	rjmp	.+524    	; 0x236 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	04 c1       	rjmp	.+520    	; 0x236 <__bad_interrupt>
      2e:	00 00       	nop
      30:	02 c1       	rjmp	.+516    	; 0x236 <__bad_interrupt>
      32:	00 00       	nop
      34:	00 c1       	rjmp	.+512    	; 0x236 <__bad_interrupt>
      36:	00 00       	nop
      38:	fe c0       	rjmp	.+508    	; 0x236 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	fc c0       	rjmp	.+504    	; 0x236 <__bad_interrupt>
      3e:	00 00       	nop
      40:	fa c0       	rjmp	.+500    	; 0x236 <__bad_interrupt>
      42:	00 00       	nop
      44:	f8 c0       	rjmp	.+496    	; 0x236 <__bad_interrupt>
      46:	00 00       	nop
      48:	f6 c0       	rjmp	.+492    	; 0x236 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	f4 c0       	rjmp	.+488    	; 0x236 <__bad_interrupt>
      4e:	00 00       	nop
      50:	f2 c0       	rjmp	.+484    	; 0x236 <__bad_interrupt>
      52:	00 00       	nop
      54:	09 c3       	rjmp	.+1554   	; 0x668 <__vector_21>
      56:	00 00       	nop
      58:	ee c0       	rjmp	.+476    	; 0x236 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	ec c0       	rjmp	.+472    	; 0x236 <__bad_interrupt>
      5e:	00 00       	nop
      60:	ea c0       	rjmp	.+468    	; 0x236 <__bad_interrupt>
      62:	00 00       	nop
      64:	e8 c0       	rjmp	.+464    	; 0x236 <__bad_interrupt>
      66:	00 00       	nop
      68:	e6 c0       	rjmp	.+460    	; 0x236 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	e4 c0       	rjmp	.+456    	; 0x236 <__bad_interrupt>
      6e:	00 00       	nop
      70:	e2 c0       	rjmp	.+452    	; 0x236 <__bad_interrupt>
      72:	00 00       	nop
      74:	e0 c0       	rjmp	.+448    	; 0x236 <__bad_interrupt>
      76:	00 00       	nop
      78:	de c0       	rjmp	.+444    	; 0x236 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	dc c0       	rjmp	.+440    	; 0x236 <__bad_interrupt>
      7e:	00 00       	nop
      80:	da c0       	rjmp	.+436    	; 0x236 <__bad_interrupt>
      82:	00 00       	nop
      84:	d8 c0       	rjmp	.+432    	; 0x236 <__bad_interrupt>
      86:	00 00       	nop
      88:	d6 c0       	rjmp	.+428    	; 0x236 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	d4 c0       	rjmp	.+424    	; 0x236 <__bad_interrupt>
      8e:	00 00       	nop
      90:	ea c3       	rjmp	.+2004   	; 0x866 <__vector_36>
      92:	00 00       	nop
      94:	b3 c3       	rjmp	.+1894   	; 0x7fc <__vector_37>
      96:	00 00       	nop
      98:	ce c0       	rjmp	.+412    	; 0x236 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	cc c0       	rjmp	.+408    	; 0x236 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	ca c0       	rjmp	.+404    	; 0x236 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	c8 c0       	rjmp	.+400    	; 0x236 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	c6 c0       	rjmp	.+396    	; 0x236 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	c4 c0       	rjmp	.+392    	; 0x236 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	c2 c0       	rjmp	.+388    	; 0x236 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	c0 c0       	rjmp	.+384    	; 0x236 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	be c0       	rjmp	.+380    	; 0x236 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	bc c0       	rjmp	.+376    	; 0x236 <__bad_interrupt>
      be:	00 00       	nop
      c0:	ba c0       	rjmp	.+372    	; 0x236 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	b8 c0       	rjmp	.+368    	; 0x236 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	b6 c0       	rjmp	.+364    	; 0x236 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	b4 c0       	rjmp	.+360    	; 0x236 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	b2 c0       	rjmp	.+356    	; 0x236 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	b0 c0       	rjmp	.+352    	; 0x236 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	ae c0       	rjmp	.+348    	; 0x236 <__bad_interrupt>
      da:	00 00       	nop
      dc:	ac c0       	rjmp	.+344    	; 0x236 <__bad_interrupt>
      de:	00 00       	nop
      e0:	aa c0       	rjmp	.+340    	; 0x236 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	74 04       	cpc	r7, r4
      e6:	87 04       	cpc	r8, r7
      e8:	9a 04       	cpc	r9, r10
      ea:	ad 04       	cpc	r10, r13
      ec:	c0 04       	cpc	r12, r0
      ee:	d3 04       	cpc	r13, r3
      f0:	e6 04       	cpc	r14, r6
      f2:	11 05       	cpc	r17, r1

000000f4 <__trampolines_end>:
      f4:	6e 61       	ori	r22, 0x1E	; 30
      f6:	6e 00       	.word	0x006e	; ????

000000f8 <__c.2332>:
      f8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     108:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     118:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     128:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     138:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     148:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     158:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     168:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     178:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     188:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     198:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1a8:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1b8:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1c8:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1d8:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1e8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001f6 <__ctors_end>:
     1f6:	11 24       	eor	r1, r1
     1f8:	1f be       	out	0x3f, r1	; 63
     1fa:	cf ef       	ldi	r28, 0xFF	; 255
     1fc:	d1 e2       	ldi	r29, 0x21	; 33
     1fe:	de bf       	out	0x3e, r29	; 62
     200:	cd bf       	out	0x3d, r28	; 61
     202:	00 e0       	ldi	r16, 0x00	; 0
     204:	0c bf       	out	0x3c, r16	; 60

00000206 <__do_copy_data>:
     206:	12 e0       	ldi	r17, 0x02	; 2
     208:	a0 e0       	ldi	r26, 0x00	; 0
     20a:	b2 e0       	ldi	r27, 0x02	; 2
     20c:	e8 ea       	ldi	r30, 0xA8	; 168
     20e:	f9 e1       	ldi	r31, 0x19	; 25
     210:	00 e0       	ldi	r16, 0x00	; 0
     212:	0b bf       	out	0x3b, r16	; 59
     214:	02 c0       	rjmp	.+4      	; 0x21a <__do_copy_data+0x14>
     216:	07 90       	elpm	r0, Z+
     218:	0d 92       	st	X+, r0
     21a:	a2 31       	cpi	r26, 0x12	; 18
     21c:	b1 07       	cpc	r27, r17
     21e:	d9 f7       	brne	.-10     	; 0x216 <__do_copy_data+0x10>

00000220 <__do_clear_bss>:
     220:	24 e0       	ldi	r18, 0x04	; 4
     222:	a2 e1       	ldi	r26, 0x12	; 18
     224:	b2 e0       	ldi	r27, 0x02	; 2
     226:	01 c0       	rjmp	.+2      	; 0x22a <.do_clear_bss_start>

00000228 <.do_clear_bss_loop>:
     228:	1d 92       	st	X+, r1

0000022a <.do_clear_bss_start>:
     22a:	ad 33       	cpi	r26, 0x3D	; 61
     22c:	b2 07       	cpc	r27, r18
     22e:	e1 f7       	brne	.-8      	; 0x228 <.do_clear_bss_loop>
     230:	8d d1       	rcall	.+794    	; 0x54c <main>
     232:	0c 94 d2 0c 	jmp	0x19a4	; 0x19a4 <_exit>

00000236 <__bad_interrupt>:
     236:	e4 ce       	rjmp	.-568    	; 0x0 <__vectors>

00000238 <_lcdWrite4bits>:
* @return void
*/

void _lcdWrite4bits(uint8_t data, uint8_t rs)
{
	if(rs)
     238:	66 23       	and	r22, r22
     23a:	21 f0       	breq	.+8      	; 0x244 <_lcdWrite4bits+0xc>
		LCD_RS_ON();
     23c:	92 b1       	in	r25, 0x02	; 2
     23e:	91 60       	ori	r25, 0x01	; 1
     240:	92 b9       	out	0x02, r25	; 2
     242:	03 c0       	rjmp	.+6      	; 0x24a <_lcdWrite4bits+0x12>
	else
		LCD_RS_OFF();
     244:	92 b1       	in	r25, 0x02	; 2
     246:	9e 7f       	andi	r25, 0xFE	; 254
     248:	92 b9       	out	0x02, r25	; 2
	
	LCD_E_ON();
     24a:	92 b1       	in	r25, 0x02	; 2
     24c:	92 60       	ori	r25, 0x02	; 2
     24e:	92 b9       	out	0x02, r25	; 2
	
	if(data & 1)
     250:	80 ff       	sbrs	r24, 0
     252:	04 c0       	rjmp	.+8      	; 0x25c <_lcdWrite4bits+0x24>
		LCD_DB4_ON();
     254:	9e b1       	in	r25, 0x0e	; 14
     256:	98 60       	ori	r25, 0x08	; 8
     258:	9e b9       	out	0x0e, r25	; 14
     25a:	03 c0       	rjmp	.+6      	; 0x262 <_lcdWrite4bits+0x2a>
	else
		LCD_DB4_OFF();
     25c:	9e b1       	in	r25, 0x0e	; 14
     25e:	97 7f       	andi	r25, 0xF7	; 247
     260:	9e b9       	out	0x0e, r25	; 14
	
	if(data & 2)
     262:	81 ff       	sbrs	r24, 1
     264:	04 c0       	rjmp	.+8      	; 0x26e <_lcdWrite4bits+0x36>
		LCD_DB5_ON();
     266:	94 b3       	in	r25, 0x14	; 20
     268:	90 62       	ori	r25, 0x20	; 32
     26a:	94 bb       	out	0x14, r25	; 20
     26c:	03 c0       	rjmp	.+6      	; 0x274 <_lcdWrite4bits+0x3c>
	else
		LCD_DB5_OFF();
     26e:	94 b3       	in	r25, 0x14	; 20
     270:	9f 7d       	andi	r25, 0xDF	; 223
     272:	94 bb       	out	0x14, r25	; 20
	
	if(data & 4)
     274:	82 ff       	sbrs	r24, 2
     276:	04 c0       	rjmp	.+8      	; 0x280 <_lcdWrite4bits+0x48>
		LCD_DB6_ON();
     278:	9e b1       	in	r25, 0x0e	; 14
     27a:	90 62       	ori	r25, 0x20	; 32
     27c:	9e b9       	out	0x0e, r25	; 14
     27e:	03 c0       	rjmp	.+6      	; 0x286 <_lcdWrite4bits+0x4e>
	else
		LCD_DB6_OFF();
     280:	9e b1       	in	r25, 0x0e	; 14
     282:	9f 7d       	andi	r25, 0xDF	; 223
     284:	9e b9       	out	0x0e, r25	; 14
	
	if(data & 8)
     286:	83 ff       	sbrs	r24, 3
     288:	04 c0       	rjmp	.+8      	; 0x292 <_lcdWrite4bits+0x5a>
		LCD_DB7_ON();
     28a:	8e b1       	in	r24, 0x0e	; 14
     28c:	80 61       	ori	r24, 0x10	; 16
     28e:	8e b9       	out	0x0e, r24	; 14
     290:	03 c0       	rjmp	.+6      	; 0x298 <_lcdWrite4bits+0x60>
	else
		LCD_DB7_OFF();
     292:	8e b1       	in	r24, 0x0e	; 14
     294:	8f 7e       	andi	r24, 0xEF	; 239
     296:	8e b9       	out	0x0e, r24	; 14
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     298:	85 e0       	ldi	r24, 0x05	; 5
     29a:	8a 95       	dec	r24
     29c:	f1 f7       	brne	.-4      	; 0x29a <_lcdWrite4bits+0x62>
     29e:	00 00       	nop
	
	_delay_us(1);
	
	LCD_E_OFF();
     2a0:	82 b1       	in	r24, 0x02	; 2
     2a2:	8d 7f       	andi	r24, 0xFD	; 253
     2a4:	82 b9       	out	0x02, r24	; 2
     2a6:	85 e0       	ldi	r24, 0x05	; 5
     2a8:	8a 95       	dec	r24
     2aa:	f1 f7       	brne	.-4      	; 0x2a8 <_lcdWrite4bits+0x70>
     2ac:	00 00       	nop
     2ae:	08 95       	ret

000002b0 <_lcdWrite8Bits>:
* @param uint8_t rs Recoit la validation et execute la commande data si rs est a 1.
* @return void
*/

void _lcdWrite8Bits(uint8_t data, uint8_t rs)
{
     2b0:	cf 93       	push	r28
     2b2:	df 93       	push	r29
     2b4:	c8 2f       	mov	r28, r24
     2b6:	d6 2f       	mov	r29, r22
	_lcdWrite4bits(data>>4,rs);
     2b8:	82 95       	swap	r24
     2ba:	8f 70       	andi	r24, 0x0F	; 15
     2bc:	bd df       	rcall	.-134    	; 0x238 <_lcdWrite4bits>
	_lcdWrite4bits(data,rs);
     2be:	6d 2f       	mov	r22, r29
     2c0:	8c 2f       	mov	r24, r28
     2c2:	ba df       	rcall	.-140    	; 0x238 <_lcdWrite4bits>
     2c4:	85 ed       	ldi	r24, 0xD5	; 213
     2c6:	8a 95       	dec	r24
     2c8:	f1 f7       	brne	.-4      	; 0x2c6 <_lcdWrite8Bits+0x16>
     2ca:	00 00       	nop
	_delay_us(40);
}
     2cc:	df 91       	pop	r29
     2ce:	cf 91       	pop	r28
     2d0:	08 95       	ret

000002d2 <lcdInit>:
* @return void
*/

void lcdInit()
{
	LCD_RS_INIT();
     2d2:	81 b1       	in	r24, 0x01	; 1
     2d4:	81 60       	ori	r24, 0x01	; 1
     2d6:	81 b9       	out	0x01, r24	; 1
	LCD_E_INIT();
     2d8:	81 b1       	in	r24, 0x01	; 1
     2da:	82 60       	ori	r24, 0x02	; 2
     2dc:	81 b9       	out	0x01, r24	; 1
	LCD_DB4_INIT();
     2de:	8d b1       	in	r24, 0x0d	; 13
     2e0:	88 60       	ori	r24, 0x08	; 8
     2e2:	8d b9       	out	0x0d, r24	; 13
	LCD_DB5_INIT();
     2e4:	83 b3       	in	r24, 0x13	; 19
     2e6:	80 62       	ori	r24, 0x20	; 32
     2e8:	83 bb       	out	0x13, r24	; 19
	LCD_DB6_INIT();
     2ea:	8d b1       	in	r24, 0x0d	; 13
     2ec:	80 62       	ori	r24, 0x20	; 32
     2ee:	8d b9       	out	0x0d, r24	; 13
	LCD_DB7_INIT();
     2f0:	8d b1       	in	r24, 0x0d	; 13
     2f2:	80 61       	ori	r24, 0x10	; 16
     2f4:	8d b9       	out	0x0d, r24	; 13
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2f6:	2f ef       	ldi	r18, 0xFF	; 255
     2f8:	89 ef       	ldi	r24, 0xF9	; 249
     2fa:	90 e0       	ldi	r25, 0x00	; 0
     2fc:	21 50       	subi	r18, 0x01	; 1
     2fe:	80 40       	sbci	r24, 0x00	; 0
     300:	90 40       	sbci	r25, 0x00	; 0
     302:	e1 f7       	brne	.-8      	; 0x2fc <lcdInit+0x2a>
     304:	00 c0       	rjmp	.+0      	; 0x306 <lcdInit+0x34>
     306:	00 00       	nop
	
	
	_delay_ms(20);
	
	_lcdWrite4bits(3,0);
     308:	60 e0       	ldi	r22, 0x00	; 0
     30a:	83 e0       	ldi	r24, 0x03	; 3
     30c:	95 df       	rcall	.-214    	; 0x238 <_lcdWrite4bits>
     30e:	8f e1       	ldi	r24, 0x1F	; 31
     310:	9e e4       	ldi	r25, 0x4E	; 78
     312:	01 97       	sbiw	r24, 0x01	; 1
     314:	f1 f7       	brne	.-4      	; 0x312 <lcdInit+0x40>
     316:	00 c0       	rjmp	.+0      	; 0x318 <lcdInit+0x46>
     318:	00 00       	nop
	
	_delay_ms(5);
	
	_lcdWrite4bits(3,0);
     31a:	60 e0       	ldi	r22, 0x00	; 0
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	8c df       	rcall	.-232    	; 0x238 <_lcdWrite4bits>
     320:	8f e9       	ldi	r24, 0x9F	; 159
     322:	9f e0       	ldi	r25, 0x0F	; 15
     324:	01 97       	sbiw	r24, 0x01	; 1
     326:	f1 f7       	brne	.-4      	; 0x324 <lcdInit+0x52>
     328:	00 c0       	rjmp	.+0      	; 0x32a <lcdInit+0x58>
     32a:	00 00       	nop
	
	_delay_ms(1);
	
	_lcdWrite4bits(3,0);
     32c:	60 e0       	ldi	r22, 0x00	; 0
     32e:	83 e0       	ldi	r24, 0x03	; 3
     330:	83 df       	rcall	.-250    	; 0x238 <_lcdWrite4bits>
     332:	8f e9       	ldi	r24, 0x9F	; 159
     334:	9f e0       	ldi	r25, 0x0F	; 15
     336:	01 97       	sbiw	r24, 0x01	; 1
     338:	f1 f7       	brne	.-4      	; 0x336 <lcdInit+0x64>
     33a:	00 c0       	rjmp	.+0      	; 0x33c <lcdInit+0x6a>
	
	_delay_ms(1);
	
	_lcdWrite4bits(2,0); // mode 4 bits active
     33c:	00 00       	nop
     33e:	60 e0       	ldi	r22, 0x00	; 0
     340:	82 e0       	ldi	r24, 0x02	; 2
     342:	7a df       	rcall	.-268    	; 0x238 <_lcdWrite4bits>
     344:	8f e9       	ldi	r24, 0x9F	; 159
     346:	9f e0       	ldi	r25, 0x0F	; 15
     348:	01 97       	sbiw	r24, 0x01	; 1
     34a:	f1 f7       	brne	.-4      	; 0x348 <lcdInit+0x76>
     34c:	00 c0       	rjmp	.+0      	; 0x34e <lcdInit+0x7c>
	
	_delay_ms(1);
	
	_lcdWrite8Bits(0x28,0); // mode 4 bits - 2 lignes
     34e:	00 00       	nop
     350:	60 e0       	ldi	r22, 0x00	; 0
     352:	88 e2       	ldi	r24, 0x28	; 40
	
	_lcdWrite8Bits(0x08,0); // LCD a off
     354:	ad df       	rcall	.-166    	; 0x2b0 <_lcdWrite8Bits>
     356:	60 e0       	ldi	r22, 0x00	; 0
     358:	88 e0       	ldi	r24, 0x08	; 8
	
	_lcdWrite8Bits(0x01,0); // Clear LCD
     35a:	aa df       	rcall	.-172    	; 0x2b0 <_lcdWrite8Bits>
     35c:	60 e0       	ldi	r22, 0x00	; 0
     35e:	81 e0       	ldi	r24, 0x01	; 1
     360:	a7 df       	rcall	.-178    	; 0x2b0 <_lcdWrite8Bits>
     362:	8f e3       	ldi	r24, 0x3F	; 63
     364:	9f e1       	ldi	r25, 0x1F	; 31
     366:	01 97       	sbiw	r24, 0x01	; 1
     368:	f1 f7       	brne	.-4      	; 0x366 <lcdInit+0x94>
	
	_delay_ms(2);
	
	_lcdWrite8Bits(0x06,0); // Incremente vers la gauche
     36a:	00 c0       	rjmp	.+0      	; 0x36c <lcdInit+0x9a>
     36c:	00 00       	nop
     36e:	60 e0       	ldi	r22, 0x00	; 0
     370:	86 e0       	ldi	r24, 0x06	; 6
	
	_lcdWrite8Bits(0x0F,0); // LCD a on, curseur a on qui clignote
     372:	9e df       	rcall	.-196    	; 0x2b0 <_lcdWrite8Bits>
     374:	60 e0       	ldi	r22, 0x00	; 0
     376:	8f e0       	ldi	r24, 0x0F	; 15
     378:	9b cf       	rjmp	.-202    	; 0x2b0 <_lcdWrite8Bits>
     37a:	08 95       	ret

0000037c <lcdPutc>:
* @return void
*/

void lcdPutc(char c)
{
	_lcdWrite8Bits(c,1);
     37c:	61 e0       	ldi	r22, 0x01	; 1
     37e:	98 cf       	rjmp	.-208    	; 0x2b0 <_lcdWrite8Bits>
     380:	08 95       	ret

00000382 <lcdPuts>:
* @param str chaine de caracteres (char *) longueur maximum de 255. Recoit la string desirer qu'il va imprimmer sur le LCD.
* @return void
*/

void lcdPuts(char*str)
{
     382:	0f 93       	push	r16
     384:	1f 93       	push	r17
     386:	cf 93       	push	r28
     388:	8c 01       	movw	r16, r24
	for(uint8_t i = 0; str[i] && i < 255 ; i++)
     38a:	c0 e0       	ldi	r28, 0x00	; 0
     38c:	02 c0       	rjmp	.+4      	; 0x392 <lcdPuts+0x10>
	{
		lcdPutc(str[i]);
     38e:	f6 df       	rcall	.-20     	; 0x37c <lcdPutc>
* @return void
*/

void lcdPuts(char*str)
{
	for(uint8_t i = 0; str[i] && i < 255 ; i++)
     390:	cf 5f       	subi	r28, 0xFF	; 255
     392:	f8 01       	movw	r30, r16
     394:	ec 0f       	add	r30, r28
     396:	f1 1d       	adc	r31, r1
     398:	80 81       	ld	r24, Z
     39a:	88 23       	and	r24, r24
     39c:	11 f0       	breq	.+4      	; 0x3a2 <lcdPuts+0x20>
     39e:	cf 3f       	cpi	r28, 0xFF	; 255
     3a0:	b1 f7       	brne	.-20     	; 0x38e <lcdPuts+0xc>
	{
		lcdPutc(str[i]);
	}
}
     3a2:	cf 91       	pop	r28
     3a4:	1f 91       	pop	r17
     3a6:	0f 91       	pop	r16
     3a8:	08 95       	ret

000003aa <lcdSetPos>:

void lcdSetPos(uint8_t x, uint8_t y)
{
	uint8_t cmd = 0x80; // commande pour postionner l'adresse DDRAM
	
	if (y)
     3aa:	61 11       	cpse	r22, r1
     3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <lcdSetPos+0x8>
* @return void
*/

void lcdSetPos(uint8_t x, uint8_t y)
{
	uint8_t cmd = 0x80; // commande pour postionner l'adresse DDRAM
     3ae:	90 e8       	ldi	r25, 0x80	; 128
     3b0:	01 c0       	rjmp	.+2      	; 0x3b4 <lcdSetPos+0xa>
	
	if (y)
	cmd |= (1<<6); // positionner l'adresse a 0x40 pour la ligne 2.
     3b2:	90 ec       	ldi	r25, 0xC0	; 192
	cmd |= (x & 0xF);
     3b4:	8f 70       	andi	r24, 0x0F	; 15
	_lcdWrite8Bits(cmd,0);
     3b6:	60 e0       	ldi	r22, 0x00	; 0
     3b8:	89 2b       	or	r24, r25
     3ba:	7a cf       	rjmp	.-268    	; 0x2b0 <_lcdWrite8Bits>
     3bc:	08 95       	ret

000003be <lcdClearScreen>:
* @brief Cete fonction sert a reset l'ecriture afficher sur le LCD
*/

void lcdClearScreen()
{
	_lcdWrite8Bits(0x01,0); // Clear LCD
     3be:	60 e0       	ldi	r22, 0x00	; 0
     3c0:	81 e0       	ldi	r24, 0x01	; 1
     3c2:	76 df       	rcall	.-276    	; 0x2b0 <_lcdWrite8Bits>
     3c4:	8f e3       	ldi	r24, 0x3F	; 63
     3c6:	9f e1       	ldi	r25, 0x1F	; 31
     3c8:	01 97       	sbiw	r24, 0x01	; 1
     3ca:	f1 f7       	brne	.-4      	; 0x3c8 <lcdClearScreen+0xa>
     3cc:	00 c0       	rjmp	.+0      	; 0x3ce <lcdClearScreen+0x10>
     3ce:	00 00       	nop
     3d0:	08 95       	ret

000003d2 <calculerCRC>:
void envoieConfigMsg( uint8_t id,uint8_t etatUart1,uint8_t etatUsb);
void envoieConfigRate(uint8_t frequence);
void envoieConfigPortUart1(uint32_t baudrate);

uint16_t calculerCRC(uint8_t*trame,uint8_t size)
{
     3d2:	dc 01       	movw	r26, r24
	uint8_t checksumA=0;
	uint8_t checksumB=0;
	uint16_t retour=0;
	size=size+6;
     3d4:	6a 5f       	subi	r22, 0xFA	; 250
	for(uint8_t n=2;n<size;n++)
     3d6:	92 e0       	ldi	r25, 0x02	; 2
void envoieConfigPortUart1(uint32_t baudrate);

uint16_t calculerCRC(uint8_t*trame,uint8_t size)
{
	uint8_t checksumA=0;
	uint8_t checksumB=0;
     3d8:	30 e0       	ldi	r19, 0x00	; 0
void envoieConfigRate(uint8_t frequence);
void envoieConfigPortUart1(uint32_t baudrate);

uint16_t calculerCRC(uint8_t*trame,uint8_t size)
{
	uint8_t checksumA=0;
     3da:	20 e0       	ldi	r18, 0x00	; 0
	uint8_t checksumB=0;
	uint16_t retour=0;
	size=size+6;
	for(uint8_t n=2;n<size;n++)
     3dc:	07 c0       	rjmp	.+14     	; 0x3ec <calculerCRC+0x1a>
	{
		checksumA = checksumA + trame[n];
     3de:	fd 01       	movw	r30, r26
     3e0:	e9 0f       	add	r30, r25
     3e2:	f1 1d       	adc	r31, r1
     3e4:	40 81       	ld	r20, Z
     3e6:	24 0f       	add	r18, r20
		checksumB = checksumB + checksumA;
     3e8:	32 0f       	add	r19, r18
{
	uint8_t checksumA=0;
	uint8_t checksumB=0;
	uint16_t retour=0;
	size=size+6;
	for(uint8_t n=2;n<size;n++)
     3ea:	9f 5f       	subi	r25, 0xFF	; 255
     3ec:	96 17       	cp	r25, r22
     3ee:	b8 f3       	brcs	.-18     	; 0x3de <calculerCRC+0xc>
	{
		checksumA = checksumA + trame[n];
		checksumB = checksumB + checksumA;
	}
	retour=checksumB<<8|checksumA;
     3f0:	83 2f       	mov	r24, r19
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	98 2f       	mov	r25, r24
     3f6:	88 27       	eor	r24, r24
	return retour;
}
     3f8:	82 2b       	or	r24, r18
     3fa:	08 95       	ret

000003fc <envoieConfigPortUart1>:

void envoieConfigPortUart1(uint32_t baudrate)
{
     3fc:	cf 93       	push	r28
     3fe:	df 93       	push	r29
     400:	cd b7       	in	r28, 0x3d	; 61
     402:	de b7       	in	r29, 0x3e	; 62
     404:	6c 97       	sbiw	r28, 0x1c	; 28
     406:	0f b6       	in	r0, 0x3f	; 63
     408:	f8 94       	cli
     40a:	de bf       	out	0x3e, r29	; 62
     40c:	0f be       	out	0x3f, r0	; 63
     40e:	cd bf       	out	0x3d, r28	; 61
	//{0xB5, 0x62, 0x06, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0xD0, 0x08, 0x00, 0x00, 0x80, 0x25, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9A, 0x79}
	uint16_t crc=0;
	uint8_t trameConfigEnvoi[28]={0xB5, 0x62, 0x06, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0xD0, 0x08, 0x00, 0x00, (baudrate&0xFF),(baudrate>>8&0xFF),(baudrate>>16&0xFF), (baudrate>>32&0xFF), 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0, 0};
     410:	95 eb       	ldi	r25, 0xB5	; 181
     412:	99 83       	std	Y+1, r25	; 0x01
     414:	92 e6       	ldi	r25, 0x62	; 98
     416:	9a 83       	std	Y+2, r25	; 0x02
     418:	96 e0       	ldi	r25, 0x06	; 6
     41a:	9b 83       	std	Y+3, r25	; 0x03
     41c:	1c 82       	std	Y+4, r1	; 0x04
     41e:	94 e1       	ldi	r25, 0x14	; 20
     420:	9d 83       	std	Y+5, r25	; 0x05
     422:	1e 82       	std	Y+6, r1	; 0x06
     424:	91 e0       	ldi	r25, 0x01	; 1
     426:	9f 83       	std	Y+7, r25	; 0x07
     428:	18 86       	std	Y+8, r1	; 0x08
     42a:	19 86       	std	Y+9, r1	; 0x09
     42c:	1a 86       	std	Y+10, r1	; 0x0a
     42e:	20 ed       	ldi	r18, 0xD0	; 208
     430:	2b 87       	std	Y+11, r18	; 0x0b
     432:	28 e0       	ldi	r18, 0x08	; 8
     434:	2c 87       	std	Y+12, r18	; 0x0c
     436:	1d 86       	std	Y+13, r1	; 0x0d
     438:	1e 86       	std	Y+14, r1	; 0x0e
     43a:	6f 87       	std	Y+15, r22	; 0x0f
     43c:	78 8b       	std	Y+16, r23	; 0x10
     43e:	89 8b       	std	Y+17, r24	; 0x11
     440:	1a 8a       	std	Y+18, r1	; 0x12
     442:	9b 8b       	std	Y+19, r25	; 0x13
     444:	1c 8a       	std	Y+20, r1	; 0x14
     446:	9d 8b       	std	Y+21, r25	; 0x15
     448:	1e 8a       	std	Y+22, r1	; 0x16
     44a:	1f 8a       	std	Y+23, r1	; 0x17
     44c:	18 8e       	std	Y+24, r1	; 0x18
     44e:	19 8e       	std	Y+25, r1	; 0x19
     450:	1a 8e       	std	Y+26, r1	; 0x1a
     452:	1b 8e       	std	Y+27, r1	; 0x1b
     454:	1c 8e       	std	Y+28, r1	; 0x1c
	crc=calculerCRC(trameConfigEnvoi,20);
     456:	64 e1       	ldi	r22, 0x14	; 20
     458:	ce 01       	movw	r24, r28
     45a:	01 96       	adiw	r24, 0x01	; 1
     45c:	ba df       	rcall	.-140    	; 0x3d2 <calculerCRC>
	trameConfigEnvoi[26]=crc&0xFF;
     45e:	8b 8f       	std	Y+27, r24	; 0x1b
	trameConfigEnvoi[27]=crc>>8;
     460:	9c 8f       	std	Y+28, r25	; 0x1c
	usartSendBytes(trameConfigEnvoi,28);
     462:	6c e1       	ldi	r22, 0x1C	; 28
     464:	ce 01       	movw	r24, r28
     466:	01 96       	adiw	r24, 0x01	; 1
     468:	ad d1       	rcall	.+858    	; 0x7c4 <usartSendBytes>
}
     46a:	6c 96       	adiw	r28, 0x1c	; 28
     46c:	0f b6       	in	r0, 0x3f	; 63
     46e:	f8 94       	cli
     470:	de bf       	out	0x3e, r29	; 62
     472:	0f be       	out	0x3f, r0	; 63
     474:	cd bf       	out	0x3d, r28	; 61
     476:	df 91       	pop	r29
     478:	cf 91       	pop	r28
     47a:	08 95       	ret

0000047c <envoieConfigRate>:

void envoieConfigRate(uint8_t frequence)
{
     47c:	cf 93       	push	r28
     47e:	df 93       	push	r29
     480:	cd b7       	in	r28, 0x3d	; 61
     482:	de b7       	in	r29, 0x3e	; 62
     484:	2e 97       	sbiw	r28, 0x0e	; 14
     486:	0f b6       	in	r0, 0x3f	; 63
     488:	f8 94       	cli
     48a:	de bf       	out	0x3e, r29	; 62
     48c:	0f be       	out	0x3f, r0	; 63
     48e:	cd bf       	out	0x3d, r28	; 61
	//{0xB5,0x62,0x06,0x08,0x06,0x00,0xE8,0x03,0x01,0x00,0x01,0x00,0x01,0x39}
	uint16_t crc=0;
	uint16_t freq=1000/frequence;
     490:	68 2f       	mov	r22, r24
     492:	70 e0       	ldi	r23, 0x00	; 0
     494:	88 ee       	ldi	r24, 0xE8	; 232
     496:	93 e0       	ldi	r25, 0x03	; 3
     498:	0e 94 ed 0a 	call	0x15da	; 0x15da <__divmodhi4>
	uint8_t trameConfigEnvoi[14]={0xB5, 0x62, 0x06, 0x08, 0x06, 0x00, (freq&0xFF),(freq>>8), 0x01,0x00 , 0x01, 0x00, 0, 0};
     49c:	85 eb       	ldi	r24, 0xB5	; 181
     49e:	89 83       	std	Y+1, r24	; 0x01
     4a0:	82 e6       	ldi	r24, 0x62	; 98
     4a2:	8a 83       	std	Y+2, r24	; 0x02
     4a4:	86 e0       	ldi	r24, 0x06	; 6
     4a6:	8b 83       	std	Y+3, r24	; 0x03
     4a8:	98 e0       	ldi	r25, 0x08	; 8
     4aa:	9c 83       	std	Y+4, r25	; 0x04
     4ac:	8d 83       	std	Y+5, r24	; 0x05
     4ae:	1e 82       	std	Y+6, r1	; 0x06
     4b0:	6f 83       	std	Y+7, r22	; 0x07
     4b2:	78 87       	std	Y+8, r23	; 0x08
     4b4:	81 e0       	ldi	r24, 0x01	; 1
     4b6:	89 87       	std	Y+9, r24	; 0x09
     4b8:	1a 86       	std	Y+10, r1	; 0x0a
     4ba:	8b 87       	std	Y+11, r24	; 0x0b
     4bc:	1c 86       	std	Y+12, r1	; 0x0c
     4be:	1d 86       	std	Y+13, r1	; 0x0d
     4c0:	1e 86       	std	Y+14, r1	; 0x0e
	crc=calculerCRC(trameConfigEnvoi,6);
     4c2:	66 e0       	ldi	r22, 0x06	; 6
     4c4:	ce 01       	movw	r24, r28
     4c6:	01 96       	adiw	r24, 0x01	; 1
     4c8:	84 df       	rcall	.-248    	; 0x3d2 <calculerCRC>
	trameConfigEnvoi[12]=crc&0xFF;
     4ca:	8d 87       	std	Y+13, r24	; 0x0d
	trameConfigEnvoi[13]=crc>>8;
     4cc:	9e 87       	std	Y+14, r25	; 0x0e
	usartSendBytes(trameConfigEnvoi,14);	
     4ce:	6e e0       	ldi	r22, 0x0E	; 14
     4d0:	ce 01       	movw	r24, r28
     4d2:	01 96       	adiw	r24, 0x01	; 1
     4d4:	77 d1       	rcall	.+750    	; 0x7c4 <usartSendBytes>
}
     4d6:	2e 96       	adiw	r28, 0x0e	; 14
     4d8:	0f b6       	in	r0, 0x3f	; 63
     4da:	f8 94       	cli
     4dc:	de bf       	out	0x3e, r29	; 62
     4de:	0f be       	out	0x3f, r0	; 63
     4e0:	cd bf       	out	0x3d, r28	; 61
     4e2:	df 91       	pop	r29
     4e4:	cf 91       	pop	r28
     4e6:	08 95       	ret

000004e8 <envoieConfigMsg>:

void envoieConfigMsg(uint8_t id,uint8_t etatUart1,uint8_t etatUsb)
{
     4e8:	cf 93       	push	r28
     4ea:	df 93       	push	r29
     4ec:	cd b7       	in	r28, 0x3d	; 61
     4ee:	de b7       	in	r29, 0x3e	; 62
     4f0:	60 97       	sbiw	r28, 0x10	; 16
     4f2:	0f b6       	in	r0, 0x3f	; 63
     4f4:	f8 94       	cli
     4f6:	de bf       	out	0x3e, r29	; 62
     4f8:	0f be       	out	0x3f, r0	; 63
     4fa:	cd bf       	out	0x3d, r28	; 61
	
	uint16_t crc=0;
	uint8_t trameConfigEnvoi[16]={0xB5, 0x62, 0x06, 0x01, 0x08, 0x00, 0x01, id, 0x00, etatUart1, 0x00, etatUsb, 0x00, 0x00, 0, 0};
     4fc:	95 eb       	ldi	r25, 0xB5	; 181
     4fe:	99 83       	std	Y+1, r25	; 0x01
     500:	92 e6       	ldi	r25, 0x62	; 98
     502:	9a 83       	std	Y+2, r25	; 0x02
     504:	96 e0       	ldi	r25, 0x06	; 6
     506:	9b 83       	std	Y+3, r25	; 0x03
     508:	91 e0       	ldi	r25, 0x01	; 1
     50a:	9c 83       	std	Y+4, r25	; 0x04
     50c:	28 e0       	ldi	r18, 0x08	; 8
     50e:	2d 83       	std	Y+5, r18	; 0x05
     510:	1e 82       	std	Y+6, r1	; 0x06
     512:	9f 83       	std	Y+7, r25	; 0x07
     514:	88 87       	std	Y+8, r24	; 0x08
     516:	19 86       	std	Y+9, r1	; 0x09
     518:	6a 87       	std	Y+10, r22	; 0x0a
     51a:	1b 86       	std	Y+11, r1	; 0x0b
     51c:	4c 87       	std	Y+12, r20	; 0x0c
     51e:	1d 86       	std	Y+13, r1	; 0x0d
     520:	1e 86       	std	Y+14, r1	; 0x0e
     522:	1f 86       	std	Y+15, r1	; 0x0f
     524:	18 8a       	std	Y+16, r1	; 0x10
	crc=calculerCRC(trameConfigEnvoi,8);
     526:	68 e0       	ldi	r22, 0x08	; 8
     528:	ce 01       	movw	r24, r28
     52a:	01 96       	adiw	r24, 0x01	; 1
     52c:	52 df       	rcall	.-348    	; 0x3d2 <calculerCRC>
	trameConfigEnvoi[14]=crc&0xFF;
     52e:	8f 87       	std	Y+15, r24	; 0x0f
	trameConfigEnvoi[15]=crc>>8;
     530:	98 8b       	std	Y+16, r25	; 0x10
	usartSendBytes(trameConfigEnvoi,16);
     532:	60 e1       	ldi	r22, 0x10	; 16
     534:	ce 01       	movw	r24, r28
     536:	01 96       	adiw	r24, 0x01	; 1
     538:	45 d1       	rcall	.+650    	; 0x7c4 <usartSendBytes>
	
}		
     53a:	60 96       	adiw	r28, 0x10	; 16
     53c:	0f b6       	in	r0, 0x3f	; 63
     53e:	f8 94       	cli
     540:	de bf       	out	0x3e, r29	; 62
     542:	0f be       	out	0x3f, r0	; 63
     544:	cd bf       	out	0x3d, r28	; 61
     546:	df 91       	pop	r29
     548:	cf 91       	pop	r28
     54a:	08 95       	ret

0000054c <main>:

int main(void)
{
	DDRB |=(1<<7);//led on board
     54c:	84 b1       	in	r24, 0x04	; 4
     54e:	80 68       	ori	r24, 0x80	; 128
     550:	84 b9       	out	0x04, r24	; 4
	// 	BT1_INIT();
	// 	BT2_INIT();
	lcdInit();
     552:	bf de       	rcall	.-642    	; 0x2d2 <lcdInit>
	usartInit(9600,16000000);
     554:	20 e0       	ldi	r18, 0x00	; 0
     556:	34 e2       	ldi	r19, 0x24	; 36
     558:	44 ef       	ldi	r20, 0xF4	; 244
     55a:	50 e0       	ldi	r21, 0x00	; 0
     55c:	60 e8       	ldi	r22, 0x80	; 128
     55e:	75 e2       	ldi	r23, 0x25	; 37
     560:	80 e0       	ldi	r24, 0x00	; 0
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	d2 d0       	rcall	.+420    	; 0x70a <usartInit>
	lcdPuts("Hello world");
     566:	82 e0       	ldi	r24, 0x02	; 2
     568:	92 e0       	ldi	r25, 0x02	; 2
     56a:	0b df       	rcall	.-490    	; 0x382 <lcdPuts>
	TCCR0B |= (1<<CS01) | (1<<CS00); //avec diviseur de clock /64.
     56c:	85 b5       	in	r24, 0x25	; 37
     56e:	83 60       	ori	r24, 0x03	; 3
     570:	85 bd       	out	0x25, r24	; 37
	TCCR0A |= (1<<WGM01);//Configuration du timer 0 en CTC
     572:	84 b5       	in	r24, 0x24	; 36
     574:	82 60       	ori	r24, 0x02	; 2
     576:	84 bd       	out	0x24, r24	; 36
	TIMSK0 |= (1<<OCIE0A);//Output Compare Match A Interrupt Enable.
     578:	ee e6       	ldi	r30, 0x6E	; 110
     57a:	f0 e0       	ldi	r31, 0x00	; 0
     57c:	80 81       	ld	r24, Z
     57e:	82 60       	ori	r24, 0x02	; 2
     580:	80 83       	st	Z, r24
	OCR0A = 249;//Top a la valeur 249 afin de obtenir un periode de 1ms fixe.
     582:	89 ef       	ldi	r24, 0xF9	; 249
     584:	87 bd       	out	0x27, r24	; 39
	sei();//fait appel aux interruptions global
     586:	78 94       	sei
	
	envoieConfigPortUart1(9600);
     588:	60 e8       	ldi	r22, 0x80	; 128
     58a:	75 e2       	ldi	r23, 0x25	; 37
     58c:	80 e0       	ldi	r24, 0x00	; 0
     58e:	90 e0       	ldi	r25, 0x00	; 0
	envoieConfigRate(1);
     590:	35 df       	rcall	.-406    	; 0x3fc <envoieConfigPortUart1>
     592:	81 e0       	ldi	r24, 0x01	; 1
	envoieConfigMsg(PVT,USART1_ON,USART1_OFF);
     594:	73 df       	rcall	.-282    	; 0x47c <envoieConfigRate>
     596:	40 e0       	ldi	r20, 0x00	; 0
     598:	61 e0       	ldi	r22, 0x01	; 1
     59a:	87 e0       	ldi	r24, 0x07	; 7
// 		{
// 			pos=0;
// 			row=!row;
// 			
// 		}
		if(usartRxAvailable())
     59c:	a5 df       	rcall	.-182    	; 0x4e8 <envoieConfigMsg>
     59e:	ef d0       	rcall	.+478    	; 0x77e <usartRxAvailable>
     5a0:	88 23       	and	r24, r24
     5a2:	09 f4       	brne	.+2      	; 0x5a6 <main+0x5a>
		{
			tmp=usartRemRxData();
     5a4:	59 c0       	rjmp	.+178    	; 0x658 <main+0x10c>
     5a6:	ee d0       	rcall	.+476    	; 0x784 <usartRemRxData>
     5a8:	80 93 31 02 	sts	0x0231, r24	; 0x800231 <tmp>
			if(parseRxUbxNavPvt(tmp))
     5ac:	8f d1       	rcall	.+798    	; 0x8cc <parseRxUbxNavPvt>
     5ae:	88 23       	and	r24, r24
     5b0:	09 f4       	brne	.+2      	; 0x5b4 <main+0x68>
			{
				PORTB^=(1<<7);
     5b2:	52 c0       	rjmp	.+164    	; 0x658 <main+0x10c>
     5b4:	85 b1       	in	r24, 0x05	; 5
     5b6:	80 58       	subi	r24, 0x80	; 128
				lcdClearScreen();
     5b8:	85 b9       	out	0x05, r24	; 5
				lon = getNavPvtLon();
     5ba:	01 df       	rcall	.-510    	; 0x3be <lcdClearScreen>
     5bc:	7b d2       	rcall	.+1270   	; 0xab4 <getNavPvtLon>
     5be:	60 93 12 02 	sts	0x0212, r22	; 0x800212 <__data_end>
     5c2:	70 93 13 02 	sts	0x0213, r23	; 0x800213 <__data_end+0x1>
     5c6:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <__data_end+0x2>
     5ca:	90 93 15 02 	sts	0x0215, r25	; 0x800215 <__data_end+0x3>
				lat = getNavPvtLat();
     5ce:	52 d2       	rcall	.+1188   	; 0xa74 <getNavPvtLat>
     5d0:	60 93 16 02 	sts	0x0216, r22	; 0x800216 <lat>
     5d4:	70 93 17 02 	sts	0x0217, r23	; 0x800217 <lat+0x1>
     5d8:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <lat+0x2>
     5dc:	90 93 19 02 	sts	0x0219, r25	; 0x800219 <lat+0x3>
				sprintf(msg, "%f", (lat*1e-7));
     5e0:	25 e9       	ldi	r18, 0x95	; 149
     5e2:	3f eb       	ldi	r19, 0xBF	; 191
     5e4:	46 ed       	ldi	r20, 0xD6	; 214
     5e6:	53 e3       	ldi	r21, 0x33	; 51
     5e8:	0c d4       	rcall	.+2072   	; 0xe02 <__mulsf3>
     5ea:	9f 93       	push	r25
     5ec:	8f 93       	push	r24
     5ee:	7f 93       	push	r23
     5f0:	6f 93       	push	r22
     5f2:	0e e0       	ldi	r16, 0x0E	; 14
     5f4:	12 e0       	ldi	r17, 0x02	; 2
     5f6:	1f 93       	push	r17
     5f8:	0f 93       	push	r16
     5fa:	c3 e3       	ldi	r28, 0x33	; 51
     5fc:	d2 e0       	ldi	r29, 0x02	; 2
     5fe:	df 93       	push	r29
     600:	cf 93       	push	r28
     602:	0e 94 46 0c 	call	0x188c	; 0x188c <sprintf>
				lcdSetPos(0,0);
     606:	60 e0       	ldi	r22, 0x00	; 0
     608:	80 e0       	ldi	r24, 0x00	; 0
     60a:	cf de       	rcall	.-610    	; 0x3aa <lcdSetPos>
				lcdPuts(msg);
     60c:	ce 01       	movw	r24, r28
     60e:	b9 de       	rcall	.-654    	; 0x382 <lcdPuts>
				sprintf(msg, "%f", (lon*1e-7));
     610:	25 e9       	ldi	r18, 0x95	; 149
     612:	3f eb       	ldi	r19, 0xBF	; 191
     614:	46 ed       	ldi	r20, 0xD6	; 214
     616:	53 e3       	ldi	r21, 0x33	; 51
     618:	60 91 12 02 	lds	r22, 0x0212	; 0x800212 <__data_end>
     61c:	70 91 13 02 	lds	r23, 0x0213	; 0x800213 <__data_end+0x1>
     620:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <__data_end+0x2>
     624:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <__data_end+0x3>
     628:	ec d3       	rcall	.+2008   	; 0xe02 <__mulsf3>
     62a:	9f 93       	push	r25
     62c:	8f 93       	push	r24
     62e:	7f 93       	push	r23
     630:	6f 93       	push	r22
     632:	1f 93       	push	r17
     634:	0f 93       	push	r16
     636:	df 93       	push	r29
     638:	cf 93       	push	r28
     63a:	0e 94 46 0c 	call	0x188c	; 0x188c <sprintf>
				lcdSetPos(0,1);
     63e:	61 e0       	ldi	r22, 0x01	; 1
     640:	80 e0       	ldi	r24, 0x00	; 0
     642:	b3 de       	rcall	.-666    	; 0x3aa <lcdSetPos>
				lcdPuts(msg);
     644:	ce 01       	movw	r24, r28
     646:	9d de       	rcall	.-710    	; 0x382 <lcdPuts>
     648:	8d b7       	in	r24, 0x3d	; 61
     64a:	9e b7       	in	r25, 0x3e	; 62
     64c:	40 96       	adiw	r24, 0x10	; 16
     64e:	0f b6       	in	r0, 0x3f	; 63
     650:	f8 94       	cli
     652:	9e bf       	out	0x3e, r25	; 62
     654:	0f be       	out	0x3f, r0	; 63
     656:	8d bf       	out	0x3d, r24	; 61
     658:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
			}
		}
		if(refreshBouton==1)
     65c:	81 30       	cpi	r24, 0x01	; 1
     65e:	09 f0       	breq	.+2      	; 0x662 <main+0x116>
     660:	9e cf       	rjmp	.-196    	; 0x59e <main+0x52>
     662:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__DATA_REGION_ORIGIN__>
		{
			refreshBouton = 0;
     666:	9b cf       	rjmp	.-202    	; 0x59e <main+0x52>

00000668 <__vector_21>:
     668:	1f 92       	push	r1
}
/**
* @brief //A chaque interruption du timer 0 le programme execute DixiemeDeSec++ comme ca on verifie l'etat des boutons a chaque 100ms.
*/
ISR(TIMER0_COMPA_vect)//Quand l'interruption globale est appeller le programme vient executer le vecteur Comparatif.
{
     66a:	0f 92       	push	r0
     66c:	0f b6       	in	r0, 0x3f	; 63
     66e:	0f 92       	push	r0
     670:	11 24       	eor	r1, r1
     672:	2f 93       	push	r18
     674:	8f 93       	push	r24
     676:	9f 93       	push	r25
	cntDixiemeDeSec++;
     678:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <cntDixiemeDeSec>
     67c:	90 91 1b 02 	lds	r25, 0x021B	; 0x80021b <cntDixiemeDeSec+0x1>
     680:	01 96       	adiw	r24, 0x01	; 1
     682:	90 93 1b 02 	sts	0x021B, r25	; 0x80021b <cntDixiemeDeSec+0x1>
     686:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <cntDixiemeDeSec>
	if(cntDixiemeDeSec <= 1000)
     68a:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <cntDixiemeDeSec>
     68e:	90 91 1b 02 	lds	r25, 0x021B	; 0x80021b <cntDixiemeDeSec+0x1>
     692:	89 3e       	cpi	r24, 0xE9	; 233
     694:	93 40       	sbci	r25, 0x03	; 3
     696:	68 f4       	brcc	.+26     	; 0x6b2 <__vector_21+0x4a>
	{
		cntDixiemeDeSec -= 1000;
     698:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <cntDixiemeDeSec>
     69c:	90 91 1b 02 	lds	r25, 0x021B	; 0x80021b <cntDixiemeDeSec+0x1>
     6a0:	88 5e       	subi	r24, 0xE8	; 232
     6a2:	93 40       	sbci	r25, 0x03	; 3
     6a4:	90 93 1b 02 	sts	0x021B, r25	; 0x80021b <cntDixiemeDeSec+0x1>
     6a8:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <cntDixiemeDeSec>
		refreshBouton = 1;
     6ac:	81 e0       	ldi	r24, 0x01	; 1
     6ae:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
	}
}
     6b2:	9f 91       	pop	r25
     6b4:	8f 91       	pop	r24
     6b6:	2f 91       	pop	r18
     6b8:	0f 90       	pop	r0
     6ba:	0f be       	out	0x3f, r0	; 63
     6bc:	0f 90       	pop	r0
     6be:	1f 90       	pop	r1
     6c0:	18 95       	reti

000006c2 <usartSendByte>:
		if(!usartSendByte(str[i]))
			cntStr++;
	}
	
	return cntStr;
}
     6c2:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <txCnt>
     6c6:	99 23       	and	r25, r25
     6c8:	f4 f0       	brlt	.+60     	; 0x706 <usartSendByte+0x44>
     6ca:	e0 91 22 02 	lds	r30, 0x0222	; 0x800222 <txBufferIn>
     6ce:	91 e0       	ldi	r25, 0x01	; 1
     6d0:	9e 0f       	add	r25, r30
     6d2:	90 93 22 02 	sts	0x0222, r25	; 0x800222 <txBufferIn>
     6d6:	f0 e0       	ldi	r31, 0x00	; 0
     6d8:	ef 50       	subi	r30, 0x0F	; 15
     6da:	fd 4f       	sbci	r31, 0xFD	; 253
     6dc:	80 83       	st	Z, r24
     6de:	f8 94       	cli
     6e0:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <txCnt>
     6e4:	8f 5f       	subi	r24, 0xFF	; 255
     6e6:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <txCnt>
     6ea:	78 94       	sei
     6ec:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <txBufferIn>
     6f0:	88 23       	and	r24, r24
     6f2:	14 f4       	brge	.+4      	; 0x6f8 <usartSendByte+0x36>
     6f4:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <txBufferIn>
     6f8:	e9 ec       	ldi	r30, 0xC9	; 201
     6fa:	f0 e0       	ldi	r31, 0x00	; 0
     6fc:	80 81       	ld	r24, Z
     6fe:	80 62       	ori	r24, 0x20	; 32
     700:	80 83       	st	Z, r24
     702:	80 e0       	ldi	r24, 0x00	; 0
     704:	08 95       	ret
     706:	81 e0       	ldi	r24, 0x01	; 1
     708:	08 95       	ret

0000070a <usartInit>:
     70a:	8f 92       	push	r8
     70c:	9f 92       	push	r9
     70e:	af 92       	push	r10
     710:	bf 92       	push	r11
     712:	cf 92       	push	r12
     714:	df 92       	push	r13
     716:	ef 92       	push	r14
     718:	ff 92       	push	r15
     71a:	cf 93       	push	r28
     71c:	df 93       	push	r29
     71e:	49 01       	movw	r8, r18
     720:	5a 01       	movw	r10, r20
     722:	c9 ec       	ldi	r28, 0xC9	; 201
     724:	d0 e0       	ldi	r29, 0x00	; 0
     726:	28 e1       	ldi	r18, 0x18	; 24
     728:	28 83       	st	Y, r18
     72a:	26 e0       	ldi	r18, 0x06	; 6
     72c:	20 93 ca 00 	sts	0x00CA, r18	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7c00ca>
     730:	da d2       	rcall	.+1460   	; 0xce6 <__floatunsisf>
     732:	20 e0       	ldi	r18, 0x00	; 0
     734:	30 e0       	ldi	r19, 0x00	; 0
     736:	40 e8       	ldi	r20, 0x80	; 128
     738:	51 e4       	ldi	r21, 0x41	; 65
     73a:	63 d3       	rcall	.+1734   	; 0xe02 <__mulsf3>
     73c:	6b 01       	movw	r12, r22
     73e:	7c 01       	movw	r14, r24
     740:	c5 01       	movw	r24, r10
     742:	b4 01       	movw	r22, r8
     744:	d0 d2       	rcall	.+1440   	; 0xce6 <__floatunsisf>
     746:	a7 01       	movw	r20, r14
     748:	96 01       	movw	r18, r12
     74a:	39 d2       	rcall	.+1138   	; 0xbbe <__divsf3>
     74c:	20 e0       	ldi	r18, 0x00	; 0
     74e:	30 e0       	ldi	r19, 0x00	; 0
     750:	40 e0       	ldi	r20, 0x00	; 0
     752:	5f e3       	ldi	r21, 0x3F	; 63
     754:	cf d1       	rcall	.+926    	; 0xaf4 <__subsf3>
     756:	9b d2       	rcall	.+1334   	; 0xc8e <__fixunssfsi>
     758:	70 93 cd 00 	sts	0x00CD, r23	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7c00cd>
     75c:	60 93 cc 00 	sts	0x00CC, r22	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7c00cc>
     760:	88 81       	ld	r24, Y
     762:	80 68       	ori	r24, 0x80	; 128
     764:	88 83       	st	Y, r24
     766:	78 94       	sei
     768:	df 91       	pop	r29
     76a:	cf 91       	pop	r28
     76c:	ff 90       	pop	r15
     76e:	ef 90       	pop	r14
     770:	df 90       	pop	r13
     772:	cf 90       	pop	r12
     774:	bf 90       	pop	r11
     776:	af 90       	pop	r10
     778:	9f 90       	pop	r9
     77a:	8f 90       	pop	r8
     77c:	08 95       	ret

0000077e <usartRxAvailable>:
     77e:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <rxCnt>
     782:	08 95       	ret

00000784 <usartRemRxData>:
     784:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <rxCnt>
     788:	88 23       	and	r24, r24
     78a:	c9 f0       	breq	.+50     	; 0x7be <usartRemRxData+0x3a>
     78c:	e0 91 1f 02 	lds	r30, 0x021F	; 0x80021f <rxBufferOut>
     790:	81 e0       	ldi	r24, 0x01	; 1
     792:	8e 0f       	add	r24, r30
     794:	80 93 1f 02 	sts	0x021F, r24	; 0x80021f <rxBufferOut>
     798:	f0 e0       	ldi	r31, 0x00	; 0
     79a:	ef 58       	subi	r30, 0x8F	; 143
     79c:	fd 4f       	sbci	r31, 0xFD	; 253
     79e:	80 81       	ld	r24, Z
     7a0:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <rxContent>
     7a4:	f8 94       	cli
     7a6:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <rxCnt>
     7aa:	81 50       	subi	r24, 0x01	; 1
     7ac:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <rxCnt>
     7b0:	78 94       	sei
     7b2:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <rxBufferOut>
     7b6:	88 23       	and	r24, r24
     7b8:	14 f4       	brge	.+4      	; 0x7be <usartRemRxData+0x3a>
     7ba:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <rxBufferOut>
     7be:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <rxContent>
     7c2:	08 95       	ret

000007c4 <usartSendBytes>:
* @param uint8_t size Recoit la longueur de la string a transmettre vers le PC.
* @return nombre d'octets ajoutes a la transmission
*/

uint8_t usartSendBytes(const uint8_t * source, uint8_t size)
{
     7c4:	ef 92       	push	r14
     7c6:	ff 92       	push	r15
     7c8:	1f 93       	push	r17
     7ca:	cf 93       	push	r28
     7cc:	df 93       	push	r29
     7ce:	7c 01       	movw	r14, r24
     7d0:	16 2f       	mov	r17, r22
	uint8_t nbOctet = 0;
	
 	for(uint8_t i = 0;i<size;i++)
     7d2:	c0 e0       	ldi	r28, 0x00	; 0
* @return nombre d'octets ajoutes a la transmission
*/

uint8_t usartSendBytes(const uint8_t * source, uint8_t size)
{
	uint8_t nbOctet = 0;
     7d4:	d0 e0       	ldi	r29, 0x00	; 0
	
 	for(uint8_t i = 0;i<size;i++)
     7d6:	09 c0       	rjmp	.+18     	; 0x7ea <usartSendBytes+0x26>
	{
		if(!usartSendByte(source[i]))
     7d8:	f7 01       	movw	r30, r14
     7da:	ec 0f       	add	r30, r28
     7dc:	f1 1d       	adc	r31, r1
     7de:	80 81       	ld	r24, Z
     7e0:	70 df       	rcall	.-288    	; 0x6c2 <usartSendByte>
     7e2:	81 11       	cpse	r24, r1
     7e4:	01 c0       	rjmp	.+2      	; 0x7e8 <usartSendBytes+0x24>
			nbOctet++;
     7e6:	df 5f       	subi	r29, 0xFF	; 255

uint8_t usartSendBytes(const uint8_t * source, uint8_t size)
{
	uint8_t nbOctet = 0;
	
 	for(uint8_t i = 0;i<size;i++)
     7e8:	cf 5f       	subi	r28, 0xFF	; 255
     7ea:	c1 17       	cp	r28, r17
     7ec:	a8 f3       	brcs	.-22     	; 0x7d8 <usartSendBytes+0x14>
		if(!usartSendByte(source[i]))
			nbOctet++;
		
	}
	return nbOctet;
}
     7ee:	8d 2f       	mov	r24, r29
     7f0:	df 91       	pop	r29
     7f2:	cf 91       	pop	r28
     7f4:	1f 91       	pop	r17
     7f6:	ff 90       	pop	r15
     7f8:	ef 90       	pop	r14
     7fa:	08 95       	ret

000007fc <__vector_37>:

ISR(USART1_UDRE_vect)//a chaque fois que l'interruption est appeller le programme tansmet des donnes avec le registre UDR1 si il y a bien une donne a transmettre.
{
     7fc:	1f 92       	push	r1
     7fe:	0f 92       	push	r0
     800:	0f b6       	in	r0, 0x3f	; 63
     802:	0f 92       	push	r0
     804:	11 24       	eor	r1, r1
     806:	0b b6       	in	r0, 0x3b	; 59
     808:	0f 92       	push	r0
     80a:	8f 93       	push	r24
     80c:	ef 93       	push	r30
     80e:	ff 93       	push	r31
	if(!txCnt)
     810:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <txCnt>
     814:	81 11       	cpse	r24, r1
     816:	06 c0       	rjmp	.+12     	; 0x824 <__vector_37+0x28>
	{
		UCSR1B &= ~(1<<UDRIE1);//desactive l'interruption si il n'y a pus de contenu dans txCnt
     818:	e9 ec       	ldi	r30, 0xC9	; 201
     81a:	f0 e0       	ldi	r31, 0x00	; 0
     81c:	80 81       	ld	r24, Z
     81e:	8f 7d       	andi	r24, 0xDF	; 223
     820:	80 83       	st	Z, r24
     822:	17 c0       	rjmp	.+46     	; 0x852 <__vector_37+0x56>
	}
	else
	{
		UDR1 = txBuffer[txBufferOut++];//sert a transmettre les donnes du txBuffer vers le PC
     824:	e0 91 20 02 	lds	r30, 0x0220	; 0x800220 <txBufferOut>
     828:	81 e0       	ldi	r24, 0x01	; 1
     82a:	8e 0f       	add	r24, r30
     82c:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <txBufferOut>
     830:	f0 e0       	ldi	r31, 0x00	; 0
     832:	ef 50       	subi	r30, 0x0F	; 15
     834:	fd 4f       	sbci	r31, 0xFD	; 253
     836:	80 81       	ld	r24, Z
     838:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
		txCnt--;
     83c:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <txCnt>
     840:	81 50       	subi	r24, 0x01	; 1
     842:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <txCnt>
		if(txBufferOut >= TX_BUFFER_SIZE)
     846:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <txBufferOut>
     84a:	88 23       	and	r24, r24
     84c:	14 f4       	brge	.+4      	; 0x852 <__vector_37+0x56>
			txBufferOut = 0;
     84e:	10 92 20 02 	sts	0x0220, r1	; 0x800220 <txBufferOut>
	}
}
     852:	ff 91       	pop	r31
     854:	ef 91       	pop	r30
     856:	8f 91       	pop	r24
     858:	0f 90       	pop	r0
     85a:	0b be       	out	0x3b, r0	; 59
     85c:	0f 90       	pop	r0
     85e:	0f be       	out	0x3f, r0	; 63
     860:	0f 90       	pop	r0
     862:	1f 90       	pop	r1
     864:	18 95       	reti

00000866 <__vector_36>:
volatile uint8_t _usartRxTmp;
ISR(USART1_RX_vect)//cette interruption est semblable a la derniere mais celle ci gere la reception des donnes du atmega32u4 en mettant les valeurs du rx buffer dans UDR1.
{
     866:	1f 92       	push	r1
     868:	0f 92       	push	r0
     86a:	0f b6       	in	r0, 0x3f	; 63
     86c:	0f 92       	push	r0
     86e:	11 24       	eor	r1, r1
     870:	0b b6       	in	r0, 0x3b	; 59
     872:	0f 92       	push	r0
     874:	8f 93       	push	r24
     876:	9f 93       	push	r25
     878:	ef 93       	push	r30
     87a:	ff 93       	push	r31
	_usartRxTmp = UDR1;
     87c:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
     880:	80 93 70 02 	sts	0x0270, r24	; 0x800270 <_usartRxTmp>
	if(rxCnt<RX_BUFFER_SIZE)
     884:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <rxCnt>
     888:	88 23       	and	r24, r24
     88a:	ac f0       	brlt	.+42     	; 0x8b6 <__vector_36+0x50>
	{
		rxBuffer[rxBufferIn++] = _usartRxTmp;//recoit les valeurs en reception et les met dans le regisre UDR1
     88c:	e0 91 21 02 	lds	r30, 0x0221	; 0x800221 <rxBufferIn>
     890:	91 e0       	ldi	r25, 0x01	; 1
     892:	9e 0f       	add	r25, r30
     894:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <rxBufferIn>
     898:	f0 e0       	ldi	r31, 0x00	; 0
     89a:	90 91 70 02 	lds	r25, 0x0270	; 0x800270 <_usartRxTmp>
     89e:	ef 58       	subi	r30, 0x8F	; 143
     8a0:	fd 4f       	sbci	r31, 0xFD	; 253
     8a2:	90 83       	st	Z, r25
		rxCnt++;
     8a4:	8f 5f       	subi	r24, 0xFF	; 255
     8a6:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <rxCnt>
		if(rxBufferIn >= RX_BUFFER_SIZE)//Si le buffer de reception est plein le buffer se met a 0
     8aa:	80 91 21 02 	lds	r24, 0x0221	; 0x800221 <rxBufferIn>
     8ae:	88 23       	and	r24, r24
     8b0:	14 f4       	brge	.+4      	; 0x8b6 <__vector_36+0x50>
			rxBufferIn = 0;
     8b2:	10 92 21 02 	sts	0x0221, r1	; 0x800221 <rxBufferIn>
	}
	
     8b6:	ff 91       	pop	r31
     8b8:	ef 91       	pop	r30
     8ba:	9f 91       	pop	r25
     8bc:	8f 91       	pop	r24
     8be:	0f 90       	pop	r0
     8c0:	0b be       	out	0x3b, r0	; 59
     8c2:	0f 90       	pop	r0
     8c4:	0f be       	out	0x3f, r0	; 63
     8c6:	0f 90       	pop	r0
     8c8:	1f 90       	pop	r1
     8ca:	18 95       	reti

000008cc <parseRxUbxNavPvt>:

uint8_t buffer[4];
uint8_t buffer2[4];

uint8_t parseRxUbxNavPvt(uint8_t u8Data)
{
     8cc:	28 2f       	mov	r18, r24
	switch(state)
     8ce:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <state>
     8d2:	90 e0       	ldi	r25, 0x00	; 0
     8d4:	88 30       	cpi	r24, 0x08	; 8
     8d6:	91 05       	cpc	r25, r1
     8d8:	08 f0       	brcs	.+2      	; 0x8dc <parseRxUbxNavPvt+0x10>
     8da:	c9 c0       	rjmp	.+402    	; 0xa6e <parseRxUbxNavPvt+0x1a2>
     8dc:	fc 01       	movw	r30, r24
     8de:	88 27       	eor	r24, r24
     8e0:	ee 58       	subi	r30, 0x8E	; 142
     8e2:	ff 4f       	sbci	r31, 0xFF	; 255
     8e4:	8f 4f       	sbci	r24, 0xFF	; 255
     8e6:	8c c6       	rjmp	.+3352   	; 0x1600 <__tablejump2__>
	{
		case DEBUT_TRAME:
		if(u8Data == 0xB5)
     8e8:	25 3b       	cpi	r18, 0xB5	; 181
     8ea:	09 f0       	breq	.+2      	; 0x8ee <parseRxUbxNavPvt+0x22>
     8ec:	c0 c0       	rjmp	.+384    	; 0xa6e <parseRxUbxNavPvt+0x1a2>
		{
			checksumA = 0;
     8ee:	10 92 2d 02 	sts	0x022D, r1	; 0x80022d <checksumA>
			checksumB = 0;
     8f2:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <checksumB>
			indexTrame = 0;
			indexPayload = 0;
     8f6:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <indexPayload>
			retour = 0;
     8fa:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <retour>
			trameGpsNavPvtRx[indexTrame++] = u8Data;
     8fe:	81 e0       	ldi	r24, 0x01	; 1
     900:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <indexTrame>
     904:	20 93 d9 03 	sts	0x03D9, r18	; 0x8003d9 <trameGpsNavPvtRx>
			state = DEBUT_TRAME_DEUX;
     908:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <state>
     90c:	b0 c0       	rjmp	.+352    	; 0xa6e <parseRxUbxNavPvt+0x1a2>
		}
		break;
		
		case DEBUT_TRAME_DEUX:
		if(u8Data == 0x62)
     90e:	22 36       	cpi	r18, 0x62	; 98
     910:	71 f4       	brne	.+28     	; 0x92e <parseRxUbxNavPvt+0x62>
		{
			trameGpsNavPvtRx[indexTrame++] = u8Data;
     912:	e0 91 2f 02 	lds	r30, 0x022F	; 0x80022f <indexTrame>
     916:	81 e0       	ldi	r24, 0x01	; 1
     918:	8e 0f       	add	r24, r30
     91a:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <indexTrame>
     91e:	f0 e0       	ldi	r31, 0x00	; 0
     920:	e7 52       	subi	r30, 0x27	; 39
     922:	fc 4f       	sbci	r31, 0xFC	; 252
     924:	20 83       	st	Z, r18
			state = CLASSE;
     926:	82 e0       	ldi	r24, 0x02	; 2
     928:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <state>
     92c:	a0 c0       	rjmp	.+320    	; 0xa6e <parseRxUbxNavPvt+0x1a2>
		}
		else
		{
			state = DEBUT_TRAME;
     92e:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <state>
     932:	9d c0       	rjmp	.+314    	; 0xa6e <parseRxUbxNavPvt+0x1a2>
		}
		break;
		
		case CLASSE:
		if(u8Data == 0x01)
     934:	21 30       	cpi	r18, 0x01	; 1
     936:	71 f4       	brne	.+28     	; 0x954 <parseRxUbxNavPvt+0x88>
		{
			trameGpsNavPvtRx[indexTrame++] = u8Data;
     938:	e0 91 2f 02 	lds	r30, 0x022F	; 0x80022f <indexTrame>
     93c:	81 e0       	ldi	r24, 0x01	; 1
     93e:	8e 0f       	add	r24, r30
     940:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <indexTrame>
     944:	f0 e0       	ldi	r31, 0x00	; 0
     946:	e7 52       	subi	r30, 0x27	; 39
     948:	fc 4f       	sbci	r31, 0xFC	; 252
     94a:	20 83       	st	Z, r18
			state = ID;
     94c:	83 e0       	ldi	r24, 0x03	; 3
     94e:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <state>
     952:	8d c0       	rjmp	.+282    	; 0xa6e <parseRxUbxNavPvt+0x1a2>
		}
		else
		{
			state = DEBUT_TRAME;
     954:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <state>
     958:	8a c0       	rjmp	.+276    	; 0xa6e <parseRxUbxNavPvt+0x1a2>
		}
		break;
		
		case ID:
		if(u8Data == 0x07)
     95a:	27 30       	cpi	r18, 0x07	; 7
     95c:	71 f4       	brne	.+28     	; 0x97a <parseRxUbxNavPvt+0xae>
		{
			trameGpsNavPvtRx[indexTrame++] = u8Data;
     95e:	e0 91 2f 02 	lds	r30, 0x022F	; 0x80022f <indexTrame>
     962:	81 e0       	ldi	r24, 0x01	; 1
     964:	8e 0f       	add	r24, r30
     966:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <indexTrame>
     96a:	f0 e0       	ldi	r31, 0x00	; 0
     96c:	e7 52       	subi	r30, 0x27	; 39
     96e:	fc 4f       	sbci	r31, 0xFC	; 252
     970:	20 83       	st	Z, r18
			state = LENGTH_A;
     972:	84 e0       	ldi	r24, 0x04	; 4
     974:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <state>
     978:	7a c0       	rjmp	.+244    	; 0xa6e <parseRxUbxNavPvt+0x1a2>
		}
		else
		{
			state = DEBUT_TRAME;
     97a:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <state>
     97e:	77 c0       	rjmp	.+238    	; 0xa6e <parseRxUbxNavPvt+0x1a2>
		}
		break;
		
		case LENGTH_A:
		if(u8Data == 0x5C)
     980:	2c 35       	cpi	r18, 0x5C	; 92
     982:	71 f4       	brne	.+28     	; 0x9a0 <parseRxUbxNavPvt+0xd4>
		{
			trameGpsNavPvtRx[indexTrame++] = u8Data;
     984:	e0 91 2f 02 	lds	r30, 0x022F	; 0x80022f <indexTrame>
     988:	81 e0       	ldi	r24, 0x01	; 1
     98a:	8e 0f       	add	r24, r30
     98c:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <indexTrame>
     990:	f0 e0       	ldi	r31, 0x00	; 0
     992:	e7 52       	subi	r30, 0x27	; 39
     994:	fc 4f       	sbci	r31, 0xFC	; 252
     996:	20 83       	st	Z, r18
			state = LENGTH_B;
     998:	85 e0       	ldi	r24, 0x05	; 5
     99a:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <state>
     99e:	67 c0       	rjmp	.+206    	; 0xa6e <parseRxUbxNavPvt+0x1a2>
		}
		else
		{
			state = DEBUT_TRAME;
     9a0:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <state>
     9a4:	64 c0       	rjmp	.+200    	; 0xa6e <parseRxUbxNavPvt+0x1a2>
		}
		break;
		
		case LENGTH_B:
		if(u8Data == 0)
     9a6:	21 11       	cpse	r18, r1
     9a8:	0e c0       	rjmp	.+28     	; 0x9c6 <parseRxUbxNavPvt+0xfa>
		{
			trameGpsNavPvtRx[indexTrame++] = u8Data;
     9aa:	e0 91 2f 02 	lds	r30, 0x022F	; 0x80022f <indexTrame>
     9ae:	81 e0       	ldi	r24, 0x01	; 1
     9b0:	8e 0f       	add	r24, r30
     9b2:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <indexTrame>
     9b6:	f0 e0       	ldi	r31, 0x00	; 0
     9b8:	e7 52       	subi	r30, 0x27	; 39
     9ba:	fc 4f       	sbci	r31, 0xFC	; 252
     9bc:	20 83       	st	Z, r18
			state = PAYLOAD;
     9be:	86 e0       	ldi	r24, 0x06	; 6
     9c0:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <state>
     9c4:	54 c0       	rjmp	.+168    	; 0xa6e <parseRxUbxNavPvt+0x1a2>
		}
		else
		{
			state = DEBUT_TRAME;
     9c6:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <state>
     9ca:	51 c0       	rjmp	.+162    	; 0xa6e <parseRxUbxNavPvt+0x1a2>
		}
		break;
		
		case PAYLOAD:
		if(indexPayload < payloadLength)
     9cc:	90 91 2e 02 	lds	r25, 0x022E	; 0x80022e <indexPayload>
     9d0:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <payloadLength>
     9d4:	98 17       	cp	r25, r24
     9d6:	58 f4       	brcc	.+22     	; 0x9ee <parseRxUbxNavPvt+0x122>
		{
			trameGpsNavPvtRx[indexTrame++] = u8Data;
     9d8:	e0 91 2f 02 	lds	r30, 0x022F	; 0x80022f <indexTrame>
     9dc:	81 e0       	ldi	r24, 0x01	; 1
     9de:	8e 0f       	add	r24, r30
     9e0:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <indexTrame>
     9e4:	f0 e0       	ldi	r31, 0x00	; 0
     9e6:	e7 52       	subi	r30, 0x27	; 39
     9e8:	fc 4f       	sbci	r31, 0xFC	; 252
     9ea:	20 83       	st	Z, r18
     9ec:	03 c0       	rjmp	.+6      	; 0x9f4 <parseRxUbxNavPvt+0x128>
			
		}
		else
		state = CHECKSUM_VERIF;
     9ee:	87 e0       	ldi	r24, 0x07	; 7
     9f0:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <state>
		
		indexPayload++;
     9f4:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <indexPayload>
     9f8:	8f 5f       	subi	r24, 0xFF	; 255
     9fa:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <indexPayload>
		break;
     9fe:	37 c0       	rjmp	.+110    	; 0xa6e <parseRxUbxNavPvt+0x1a2>
		
		case CHECKSUM_VERIF:
		
		for(uint8_t n=2;n<98;n++)
		{
			checksumA = checksumA + trameGpsNavPvtRx[n];
     a00:	e9 2f       	mov	r30, r25
     a02:	f0 e0       	ldi	r31, 0x00	; 0
     a04:	e7 52       	subi	r30, 0x27	; 39
     a06:	fc 4f       	sbci	r31, 0xFC	; 252
     a08:	20 81       	ld	r18, Z
     a0a:	80 91 2d 02 	lds	r24, 0x022D	; 0x80022d <checksumA>
     a0e:	82 0f       	add	r24, r18
     a10:	80 93 2d 02 	sts	0x022D, r24	; 0x80022d <checksumA>
			checksumB = checksumB + checksumA;
     a14:	20 91 2c 02 	lds	r18, 0x022C	; 0x80022c <checksumB>
     a18:	82 0f       	add	r24, r18
     a1a:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <checksumB>
		indexPayload++;
		break;
		
		case CHECKSUM_VERIF:
		
		for(uint8_t n=2;n<98;n++)
     a1e:	9f 5f       	subi	r25, 0xFF	; 255
     a20:	01 c0       	rjmp	.+2      	; 0xa24 <parseRxUbxNavPvt+0x158>
uint8_t buffer[4];
uint8_t buffer2[4];

uint8_t parseRxUbxNavPvt(uint8_t u8Data)
{
	switch(state)
     a22:	92 e0       	ldi	r25, 0x02	; 2
		indexPayload++;
		break;
		
		case CHECKSUM_VERIF:
		
		for(uint8_t n=2;n<98;n++)
     a24:	92 36       	cpi	r25, 0x62	; 98
     a26:	60 f3       	brcs	.-40     	; 0xa00 <parseRxUbxNavPvt+0x134>
		{
			checksumA = checksumA + trameGpsNavPvtRx[n];
			checksumB = checksumB + checksumA;
		}
		state = DEBUT_TRAME;
     a28:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <state>
		if((checksumA == trameGpsNavPvtRx[98]) && (checksumB == trameGpsNavPvtRx[99]))
     a2c:	90 91 3b 04 	lds	r25, 0x043B	; 0x80043b <trameGpsNavPvtRx+0x62>
     a30:	80 91 2d 02 	lds	r24, 0x022D	; 0x80022d <checksumA>
     a34:	98 13       	cpse	r25, r24
     a36:	19 c0       	rjmp	.+50     	; 0xa6a <parseRxUbxNavPvt+0x19e>
     a38:	90 91 3c 04 	lds	r25, 0x043C	; 0x80043c <trameGpsNavPvtRx+0x63>
     a3c:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <checksumB>
     a40:	98 13       	cpse	r25, r24
     a42:	13 c0       	rjmp	.+38     	; 0xa6a <parseRxUbxNavPvt+0x19e>
		{
			retour = 1;
     a44:	81 e0       	ldi	r24, 0x01	; 1
     a46:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <retour>
			for(uint8_t x = 0; x<100; x++)
     a4a:	20 e0       	ldi	r18, 0x00	; 0
     a4c:	0b c0       	rjmp	.+22     	; 0xa64 <parseRxUbxNavPvt+0x198>
			{
				trameGpsNavPvtValide[x] = trameGpsNavPvtRx[x];
     a4e:	82 2f       	mov	r24, r18
     a50:	90 e0       	ldi	r25, 0x00	; 0
     a52:	fc 01       	movw	r30, r24
     a54:	e7 52       	subi	r30, 0x27	; 39
     a56:	fc 4f       	sbci	r31, 0xFC	; 252
     a58:	30 81       	ld	r19, Z
     a5a:	fc 01       	movw	r30, r24
     a5c:	eb 58       	subi	r30, 0x8B	; 139
     a5e:	fc 4f       	sbci	r31, 0xFC	; 252
     a60:	30 83       	st	Z, r19
		}
		state = DEBUT_TRAME;
		if((checksumA == trameGpsNavPvtRx[98]) && (checksumB == trameGpsNavPvtRx[99]))
		{
			retour = 1;
			for(uint8_t x = 0; x<100; x++)
     a62:	2f 5f       	subi	r18, 0xFF	; 255
     a64:	24 36       	cpi	r18, 0x64	; 100
     a66:	98 f3       	brcs	.-26     	; 0xa4e <parseRxUbxNavPvt+0x182>
     a68:	02 c0       	rjmp	.+4      	; 0xa6e <parseRxUbxNavPvt+0x1a2>
				trameGpsNavPvtValide[x] = trameGpsNavPvtRx[x];
			}
		}
		else
		{
			retour = 0;
     a6a:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <retour>
		}
		break;
	}
	return retour;
}
     a6e:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <retour>
     a72:	08 95       	ret

00000a74 <getNavPvtLat>:
float getNavPvtLat()
{
	buffer2[0] = trameGpsNavPvtValide[34];
     a74:	a5 e7       	ldi	r26, 0x75	; 117
     a76:	b3 e0       	ldi	r27, 0x03	; 3
     a78:	92 96       	adiw	r26, 0x22	; 34
     a7a:	8c 91       	ld	r24, X
     a7c:	92 97       	sbiw	r26, 0x22	; 34
     a7e:	e1 e7       	ldi	r30, 0x71	; 113
     a80:	f3 e0       	ldi	r31, 0x03	; 3
     a82:	80 83       	st	Z, r24
	buffer2[1] = trameGpsNavPvtValide[35];
     a84:	93 96       	adiw	r26, 0x23	; 35
     a86:	8c 91       	ld	r24, X
     a88:	93 97       	sbiw	r26, 0x23	; 35
     a8a:	81 83       	std	Z+1, r24	; 0x01
	buffer2[2] = trameGpsNavPvtValide[36];
     a8c:	94 96       	adiw	r26, 0x24	; 36
     a8e:	8c 91       	ld	r24, X
     a90:	94 97       	sbiw	r26, 0x24	; 36
     a92:	82 83       	std	Z+2, r24	; 0x02
	buffer2[3] = trameGpsNavPvtValide[37];
     a94:	95 96       	adiw	r26, 0x25	; 37
     a96:	8c 91       	ld	r24, X
     a98:	83 83       	std	Z+3, r24	; 0x03
	
	latitude = 0;
	memcpy(&latitude, buffer2, sizeof(latitude));
     a9a:	60 81       	ld	r22, Z
     a9c:	71 81       	ldd	r23, Z+1	; 0x01
     a9e:	82 81       	ldd	r24, Z+2	; 0x02
     aa0:	93 81       	ldd	r25, Z+3	; 0x03
     aa2:	60 93 23 02 	sts	0x0223, r22	; 0x800223 <latitude>
     aa6:	70 93 24 02 	sts	0x0224, r23	; 0x800224 <latitude+0x1>
     aaa:	80 93 25 02 	sts	0x0225, r24	; 0x800225 <latitude+0x2>
     aae:	90 93 26 02 	sts	0x0226, r25	; 0x800226 <latitude+0x3>
	return (float)latitude;
}
     ab2:	08 95       	ret

00000ab4 <getNavPvtLon>:
float getNavPvtLon()
{
	buffer[0] = trameGpsNavPvtValide[30];
     ab4:	a5 e7       	ldi	r26, 0x75	; 117
     ab6:	b3 e0       	ldi	r27, 0x03	; 3
     ab8:	5e 96       	adiw	r26, 0x1e	; 30
     aba:	8c 91       	ld	r24, X
     abc:	5e 97       	sbiw	r26, 0x1e	; 30
     abe:	ed e5       	ldi	r30, 0x5D	; 93
     ac0:	f2 e0       	ldi	r31, 0x02	; 2
     ac2:	80 83       	st	Z, r24
	buffer[1] = trameGpsNavPvtValide[31];
     ac4:	5f 96       	adiw	r26, 0x1f	; 31
     ac6:	8c 91       	ld	r24, X
     ac8:	5f 97       	sbiw	r26, 0x1f	; 31
     aca:	81 83       	std	Z+1, r24	; 0x01
	buffer[2] = trameGpsNavPvtValide[32];
     acc:	90 96       	adiw	r26, 0x20	; 32
     ace:	8c 91       	ld	r24, X
     ad0:	90 97       	sbiw	r26, 0x20	; 32
     ad2:	82 83       	std	Z+2, r24	; 0x02
	buffer[3] = trameGpsNavPvtValide[33];
     ad4:	91 96       	adiw	r26, 0x21	; 33
     ad6:	8c 91       	ld	r24, X
     ad8:	83 83       	std	Z+3, r24	; 0x03
	
	longitude = 0;
	memcpy(&longitude, buffer, sizeof(longitude));
     ada:	60 81       	ld	r22, Z
     adc:	71 81       	ldd	r23, Z+1	; 0x01
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	60 93 27 02 	sts	0x0227, r22	; 0x800227 <longitude>
     ae6:	70 93 28 02 	sts	0x0228, r23	; 0x800228 <longitude+0x1>
     aea:	80 93 29 02 	sts	0x0229, r24	; 0x800229 <longitude+0x2>
     aee:	90 93 2a 02 	sts	0x022A, r25	; 0x80022a <longitude+0x3>
	return (float)longitude;
}
     af2:	08 95       	ret

00000af4 <__subsf3>:
     af4:	50 58       	subi	r21, 0x80	; 128

00000af6 <__addsf3>:
     af6:	bb 27       	eor	r27, r27
     af8:	aa 27       	eor	r26, r26
     afa:	0e d0       	rcall	.+28     	; 0xb18 <__addsf3x>
     afc:	48 c1       	rjmp	.+656    	; 0xd8e <__fp_round>
     afe:	39 d1       	rcall	.+626    	; 0xd72 <__fp_pscA>
     b00:	30 f0       	brcs	.+12     	; 0xb0e <__addsf3+0x18>
     b02:	3e d1       	rcall	.+636    	; 0xd80 <__fp_pscB>
     b04:	20 f0       	brcs	.+8      	; 0xb0e <__addsf3+0x18>
     b06:	31 f4       	brne	.+12     	; 0xb14 <__addsf3+0x1e>
     b08:	9f 3f       	cpi	r25, 0xFF	; 255
     b0a:	11 f4       	brne	.+4      	; 0xb10 <__addsf3+0x1a>
     b0c:	1e f4       	brtc	.+6      	; 0xb14 <__addsf3+0x1e>
     b0e:	2e c1       	rjmp	.+604    	; 0xd6c <__fp_nan>
     b10:	0e f4       	brtc	.+2      	; 0xb14 <__addsf3+0x1e>
     b12:	e0 95       	com	r30
     b14:	e7 fb       	bst	r30, 7
     b16:	24 c1       	rjmp	.+584    	; 0xd60 <__fp_inf>

00000b18 <__addsf3x>:
     b18:	e9 2f       	mov	r30, r25
     b1a:	4a d1       	rcall	.+660    	; 0xdb0 <__fp_split3>
     b1c:	80 f3       	brcs	.-32     	; 0xafe <__addsf3+0x8>
     b1e:	ba 17       	cp	r27, r26
     b20:	62 07       	cpc	r22, r18
     b22:	73 07       	cpc	r23, r19
     b24:	84 07       	cpc	r24, r20
     b26:	95 07       	cpc	r25, r21
     b28:	18 f0       	brcs	.+6      	; 0xb30 <__addsf3x+0x18>
     b2a:	71 f4       	brne	.+28     	; 0xb48 <__addsf3x+0x30>
     b2c:	9e f5       	brtc	.+102    	; 0xb94 <__addsf3x+0x7c>
     b2e:	62 c1       	rjmp	.+708    	; 0xdf4 <__fp_zero>
     b30:	0e f4       	brtc	.+2      	; 0xb34 <__addsf3x+0x1c>
     b32:	e0 95       	com	r30
     b34:	0b 2e       	mov	r0, r27
     b36:	ba 2f       	mov	r27, r26
     b38:	a0 2d       	mov	r26, r0
     b3a:	0b 01       	movw	r0, r22
     b3c:	b9 01       	movw	r22, r18
     b3e:	90 01       	movw	r18, r0
     b40:	0c 01       	movw	r0, r24
     b42:	ca 01       	movw	r24, r20
     b44:	a0 01       	movw	r20, r0
     b46:	11 24       	eor	r1, r1
     b48:	ff 27       	eor	r31, r31
     b4a:	59 1b       	sub	r21, r25
     b4c:	99 f0       	breq	.+38     	; 0xb74 <__addsf3x+0x5c>
     b4e:	59 3f       	cpi	r21, 0xF9	; 249
     b50:	50 f4       	brcc	.+20     	; 0xb66 <__addsf3x+0x4e>
     b52:	50 3e       	cpi	r21, 0xE0	; 224
     b54:	68 f1       	brcs	.+90     	; 0xbb0 <__addsf3x+0x98>
     b56:	1a 16       	cp	r1, r26
     b58:	f0 40       	sbci	r31, 0x00	; 0
     b5a:	a2 2f       	mov	r26, r18
     b5c:	23 2f       	mov	r18, r19
     b5e:	34 2f       	mov	r19, r20
     b60:	44 27       	eor	r20, r20
     b62:	58 5f       	subi	r21, 0xF8	; 248
     b64:	f3 cf       	rjmp	.-26     	; 0xb4c <__addsf3x+0x34>
     b66:	46 95       	lsr	r20
     b68:	37 95       	ror	r19
     b6a:	27 95       	ror	r18
     b6c:	a7 95       	ror	r26
     b6e:	f0 40       	sbci	r31, 0x00	; 0
     b70:	53 95       	inc	r21
     b72:	c9 f7       	brne	.-14     	; 0xb66 <__addsf3x+0x4e>
     b74:	7e f4       	brtc	.+30     	; 0xb94 <__addsf3x+0x7c>
     b76:	1f 16       	cp	r1, r31
     b78:	ba 0b       	sbc	r27, r26
     b7a:	62 0b       	sbc	r22, r18
     b7c:	73 0b       	sbc	r23, r19
     b7e:	84 0b       	sbc	r24, r20
     b80:	ba f0       	brmi	.+46     	; 0xbb0 <__addsf3x+0x98>
     b82:	91 50       	subi	r25, 0x01	; 1
     b84:	a1 f0       	breq	.+40     	; 0xbae <__addsf3x+0x96>
     b86:	ff 0f       	add	r31, r31
     b88:	bb 1f       	adc	r27, r27
     b8a:	66 1f       	adc	r22, r22
     b8c:	77 1f       	adc	r23, r23
     b8e:	88 1f       	adc	r24, r24
     b90:	c2 f7       	brpl	.-16     	; 0xb82 <__addsf3x+0x6a>
     b92:	0e c0       	rjmp	.+28     	; 0xbb0 <__addsf3x+0x98>
     b94:	ba 0f       	add	r27, r26
     b96:	62 1f       	adc	r22, r18
     b98:	73 1f       	adc	r23, r19
     b9a:	84 1f       	adc	r24, r20
     b9c:	48 f4       	brcc	.+18     	; 0xbb0 <__addsf3x+0x98>
     b9e:	87 95       	ror	r24
     ba0:	77 95       	ror	r23
     ba2:	67 95       	ror	r22
     ba4:	b7 95       	ror	r27
     ba6:	f7 95       	ror	r31
     ba8:	9e 3f       	cpi	r25, 0xFE	; 254
     baa:	08 f0       	brcs	.+2      	; 0xbae <__addsf3x+0x96>
     bac:	b3 cf       	rjmp	.-154    	; 0xb14 <__addsf3+0x1e>
     bae:	93 95       	inc	r25
     bb0:	88 0f       	add	r24, r24
     bb2:	08 f0       	brcs	.+2      	; 0xbb6 <__addsf3x+0x9e>
     bb4:	99 27       	eor	r25, r25
     bb6:	ee 0f       	add	r30, r30
     bb8:	97 95       	ror	r25
     bba:	87 95       	ror	r24
     bbc:	08 95       	ret

00000bbe <__divsf3>:
     bbe:	0c d0       	rcall	.+24     	; 0xbd8 <__divsf3x>
     bc0:	e6 c0       	rjmp	.+460    	; 0xd8e <__fp_round>
     bc2:	de d0       	rcall	.+444    	; 0xd80 <__fp_pscB>
     bc4:	40 f0       	brcs	.+16     	; 0xbd6 <__divsf3+0x18>
     bc6:	d5 d0       	rcall	.+426    	; 0xd72 <__fp_pscA>
     bc8:	30 f0       	brcs	.+12     	; 0xbd6 <__divsf3+0x18>
     bca:	21 f4       	brne	.+8      	; 0xbd4 <__divsf3+0x16>
     bcc:	5f 3f       	cpi	r21, 0xFF	; 255
     bce:	19 f0       	breq	.+6      	; 0xbd6 <__divsf3+0x18>
     bd0:	c7 c0       	rjmp	.+398    	; 0xd60 <__fp_inf>
     bd2:	51 11       	cpse	r21, r1
     bd4:	10 c1       	rjmp	.+544    	; 0xdf6 <__fp_szero>
     bd6:	ca c0       	rjmp	.+404    	; 0xd6c <__fp_nan>

00000bd8 <__divsf3x>:
     bd8:	eb d0       	rcall	.+470    	; 0xdb0 <__fp_split3>
     bda:	98 f3       	brcs	.-26     	; 0xbc2 <__divsf3+0x4>

00000bdc <__divsf3_pse>:
     bdc:	99 23       	and	r25, r25
     bde:	c9 f3       	breq	.-14     	; 0xbd2 <__divsf3+0x14>
     be0:	55 23       	and	r21, r21
     be2:	b1 f3       	breq	.-20     	; 0xbd0 <__divsf3+0x12>
     be4:	95 1b       	sub	r25, r21
     be6:	55 0b       	sbc	r21, r21
     be8:	bb 27       	eor	r27, r27
     bea:	aa 27       	eor	r26, r26
     bec:	62 17       	cp	r22, r18
     bee:	73 07       	cpc	r23, r19
     bf0:	84 07       	cpc	r24, r20
     bf2:	38 f0       	brcs	.+14     	; 0xc02 <__divsf3_pse+0x26>
     bf4:	9f 5f       	subi	r25, 0xFF	; 255
     bf6:	5f 4f       	sbci	r21, 0xFF	; 255
     bf8:	22 0f       	add	r18, r18
     bfa:	33 1f       	adc	r19, r19
     bfc:	44 1f       	adc	r20, r20
     bfe:	aa 1f       	adc	r26, r26
     c00:	a9 f3       	breq	.-22     	; 0xbec <__divsf3_pse+0x10>
     c02:	33 d0       	rcall	.+102    	; 0xc6a <__divsf3_pse+0x8e>
     c04:	0e 2e       	mov	r0, r30
     c06:	3a f0       	brmi	.+14     	; 0xc16 <__divsf3_pse+0x3a>
     c08:	e0 e8       	ldi	r30, 0x80	; 128
     c0a:	30 d0       	rcall	.+96     	; 0xc6c <__divsf3_pse+0x90>
     c0c:	91 50       	subi	r25, 0x01	; 1
     c0e:	50 40       	sbci	r21, 0x00	; 0
     c10:	e6 95       	lsr	r30
     c12:	00 1c       	adc	r0, r0
     c14:	ca f7       	brpl	.-14     	; 0xc08 <__divsf3_pse+0x2c>
     c16:	29 d0       	rcall	.+82     	; 0xc6a <__divsf3_pse+0x8e>
     c18:	fe 2f       	mov	r31, r30
     c1a:	27 d0       	rcall	.+78     	; 0xc6a <__divsf3_pse+0x8e>
     c1c:	66 0f       	add	r22, r22
     c1e:	77 1f       	adc	r23, r23
     c20:	88 1f       	adc	r24, r24
     c22:	bb 1f       	adc	r27, r27
     c24:	26 17       	cp	r18, r22
     c26:	37 07       	cpc	r19, r23
     c28:	48 07       	cpc	r20, r24
     c2a:	ab 07       	cpc	r26, r27
     c2c:	b0 e8       	ldi	r27, 0x80	; 128
     c2e:	09 f0       	breq	.+2      	; 0xc32 <__divsf3_pse+0x56>
     c30:	bb 0b       	sbc	r27, r27
     c32:	80 2d       	mov	r24, r0
     c34:	bf 01       	movw	r22, r30
     c36:	ff 27       	eor	r31, r31
     c38:	93 58       	subi	r25, 0x83	; 131
     c3a:	5f 4f       	sbci	r21, 0xFF	; 255
     c3c:	2a f0       	brmi	.+10     	; 0xc48 <__divsf3_pse+0x6c>
     c3e:	9e 3f       	cpi	r25, 0xFE	; 254
     c40:	51 05       	cpc	r21, r1
     c42:	68 f0       	brcs	.+26     	; 0xc5e <__divsf3_pse+0x82>
     c44:	8d c0       	rjmp	.+282    	; 0xd60 <__fp_inf>
     c46:	d7 c0       	rjmp	.+430    	; 0xdf6 <__fp_szero>
     c48:	5f 3f       	cpi	r21, 0xFF	; 255
     c4a:	ec f3       	brlt	.-6      	; 0xc46 <__divsf3_pse+0x6a>
     c4c:	98 3e       	cpi	r25, 0xE8	; 232
     c4e:	dc f3       	brlt	.-10     	; 0xc46 <__divsf3_pse+0x6a>
     c50:	86 95       	lsr	r24
     c52:	77 95       	ror	r23
     c54:	67 95       	ror	r22
     c56:	b7 95       	ror	r27
     c58:	f7 95       	ror	r31
     c5a:	9f 5f       	subi	r25, 0xFF	; 255
     c5c:	c9 f7       	brne	.-14     	; 0xc50 <__divsf3_pse+0x74>
     c5e:	88 0f       	add	r24, r24
     c60:	91 1d       	adc	r25, r1
     c62:	96 95       	lsr	r25
     c64:	87 95       	ror	r24
     c66:	97 f9       	bld	r25, 7
     c68:	08 95       	ret
     c6a:	e1 e0       	ldi	r30, 0x01	; 1
     c6c:	66 0f       	add	r22, r22
     c6e:	77 1f       	adc	r23, r23
     c70:	88 1f       	adc	r24, r24
     c72:	bb 1f       	adc	r27, r27
     c74:	62 17       	cp	r22, r18
     c76:	73 07       	cpc	r23, r19
     c78:	84 07       	cpc	r24, r20
     c7a:	ba 07       	cpc	r27, r26
     c7c:	20 f0       	brcs	.+8      	; 0xc86 <__divsf3_pse+0xaa>
     c7e:	62 1b       	sub	r22, r18
     c80:	73 0b       	sbc	r23, r19
     c82:	84 0b       	sbc	r24, r20
     c84:	ba 0b       	sbc	r27, r26
     c86:	ee 1f       	adc	r30, r30
     c88:	88 f7       	brcc	.-30     	; 0xc6c <__divsf3_pse+0x90>
     c8a:	e0 95       	com	r30
     c8c:	08 95       	ret

00000c8e <__fixunssfsi>:
     c8e:	98 d0       	rcall	.+304    	; 0xdc0 <__fp_splitA>
     c90:	88 f0       	brcs	.+34     	; 0xcb4 <__fixunssfsi+0x26>
     c92:	9f 57       	subi	r25, 0x7F	; 127
     c94:	90 f0       	brcs	.+36     	; 0xcba <__fixunssfsi+0x2c>
     c96:	b9 2f       	mov	r27, r25
     c98:	99 27       	eor	r25, r25
     c9a:	b7 51       	subi	r27, 0x17	; 23
     c9c:	a0 f0       	brcs	.+40     	; 0xcc6 <__fixunssfsi+0x38>
     c9e:	d1 f0       	breq	.+52     	; 0xcd4 <__fixunssfsi+0x46>
     ca0:	66 0f       	add	r22, r22
     ca2:	77 1f       	adc	r23, r23
     ca4:	88 1f       	adc	r24, r24
     ca6:	99 1f       	adc	r25, r25
     ca8:	1a f0       	brmi	.+6      	; 0xcb0 <__fixunssfsi+0x22>
     caa:	ba 95       	dec	r27
     cac:	c9 f7       	brne	.-14     	; 0xca0 <__fixunssfsi+0x12>
     cae:	12 c0       	rjmp	.+36     	; 0xcd4 <__fixunssfsi+0x46>
     cb0:	b1 30       	cpi	r27, 0x01	; 1
     cb2:	81 f0       	breq	.+32     	; 0xcd4 <__fixunssfsi+0x46>
     cb4:	9f d0       	rcall	.+318    	; 0xdf4 <__fp_zero>
     cb6:	b1 e0       	ldi	r27, 0x01	; 1
     cb8:	08 95       	ret
     cba:	9c c0       	rjmp	.+312    	; 0xdf4 <__fp_zero>
     cbc:	67 2f       	mov	r22, r23
     cbe:	78 2f       	mov	r23, r24
     cc0:	88 27       	eor	r24, r24
     cc2:	b8 5f       	subi	r27, 0xF8	; 248
     cc4:	39 f0       	breq	.+14     	; 0xcd4 <__fixunssfsi+0x46>
     cc6:	b9 3f       	cpi	r27, 0xF9	; 249
     cc8:	cc f3       	brlt	.-14     	; 0xcbc <__fixunssfsi+0x2e>
     cca:	86 95       	lsr	r24
     ccc:	77 95       	ror	r23
     cce:	67 95       	ror	r22
     cd0:	b3 95       	inc	r27
     cd2:	d9 f7       	brne	.-10     	; 0xcca <__fixunssfsi+0x3c>
     cd4:	3e f4       	brtc	.+14     	; 0xce4 <__fixunssfsi+0x56>
     cd6:	90 95       	com	r25
     cd8:	80 95       	com	r24
     cda:	70 95       	com	r23
     cdc:	61 95       	neg	r22
     cde:	7f 4f       	sbci	r23, 0xFF	; 255
     ce0:	8f 4f       	sbci	r24, 0xFF	; 255
     ce2:	9f 4f       	sbci	r25, 0xFF	; 255
     ce4:	08 95       	ret

00000ce6 <__floatunsisf>:
     ce6:	e8 94       	clt
     ce8:	09 c0       	rjmp	.+18     	; 0xcfc <__floatsisf+0x12>

00000cea <__floatsisf>:
     cea:	97 fb       	bst	r25, 7
     cec:	3e f4       	brtc	.+14     	; 0xcfc <__floatsisf+0x12>
     cee:	90 95       	com	r25
     cf0:	80 95       	com	r24
     cf2:	70 95       	com	r23
     cf4:	61 95       	neg	r22
     cf6:	7f 4f       	sbci	r23, 0xFF	; 255
     cf8:	8f 4f       	sbci	r24, 0xFF	; 255
     cfa:	9f 4f       	sbci	r25, 0xFF	; 255
     cfc:	99 23       	and	r25, r25
     cfe:	a9 f0       	breq	.+42     	; 0xd2a <__floatsisf+0x40>
     d00:	f9 2f       	mov	r31, r25
     d02:	96 e9       	ldi	r25, 0x96	; 150
     d04:	bb 27       	eor	r27, r27
     d06:	93 95       	inc	r25
     d08:	f6 95       	lsr	r31
     d0a:	87 95       	ror	r24
     d0c:	77 95       	ror	r23
     d0e:	67 95       	ror	r22
     d10:	b7 95       	ror	r27
     d12:	f1 11       	cpse	r31, r1
     d14:	f8 cf       	rjmp	.-16     	; 0xd06 <__floatsisf+0x1c>
     d16:	fa f4       	brpl	.+62     	; 0xd56 <__floatsisf+0x6c>
     d18:	bb 0f       	add	r27, r27
     d1a:	11 f4       	brne	.+4      	; 0xd20 <__floatsisf+0x36>
     d1c:	60 ff       	sbrs	r22, 0
     d1e:	1b c0       	rjmp	.+54     	; 0xd56 <__floatsisf+0x6c>
     d20:	6f 5f       	subi	r22, 0xFF	; 255
     d22:	7f 4f       	sbci	r23, 0xFF	; 255
     d24:	8f 4f       	sbci	r24, 0xFF	; 255
     d26:	9f 4f       	sbci	r25, 0xFF	; 255
     d28:	16 c0       	rjmp	.+44     	; 0xd56 <__floatsisf+0x6c>
     d2a:	88 23       	and	r24, r24
     d2c:	11 f0       	breq	.+4      	; 0xd32 <__floatsisf+0x48>
     d2e:	96 e9       	ldi	r25, 0x96	; 150
     d30:	11 c0       	rjmp	.+34     	; 0xd54 <__floatsisf+0x6a>
     d32:	77 23       	and	r23, r23
     d34:	21 f0       	breq	.+8      	; 0xd3e <__floatsisf+0x54>
     d36:	9e e8       	ldi	r25, 0x8E	; 142
     d38:	87 2f       	mov	r24, r23
     d3a:	76 2f       	mov	r23, r22
     d3c:	05 c0       	rjmp	.+10     	; 0xd48 <__floatsisf+0x5e>
     d3e:	66 23       	and	r22, r22
     d40:	71 f0       	breq	.+28     	; 0xd5e <__floatsisf+0x74>
     d42:	96 e8       	ldi	r25, 0x86	; 134
     d44:	86 2f       	mov	r24, r22
     d46:	70 e0       	ldi	r23, 0x00	; 0
     d48:	60 e0       	ldi	r22, 0x00	; 0
     d4a:	2a f0       	brmi	.+10     	; 0xd56 <__floatsisf+0x6c>
     d4c:	9a 95       	dec	r25
     d4e:	66 0f       	add	r22, r22
     d50:	77 1f       	adc	r23, r23
     d52:	88 1f       	adc	r24, r24
     d54:	da f7       	brpl	.-10     	; 0xd4c <__floatsisf+0x62>
     d56:	88 0f       	add	r24, r24
     d58:	96 95       	lsr	r25
     d5a:	87 95       	ror	r24
     d5c:	97 f9       	bld	r25, 7
     d5e:	08 95       	ret

00000d60 <__fp_inf>:
     d60:	97 f9       	bld	r25, 7
     d62:	9f 67       	ori	r25, 0x7F	; 127
     d64:	80 e8       	ldi	r24, 0x80	; 128
     d66:	70 e0       	ldi	r23, 0x00	; 0
     d68:	60 e0       	ldi	r22, 0x00	; 0
     d6a:	08 95       	ret

00000d6c <__fp_nan>:
     d6c:	9f ef       	ldi	r25, 0xFF	; 255
     d6e:	80 ec       	ldi	r24, 0xC0	; 192
     d70:	08 95       	ret

00000d72 <__fp_pscA>:
     d72:	00 24       	eor	r0, r0
     d74:	0a 94       	dec	r0
     d76:	16 16       	cp	r1, r22
     d78:	17 06       	cpc	r1, r23
     d7a:	18 06       	cpc	r1, r24
     d7c:	09 06       	cpc	r0, r25
     d7e:	08 95       	ret

00000d80 <__fp_pscB>:
     d80:	00 24       	eor	r0, r0
     d82:	0a 94       	dec	r0
     d84:	12 16       	cp	r1, r18
     d86:	13 06       	cpc	r1, r19
     d88:	14 06       	cpc	r1, r20
     d8a:	05 06       	cpc	r0, r21
     d8c:	08 95       	ret

00000d8e <__fp_round>:
     d8e:	09 2e       	mov	r0, r25
     d90:	03 94       	inc	r0
     d92:	00 0c       	add	r0, r0
     d94:	11 f4       	brne	.+4      	; 0xd9a <__fp_round+0xc>
     d96:	88 23       	and	r24, r24
     d98:	52 f0       	brmi	.+20     	; 0xdae <__fp_round+0x20>
     d9a:	bb 0f       	add	r27, r27
     d9c:	40 f4       	brcc	.+16     	; 0xdae <__fp_round+0x20>
     d9e:	bf 2b       	or	r27, r31
     da0:	11 f4       	brne	.+4      	; 0xda6 <__fp_round+0x18>
     da2:	60 ff       	sbrs	r22, 0
     da4:	04 c0       	rjmp	.+8      	; 0xdae <__fp_round+0x20>
     da6:	6f 5f       	subi	r22, 0xFF	; 255
     da8:	7f 4f       	sbci	r23, 0xFF	; 255
     daa:	8f 4f       	sbci	r24, 0xFF	; 255
     dac:	9f 4f       	sbci	r25, 0xFF	; 255
     dae:	08 95       	ret

00000db0 <__fp_split3>:
     db0:	57 fd       	sbrc	r21, 7
     db2:	90 58       	subi	r25, 0x80	; 128
     db4:	44 0f       	add	r20, r20
     db6:	55 1f       	adc	r21, r21
     db8:	59 f0       	breq	.+22     	; 0xdd0 <__fp_splitA+0x10>
     dba:	5f 3f       	cpi	r21, 0xFF	; 255
     dbc:	71 f0       	breq	.+28     	; 0xdda <__fp_splitA+0x1a>
     dbe:	47 95       	ror	r20

00000dc0 <__fp_splitA>:
     dc0:	88 0f       	add	r24, r24
     dc2:	97 fb       	bst	r25, 7
     dc4:	99 1f       	adc	r25, r25
     dc6:	61 f0       	breq	.+24     	; 0xde0 <__fp_splitA+0x20>
     dc8:	9f 3f       	cpi	r25, 0xFF	; 255
     dca:	79 f0       	breq	.+30     	; 0xdea <__fp_splitA+0x2a>
     dcc:	87 95       	ror	r24
     dce:	08 95       	ret
     dd0:	12 16       	cp	r1, r18
     dd2:	13 06       	cpc	r1, r19
     dd4:	14 06       	cpc	r1, r20
     dd6:	55 1f       	adc	r21, r21
     dd8:	f2 cf       	rjmp	.-28     	; 0xdbe <__fp_split3+0xe>
     dda:	46 95       	lsr	r20
     ddc:	f1 df       	rcall	.-30     	; 0xdc0 <__fp_splitA>
     dde:	08 c0       	rjmp	.+16     	; 0xdf0 <__fp_splitA+0x30>
     de0:	16 16       	cp	r1, r22
     de2:	17 06       	cpc	r1, r23
     de4:	18 06       	cpc	r1, r24
     de6:	99 1f       	adc	r25, r25
     de8:	f1 cf       	rjmp	.-30     	; 0xdcc <__fp_splitA+0xc>
     dea:	86 95       	lsr	r24
     dec:	71 05       	cpc	r23, r1
     dee:	61 05       	cpc	r22, r1
     df0:	08 94       	sec
     df2:	08 95       	ret

00000df4 <__fp_zero>:
     df4:	e8 94       	clt

00000df6 <__fp_szero>:
     df6:	bb 27       	eor	r27, r27
     df8:	66 27       	eor	r22, r22
     dfa:	77 27       	eor	r23, r23
     dfc:	cb 01       	movw	r24, r22
     dfe:	97 f9       	bld	r25, 7
     e00:	08 95       	ret

00000e02 <__mulsf3>:
     e02:	0b d0       	rcall	.+22     	; 0xe1a <__mulsf3x>
     e04:	c4 cf       	rjmp	.-120    	; 0xd8e <__fp_round>
     e06:	b5 df       	rcall	.-150    	; 0xd72 <__fp_pscA>
     e08:	28 f0       	brcs	.+10     	; 0xe14 <__mulsf3+0x12>
     e0a:	ba df       	rcall	.-140    	; 0xd80 <__fp_pscB>
     e0c:	18 f0       	brcs	.+6      	; 0xe14 <__mulsf3+0x12>
     e0e:	95 23       	and	r25, r21
     e10:	09 f0       	breq	.+2      	; 0xe14 <__mulsf3+0x12>
     e12:	a6 cf       	rjmp	.-180    	; 0xd60 <__fp_inf>
     e14:	ab cf       	rjmp	.-170    	; 0xd6c <__fp_nan>
     e16:	11 24       	eor	r1, r1
     e18:	ee cf       	rjmp	.-36     	; 0xdf6 <__fp_szero>

00000e1a <__mulsf3x>:
     e1a:	ca df       	rcall	.-108    	; 0xdb0 <__fp_split3>
     e1c:	a0 f3       	brcs	.-24     	; 0xe06 <__mulsf3+0x4>

00000e1e <__mulsf3_pse>:
     e1e:	95 9f       	mul	r25, r21
     e20:	d1 f3       	breq	.-12     	; 0xe16 <__mulsf3+0x14>
     e22:	95 0f       	add	r25, r21
     e24:	50 e0       	ldi	r21, 0x00	; 0
     e26:	55 1f       	adc	r21, r21
     e28:	62 9f       	mul	r22, r18
     e2a:	f0 01       	movw	r30, r0
     e2c:	72 9f       	mul	r23, r18
     e2e:	bb 27       	eor	r27, r27
     e30:	f0 0d       	add	r31, r0
     e32:	b1 1d       	adc	r27, r1
     e34:	63 9f       	mul	r22, r19
     e36:	aa 27       	eor	r26, r26
     e38:	f0 0d       	add	r31, r0
     e3a:	b1 1d       	adc	r27, r1
     e3c:	aa 1f       	adc	r26, r26
     e3e:	64 9f       	mul	r22, r20
     e40:	66 27       	eor	r22, r22
     e42:	b0 0d       	add	r27, r0
     e44:	a1 1d       	adc	r26, r1
     e46:	66 1f       	adc	r22, r22
     e48:	82 9f       	mul	r24, r18
     e4a:	22 27       	eor	r18, r18
     e4c:	b0 0d       	add	r27, r0
     e4e:	a1 1d       	adc	r26, r1
     e50:	62 1f       	adc	r22, r18
     e52:	73 9f       	mul	r23, r19
     e54:	b0 0d       	add	r27, r0
     e56:	a1 1d       	adc	r26, r1
     e58:	62 1f       	adc	r22, r18
     e5a:	83 9f       	mul	r24, r19
     e5c:	a0 0d       	add	r26, r0
     e5e:	61 1d       	adc	r22, r1
     e60:	22 1f       	adc	r18, r18
     e62:	74 9f       	mul	r23, r20
     e64:	33 27       	eor	r19, r19
     e66:	a0 0d       	add	r26, r0
     e68:	61 1d       	adc	r22, r1
     e6a:	23 1f       	adc	r18, r19
     e6c:	84 9f       	mul	r24, r20
     e6e:	60 0d       	add	r22, r0
     e70:	21 1d       	adc	r18, r1
     e72:	82 2f       	mov	r24, r18
     e74:	76 2f       	mov	r23, r22
     e76:	6a 2f       	mov	r22, r26
     e78:	11 24       	eor	r1, r1
     e7a:	9f 57       	subi	r25, 0x7F	; 127
     e7c:	50 40       	sbci	r21, 0x00	; 0
     e7e:	8a f0       	brmi	.+34     	; 0xea2 <__mulsf3_pse+0x84>
     e80:	e1 f0       	breq	.+56     	; 0xeba <__mulsf3_pse+0x9c>
     e82:	88 23       	and	r24, r24
     e84:	4a f0       	brmi	.+18     	; 0xe98 <__mulsf3_pse+0x7a>
     e86:	ee 0f       	add	r30, r30
     e88:	ff 1f       	adc	r31, r31
     e8a:	bb 1f       	adc	r27, r27
     e8c:	66 1f       	adc	r22, r22
     e8e:	77 1f       	adc	r23, r23
     e90:	88 1f       	adc	r24, r24
     e92:	91 50       	subi	r25, 0x01	; 1
     e94:	50 40       	sbci	r21, 0x00	; 0
     e96:	a9 f7       	brne	.-22     	; 0xe82 <__mulsf3_pse+0x64>
     e98:	9e 3f       	cpi	r25, 0xFE	; 254
     e9a:	51 05       	cpc	r21, r1
     e9c:	70 f0       	brcs	.+28     	; 0xeba <__mulsf3_pse+0x9c>
     e9e:	60 cf       	rjmp	.-320    	; 0xd60 <__fp_inf>
     ea0:	aa cf       	rjmp	.-172    	; 0xdf6 <__fp_szero>
     ea2:	5f 3f       	cpi	r21, 0xFF	; 255
     ea4:	ec f3       	brlt	.-6      	; 0xea0 <__mulsf3_pse+0x82>
     ea6:	98 3e       	cpi	r25, 0xE8	; 232
     ea8:	dc f3       	brlt	.-10     	; 0xea0 <__mulsf3_pse+0x82>
     eaa:	86 95       	lsr	r24
     eac:	77 95       	ror	r23
     eae:	67 95       	ror	r22
     eb0:	b7 95       	ror	r27
     eb2:	f7 95       	ror	r31
     eb4:	e7 95       	ror	r30
     eb6:	9f 5f       	subi	r25, 0xFF	; 255
     eb8:	c1 f7       	brne	.-16     	; 0xeaa <__mulsf3_pse+0x8c>
     eba:	fe 2b       	or	r31, r30
     ebc:	88 0f       	add	r24, r24
     ebe:	91 1d       	adc	r25, r1
     ec0:	96 95       	lsr	r25
     ec2:	87 95       	ror	r24
     ec4:	97 f9       	bld	r25, 7
     ec6:	08 95       	ret

00000ec8 <vfprintf>:
     ec8:	2f 92       	push	r2
     eca:	3f 92       	push	r3
     ecc:	4f 92       	push	r4
     ece:	5f 92       	push	r5
     ed0:	6f 92       	push	r6
     ed2:	7f 92       	push	r7
     ed4:	8f 92       	push	r8
     ed6:	9f 92       	push	r9
     ed8:	af 92       	push	r10
     eda:	bf 92       	push	r11
     edc:	cf 92       	push	r12
     ede:	df 92       	push	r13
     ee0:	ef 92       	push	r14
     ee2:	ff 92       	push	r15
     ee4:	0f 93       	push	r16
     ee6:	1f 93       	push	r17
     ee8:	cf 93       	push	r28
     eea:	df 93       	push	r29
     eec:	cd b7       	in	r28, 0x3d	; 61
     eee:	de b7       	in	r29, 0x3e	; 62
     ef0:	60 97       	sbiw	r28, 0x10	; 16
     ef2:	0f b6       	in	r0, 0x3f	; 63
     ef4:	f8 94       	cli
     ef6:	de bf       	out	0x3e, r29	; 62
     ef8:	0f be       	out	0x3f, r0	; 63
     efa:	cd bf       	out	0x3d, r28	; 61
     efc:	7c 01       	movw	r14, r24
     efe:	1b 01       	movw	r2, r22
     f00:	6a 01       	movw	r12, r20
     f02:	fc 01       	movw	r30, r24
     f04:	17 82       	std	Z+7, r1	; 0x07
     f06:	16 82       	std	Z+6, r1	; 0x06
     f08:	83 81       	ldd	r24, Z+3	; 0x03
     f0a:	81 ff       	sbrs	r24, 1
     f0c:	2a c3       	rjmp	.+1620   	; 0x1562 <__EEPROM_REGION_LENGTH__+0x562>
     f0e:	9e 01       	movw	r18, r28
     f10:	2f 5f       	subi	r18, 0xFF	; 255
     f12:	3f 4f       	sbci	r19, 0xFF	; 255
     f14:	39 01       	movw	r6, r18
     f16:	f7 01       	movw	r30, r14
     f18:	93 81       	ldd	r25, Z+3	; 0x03
     f1a:	f1 01       	movw	r30, r2
     f1c:	93 fd       	sbrc	r25, 3
     f1e:	85 91       	lpm	r24, Z+
     f20:	93 ff       	sbrs	r25, 3
     f22:	81 91       	ld	r24, Z+
     f24:	1f 01       	movw	r2, r30
     f26:	88 23       	and	r24, r24
     f28:	09 f4       	brne	.+2      	; 0xf2c <vfprintf+0x64>
     f2a:	17 c3       	rjmp	.+1582   	; 0x155a <__EEPROM_REGION_LENGTH__+0x55a>
     f2c:	85 32       	cpi	r24, 0x25	; 37
     f2e:	39 f4       	brne	.+14     	; 0xf3e <vfprintf+0x76>
     f30:	93 fd       	sbrc	r25, 3
     f32:	85 91       	lpm	r24, Z+
     f34:	93 ff       	sbrs	r25, 3
     f36:	81 91       	ld	r24, Z+
     f38:	1f 01       	movw	r2, r30
     f3a:	85 32       	cpi	r24, 0x25	; 37
     f3c:	31 f4       	brne	.+12     	; 0xf4a <vfprintf+0x82>
     f3e:	b7 01       	movw	r22, r14
     f40:	90 e0       	ldi	r25, 0x00	; 0
     f42:	68 d4       	rcall	.+2256   	; 0x1814 <fputc>
     f44:	56 01       	movw	r10, r12
     f46:	65 01       	movw	r12, r10
     f48:	e6 cf       	rjmp	.-52     	; 0xf16 <vfprintf+0x4e>
     f4a:	10 e0       	ldi	r17, 0x00	; 0
     f4c:	51 2c       	mov	r5, r1
     f4e:	91 2c       	mov	r9, r1
     f50:	ff e1       	ldi	r31, 0x1F	; 31
     f52:	f9 15       	cp	r31, r9
     f54:	d8 f0       	brcs	.+54     	; 0xf8c <vfprintf+0xc4>
     f56:	8b 32       	cpi	r24, 0x2B	; 43
     f58:	79 f0       	breq	.+30     	; 0xf78 <vfprintf+0xb0>
     f5a:	38 f4       	brcc	.+14     	; 0xf6a <vfprintf+0xa2>
     f5c:	80 32       	cpi	r24, 0x20	; 32
     f5e:	79 f0       	breq	.+30     	; 0xf7e <vfprintf+0xb6>
     f60:	83 32       	cpi	r24, 0x23	; 35
     f62:	a1 f4       	brne	.+40     	; 0xf8c <vfprintf+0xc4>
     f64:	f9 2d       	mov	r31, r9
     f66:	f0 61       	ori	r31, 0x10	; 16
     f68:	2e c0       	rjmp	.+92     	; 0xfc6 <vfprintf+0xfe>
     f6a:	8d 32       	cpi	r24, 0x2D	; 45
     f6c:	61 f0       	breq	.+24     	; 0xf86 <vfprintf+0xbe>
     f6e:	80 33       	cpi	r24, 0x30	; 48
     f70:	69 f4       	brne	.+26     	; 0xf8c <vfprintf+0xc4>
     f72:	29 2d       	mov	r18, r9
     f74:	21 60       	ori	r18, 0x01	; 1
     f76:	2d c0       	rjmp	.+90     	; 0xfd2 <vfprintf+0x10a>
     f78:	39 2d       	mov	r19, r9
     f7a:	32 60       	ori	r19, 0x02	; 2
     f7c:	93 2e       	mov	r9, r19
     f7e:	89 2d       	mov	r24, r9
     f80:	84 60       	ori	r24, 0x04	; 4
     f82:	98 2e       	mov	r9, r24
     f84:	2a c0       	rjmp	.+84     	; 0xfda <vfprintf+0x112>
     f86:	e9 2d       	mov	r30, r9
     f88:	e8 60       	ori	r30, 0x08	; 8
     f8a:	15 c0       	rjmp	.+42     	; 0xfb6 <vfprintf+0xee>
     f8c:	97 fc       	sbrc	r9, 7
     f8e:	2d c0       	rjmp	.+90     	; 0xfea <vfprintf+0x122>
     f90:	20 ed       	ldi	r18, 0xD0	; 208
     f92:	28 0f       	add	r18, r24
     f94:	2a 30       	cpi	r18, 0x0A	; 10
     f96:	88 f4       	brcc	.+34     	; 0xfba <vfprintf+0xf2>
     f98:	96 fe       	sbrs	r9, 6
     f9a:	06 c0       	rjmp	.+12     	; 0xfa8 <vfprintf+0xe0>
     f9c:	3a e0       	ldi	r19, 0x0A	; 10
     f9e:	13 9f       	mul	r17, r19
     fa0:	20 0d       	add	r18, r0
     fa2:	11 24       	eor	r1, r1
     fa4:	12 2f       	mov	r17, r18
     fa6:	19 c0       	rjmp	.+50     	; 0xfda <vfprintf+0x112>
     fa8:	8a e0       	ldi	r24, 0x0A	; 10
     faa:	58 9e       	mul	r5, r24
     fac:	20 0d       	add	r18, r0
     fae:	11 24       	eor	r1, r1
     fb0:	52 2e       	mov	r5, r18
     fb2:	e9 2d       	mov	r30, r9
     fb4:	e0 62       	ori	r30, 0x20	; 32
     fb6:	9e 2e       	mov	r9, r30
     fb8:	10 c0       	rjmp	.+32     	; 0xfda <vfprintf+0x112>
     fba:	8e 32       	cpi	r24, 0x2E	; 46
     fbc:	31 f4       	brne	.+12     	; 0xfca <vfprintf+0x102>
     fbe:	96 fc       	sbrc	r9, 6
     fc0:	cc c2       	rjmp	.+1432   	; 0x155a <__EEPROM_REGION_LENGTH__+0x55a>
     fc2:	f9 2d       	mov	r31, r9
     fc4:	f0 64       	ori	r31, 0x40	; 64
     fc6:	9f 2e       	mov	r9, r31
     fc8:	08 c0       	rjmp	.+16     	; 0xfda <vfprintf+0x112>
     fca:	8c 36       	cpi	r24, 0x6C	; 108
     fcc:	21 f4       	brne	.+8      	; 0xfd6 <vfprintf+0x10e>
     fce:	29 2d       	mov	r18, r9
     fd0:	20 68       	ori	r18, 0x80	; 128
     fd2:	92 2e       	mov	r9, r18
     fd4:	02 c0       	rjmp	.+4      	; 0xfda <vfprintf+0x112>
     fd6:	88 36       	cpi	r24, 0x68	; 104
     fd8:	41 f4       	brne	.+16     	; 0xfea <vfprintf+0x122>
     fda:	f1 01       	movw	r30, r2
     fdc:	93 fd       	sbrc	r25, 3
     fde:	85 91       	lpm	r24, Z+
     fe0:	93 ff       	sbrs	r25, 3
     fe2:	81 91       	ld	r24, Z+
     fe4:	1f 01       	movw	r2, r30
     fe6:	81 11       	cpse	r24, r1
     fe8:	b3 cf       	rjmp	.-154    	; 0xf50 <vfprintf+0x88>
     fea:	9b eb       	ldi	r25, 0xBB	; 187
     fec:	98 0f       	add	r25, r24
     fee:	93 30       	cpi	r25, 0x03	; 3
     ff0:	20 f4       	brcc	.+8      	; 0xffa <vfprintf+0x132>
     ff2:	99 2d       	mov	r25, r9
     ff4:	90 61       	ori	r25, 0x10	; 16
     ff6:	80 5e       	subi	r24, 0xE0	; 224
     ff8:	07 c0       	rjmp	.+14     	; 0x1008 <__EEPROM_REGION_LENGTH__+0x8>
     ffa:	9b e9       	ldi	r25, 0x9B	; 155
     ffc:	98 0f       	add	r25, r24
     ffe:	93 30       	cpi	r25, 0x03	; 3
    1000:	08 f0       	brcs	.+2      	; 0x1004 <__EEPROM_REGION_LENGTH__+0x4>
    1002:	59 c1       	rjmp	.+690    	; 0x12b6 <__EEPROM_REGION_LENGTH__+0x2b6>
    1004:	99 2d       	mov	r25, r9
    1006:	9f 7e       	andi	r25, 0xEF	; 239
    1008:	96 ff       	sbrs	r25, 6
    100a:	16 e0       	ldi	r17, 0x06	; 6
    100c:	9f 73       	andi	r25, 0x3F	; 63
    100e:	99 2e       	mov	r9, r25
    1010:	85 36       	cpi	r24, 0x65	; 101
    1012:	19 f4       	brne	.+6      	; 0x101a <__EEPROM_REGION_LENGTH__+0x1a>
    1014:	90 64       	ori	r25, 0x40	; 64
    1016:	99 2e       	mov	r9, r25
    1018:	08 c0       	rjmp	.+16     	; 0x102a <__EEPROM_REGION_LENGTH__+0x2a>
    101a:	86 36       	cpi	r24, 0x66	; 102
    101c:	21 f4       	brne	.+8      	; 0x1026 <__EEPROM_REGION_LENGTH__+0x26>
    101e:	39 2f       	mov	r19, r25
    1020:	30 68       	ori	r19, 0x80	; 128
    1022:	93 2e       	mov	r9, r19
    1024:	02 c0       	rjmp	.+4      	; 0x102a <__EEPROM_REGION_LENGTH__+0x2a>
    1026:	11 11       	cpse	r17, r1
    1028:	11 50       	subi	r17, 0x01	; 1
    102a:	97 fe       	sbrs	r9, 7
    102c:	07 c0       	rjmp	.+14     	; 0x103c <__EEPROM_REGION_LENGTH__+0x3c>
    102e:	1c 33       	cpi	r17, 0x3C	; 60
    1030:	50 f4       	brcc	.+20     	; 0x1046 <__EEPROM_REGION_LENGTH__+0x46>
    1032:	44 24       	eor	r4, r4
    1034:	43 94       	inc	r4
    1036:	41 0e       	add	r4, r17
    1038:	27 e0       	ldi	r18, 0x07	; 7
    103a:	0b c0       	rjmp	.+22     	; 0x1052 <__EEPROM_REGION_LENGTH__+0x52>
    103c:	18 30       	cpi	r17, 0x08	; 8
    103e:	38 f0       	brcs	.+14     	; 0x104e <__EEPROM_REGION_LENGTH__+0x4e>
    1040:	27 e0       	ldi	r18, 0x07	; 7
    1042:	17 e0       	ldi	r17, 0x07	; 7
    1044:	05 c0       	rjmp	.+10     	; 0x1050 <__EEPROM_REGION_LENGTH__+0x50>
    1046:	27 e0       	ldi	r18, 0x07	; 7
    1048:	9c e3       	ldi	r25, 0x3C	; 60
    104a:	49 2e       	mov	r4, r25
    104c:	02 c0       	rjmp	.+4      	; 0x1052 <__EEPROM_REGION_LENGTH__+0x52>
    104e:	21 2f       	mov	r18, r17
    1050:	41 2c       	mov	r4, r1
    1052:	56 01       	movw	r10, r12
    1054:	84 e0       	ldi	r24, 0x04	; 4
    1056:	a8 0e       	add	r10, r24
    1058:	b1 1c       	adc	r11, r1
    105a:	f6 01       	movw	r30, r12
    105c:	60 81       	ld	r22, Z
    105e:	71 81       	ldd	r23, Z+1	; 0x01
    1060:	82 81       	ldd	r24, Z+2	; 0x02
    1062:	93 81       	ldd	r25, Z+3	; 0x03
    1064:	04 2d       	mov	r16, r4
    1066:	a3 01       	movw	r20, r6
    1068:	e7 d2       	rcall	.+1486   	; 0x1638 <__ftoa_engine>
    106a:	6c 01       	movw	r12, r24
    106c:	f9 81       	ldd	r31, Y+1	; 0x01
    106e:	fc 87       	std	Y+12, r31	; 0x0c
    1070:	f0 ff       	sbrs	r31, 0
    1072:	02 c0       	rjmp	.+4      	; 0x1078 <__EEPROM_REGION_LENGTH__+0x78>
    1074:	f3 ff       	sbrs	r31, 3
    1076:	06 c0       	rjmp	.+12     	; 0x1084 <__EEPROM_REGION_LENGTH__+0x84>
    1078:	91 fc       	sbrc	r9, 1
    107a:	06 c0       	rjmp	.+12     	; 0x1088 <__EEPROM_REGION_LENGTH__+0x88>
    107c:	92 fe       	sbrs	r9, 2
    107e:	06 c0       	rjmp	.+12     	; 0x108c <__EEPROM_REGION_LENGTH__+0x8c>
    1080:	00 e2       	ldi	r16, 0x20	; 32
    1082:	05 c0       	rjmp	.+10     	; 0x108e <__EEPROM_REGION_LENGTH__+0x8e>
    1084:	0d e2       	ldi	r16, 0x2D	; 45
    1086:	03 c0       	rjmp	.+6      	; 0x108e <__EEPROM_REGION_LENGTH__+0x8e>
    1088:	0b e2       	ldi	r16, 0x2B	; 43
    108a:	01 c0       	rjmp	.+2      	; 0x108e <__EEPROM_REGION_LENGTH__+0x8e>
    108c:	00 e0       	ldi	r16, 0x00	; 0
    108e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1090:	8c 70       	andi	r24, 0x0C	; 12
    1092:	19 f0       	breq	.+6      	; 0x109a <__EEPROM_REGION_LENGTH__+0x9a>
    1094:	01 11       	cpse	r16, r1
    1096:	43 c2       	rjmp	.+1158   	; 0x151e <__EEPROM_REGION_LENGTH__+0x51e>
    1098:	80 c2       	rjmp	.+1280   	; 0x159a <__EEPROM_REGION_LENGTH__+0x59a>
    109a:	97 fe       	sbrs	r9, 7
    109c:	10 c0       	rjmp	.+32     	; 0x10be <__EEPROM_REGION_LENGTH__+0xbe>
    109e:	4c 0c       	add	r4, r12
    10a0:	fc 85       	ldd	r31, Y+12	; 0x0c
    10a2:	f4 ff       	sbrs	r31, 4
    10a4:	04 c0       	rjmp	.+8      	; 0x10ae <__EEPROM_REGION_LENGTH__+0xae>
    10a6:	8a 81       	ldd	r24, Y+2	; 0x02
    10a8:	81 33       	cpi	r24, 0x31	; 49
    10aa:	09 f4       	brne	.+2      	; 0x10ae <__EEPROM_REGION_LENGTH__+0xae>
    10ac:	4a 94       	dec	r4
    10ae:	14 14       	cp	r1, r4
    10b0:	74 f5       	brge	.+92     	; 0x110e <__EEPROM_REGION_LENGTH__+0x10e>
    10b2:	28 e0       	ldi	r18, 0x08	; 8
    10b4:	24 15       	cp	r18, r4
    10b6:	78 f5       	brcc	.+94     	; 0x1116 <__EEPROM_REGION_LENGTH__+0x116>
    10b8:	88 e0       	ldi	r24, 0x08	; 8
    10ba:	48 2e       	mov	r4, r24
    10bc:	2c c0       	rjmp	.+88     	; 0x1116 <__EEPROM_REGION_LENGTH__+0x116>
    10be:	96 fc       	sbrc	r9, 6
    10c0:	2a c0       	rjmp	.+84     	; 0x1116 <__EEPROM_REGION_LENGTH__+0x116>
    10c2:	81 2f       	mov	r24, r17
    10c4:	90 e0       	ldi	r25, 0x00	; 0
    10c6:	8c 15       	cp	r24, r12
    10c8:	9d 05       	cpc	r25, r13
    10ca:	9c f0       	brlt	.+38     	; 0x10f2 <__EEPROM_REGION_LENGTH__+0xf2>
    10cc:	3c ef       	ldi	r19, 0xFC	; 252
    10ce:	c3 16       	cp	r12, r19
    10d0:	3f ef       	ldi	r19, 0xFF	; 255
    10d2:	d3 06       	cpc	r13, r19
    10d4:	74 f0       	brlt	.+28     	; 0x10f2 <__EEPROM_REGION_LENGTH__+0xf2>
    10d6:	89 2d       	mov	r24, r9
    10d8:	80 68       	ori	r24, 0x80	; 128
    10da:	98 2e       	mov	r9, r24
    10dc:	0a c0       	rjmp	.+20     	; 0x10f2 <__EEPROM_REGION_LENGTH__+0xf2>
    10de:	e2 e0       	ldi	r30, 0x02	; 2
    10e0:	f0 e0       	ldi	r31, 0x00	; 0
    10e2:	ec 0f       	add	r30, r28
    10e4:	fd 1f       	adc	r31, r29
    10e6:	e1 0f       	add	r30, r17
    10e8:	f1 1d       	adc	r31, r1
    10ea:	80 81       	ld	r24, Z
    10ec:	80 33       	cpi	r24, 0x30	; 48
    10ee:	19 f4       	brne	.+6      	; 0x10f6 <__EEPROM_REGION_LENGTH__+0xf6>
    10f0:	11 50       	subi	r17, 0x01	; 1
    10f2:	11 11       	cpse	r17, r1
    10f4:	f4 cf       	rjmp	.-24     	; 0x10de <__EEPROM_REGION_LENGTH__+0xde>
    10f6:	97 fe       	sbrs	r9, 7
    10f8:	0e c0       	rjmp	.+28     	; 0x1116 <__EEPROM_REGION_LENGTH__+0x116>
    10fa:	44 24       	eor	r4, r4
    10fc:	43 94       	inc	r4
    10fe:	41 0e       	add	r4, r17
    1100:	81 2f       	mov	r24, r17
    1102:	90 e0       	ldi	r25, 0x00	; 0
    1104:	c8 16       	cp	r12, r24
    1106:	d9 06       	cpc	r13, r25
    1108:	2c f4       	brge	.+10     	; 0x1114 <__EEPROM_REGION_LENGTH__+0x114>
    110a:	1c 19       	sub	r17, r12
    110c:	04 c0       	rjmp	.+8      	; 0x1116 <__EEPROM_REGION_LENGTH__+0x116>
    110e:	44 24       	eor	r4, r4
    1110:	43 94       	inc	r4
    1112:	01 c0       	rjmp	.+2      	; 0x1116 <__EEPROM_REGION_LENGTH__+0x116>
    1114:	10 e0       	ldi	r17, 0x00	; 0
    1116:	97 fe       	sbrs	r9, 7
    1118:	06 c0       	rjmp	.+12     	; 0x1126 <__EEPROM_REGION_LENGTH__+0x126>
    111a:	1c 14       	cp	r1, r12
    111c:	1d 04       	cpc	r1, r13
    111e:	34 f4       	brge	.+12     	; 0x112c <__EEPROM_REGION_LENGTH__+0x12c>
    1120:	c6 01       	movw	r24, r12
    1122:	01 96       	adiw	r24, 0x01	; 1
    1124:	05 c0       	rjmp	.+10     	; 0x1130 <__EEPROM_REGION_LENGTH__+0x130>
    1126:	85 e0       	ldi	r24, 0x05	; 5
    1128:	90 e0       	ldi	r25, 0x00	; 0
    112a:	02 c0       	rjmp	.+4      	; 0x1130 <__EEPROM_REGION_LENGTH__+0x130>
    112c:	81 e0       	ldi	r24, 0x01	; 1
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	01 11       	cpse	r16, r1
    1132:	01 96       	adiw	r24, 0x01	; 1
    1134:	11 23       	and	r17, r17
    1136:	31 f0       	breq	.+12     	; 0x1144 <__EEPROM_REGION_LENGTH__+0x144>
    1138:	21 2f       	mov	r18, r17
    113a:	30 e0       	ldi	r19, 0x00	; 0
    113c:	2f 5f       	subi	r18, 0xFF	; 255
    113e:	3f 4f       	sbci	r19, 0xFF	; 255
    1140:	82 0f       	add	r24, r18
    1142:	93 1f       	adc	r25, r19
    1144:	25 2d       	mov	r18, r5
    1146:	30 e0       	ldi	r19, 0x00	; 0
    1148:	82 17       	cp	r24, r18
    114a:	93 07       	cpc	r25, r19
    114c:	14 f4       	brge	.+4      	; 0x1152 <__EEPROM_REGION_LENGTH__+0x152>
    114e:	58 1a       	sub	r5, r24
    1150:	01 c0       	rjmp	.+2      	; 0x1154 <__EEPROM_REGION_LENGTH__+0x154>
    1152:	51 2c       	mov	r5, r1
    1154:	89 2d       	mov	r24, r9
    1156:	89 70       	andi	r24, 0x09	; 9
    1158:	41 f4       	brne	.+16     	; 0x116a <__EEPROM_REGION_LENGTH__+0x16a>
    115a:	55 20       	and	r5, r5
    115c:	31 f0       	breq	.+12     	; 0x116a <__EEPROM_REGION_LENGTH__+0x16a>
    115e:	b7 01       	movw	r22, r14
    1160:	80 e2       	ldi	r24, 0x20	; 32
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	57 d3       	rcall	.+1710   	; 0x1814 <fputc>
    1166:	5a 94       	dec	r5
    1168:	f8 cf       	rjmp	.-16     	; 0x115a <__EEPROM_REGION_LENGTH__+0x15a>
    116a:	00 23       	and	r16, r16
    116c:	21 f0       	breq	.+8      	; 0x1176 <__EEPROM_REGION_LENGTH__+0x176>
    116e:	b7 01       	movw	r22, r14
    1170:	80 2f       	mov	r24, r16
    1172:	90 e0       	ldi	r25, 0x00	; 0
    1174:	4f d3       	rcall	.+1694   	; 0x1814 <fputc>
    1176:	93 fc       	sbrc	r9, 3
    1178:	08 c0       	rjmp	.+16     	; 0x118a <__EEPROM_REGION_LENGTH__+0x18a>
    117a:	55 20       	and	r5, r5
    117c:	31 f0       	breq	.+12     	; 0x118a <__EEPROM_REGION_LENGTH__+0x18a>
    117e:	b7 01       	movw	r22, r14
    1180:	80 e3       	ldi	r24, 0x30	; 48
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	47 d3       	rcall	.+1678   	; 0x1814 <fputc>
    1186:	5a 94       	dec	r5
    1188:	f8 cf       	rjmp	.-16     	; 0x117a <__EEPROM_REGION_LENGTH__+0x17a>
    118a:	97 fe       	sbrs	r9, 7
    118c:	4a c0       	rjmp	.+148    	; 0x1222 <__EEPROM_REGION_LENGTH__+0x222>
    118e:	46 01       	movw	r8, r12
    1190:	d7 fe       	sbrs	r13, 7
    1192:	02 c0       	rjmp	.+4      	; 0x1198 <__EEPROM_REGION_LENGTH__+0x198>
    1194:	81 2c       	mov	r8, r1
    1196:	91 2c       	mov	r9, r1
    1198:	c6 01       	movw	r24, r12
    119a:	88 19       	sub	r24, r8
    119c:	99 09       	sbc	r25, r9
    119e:	f3 01       	movw	r30, r6
    11a0:	e8 0f       	add	r30, r24
    11a2:	f9 1f       	adc	r31, r25
    11a4:	fe 87       	std	Y+14, r31	; 0x0e
    11a6:	ed 87       	std	Y+13, r30	; 0x0d
    11a8:	96 01       	movw	r18, r12
    11aa:	24 19       	sub	r18, r4
    11ac:	31 09       	sbc	r19, r1
    11ae:	38 8b       	std	Y+16, r19	; 0x10
    11b0:	2f 87       	std	Y+15, r18	; 0x0f
    11b2:	01 2f       	mov	r16, r17
    11b4:	10 e0       	ldi	r17, 0x00	; 0
    11b6:	11 95       	neg	r17
    11b8:	01 95       	neg	r16
    11ba:	11 09       	sbc	r17, r1
    11bc:	3f ef       	ldi	r19, 0xFF	; 255
    11be:	83 16       	cp	r8, r19
    11c0:	93 06       	cpc	r9, r19
    11c2:	21 f4       	brne	.+8      	; 0x11cc <__EEPROM_REGION_LENGTH__+0x1cc>
    11c4:	b7 01       	movw	r22, r14
    11c6:	8e e2       	ldi	r24, 0x2E	; 46
    11c8:	90 e0       	ldi	r25, 0x00	; 0
    11ca:	24 d3       	rcall	.+1608   	; 0x1814 <fputc>
    11cc:	c8 14       	cp	r12, r8
    11ce:	d9 04       	cpc	r13, r9
    11d0:	4c f0       	brlt	.+18     	; 0x11e4 <__EEPROM_REGION_LENGTH__+0x1e4>
    11d2:	8f 85       	ldd	r24, Y+15	; 0x0f
    11d4:	98 89       	ldd	r25, Y+16	; 0x10
    11d6:	88 15       	cp	r24, r8
    11d8:	99 05       	cpc	r25, r9
    11da:	24 f4       	brge	.+8      	; 0x11e4 <__EEPROM_REGION_LENGTH__+0x1e4>
    11dc:	ed 85       	ldd	r30, Y+13	; 0x0d
    11de:	fe 85       	ldd	r31, Y+14	; 0x0e
    11e0:	81 81       	ldd	r24, Z+1	; 0x01
    11e2:	01 c0       	rjmp	.+2      	; 0x11e6 <__EEPROM_REGION_LENGTH__+0x1e6>
    11e4:	80 e3       	ldi	r24, 0x30	; 48
    11e6:	f1 e0       	ldi	r31, 0x01	; 1
    11e8:	8f 1a       	sub	r8, r31
    11ea:	91 08       	sbc	r9, r1
    11ec:	2d 85       	ldd	r18, Y+13	; 0x0d
    11ee:	3e 85       	ldd	r19, Y+14	; 0x0e
    11f0:	2f 5f       	subi	r18, 0xFF	; 255
    11f2:	3f 4f       	sbci	r19, 0xFF	; 255
    11f4:	3e 87       	std	Y+14, r19	; 0x0e
    11f6:	2d 87       	std	Y+13, r18	; 0x0d
    11f8:	80 16       	cp	r8, r16
    11fa:	91 06       	cpc	r9, r17
    11fc:	24 f0       	brlt	.+8      	; 0x1206 <__EEPROM_REGION_LENGTH__+0x206>
    11fe:	b7 01       	movw	r22, r14
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	08 d3       	rcall	.+1552   	; 0x1814 <fputc>
    1204:	db cf       	rjmp	.-74     	; 0x11bc <__EEPROM_REGION_LENGTH__+0x1bc>
    1206:	c8 14       	cp	r12, r8
    1208:	d9 04       	cpc	r13, r9
    120a:	41 f4       	brne	.+16     	; 0x121c <__EEPROM_REGION_LENGTH__+0x21c>
    120c:	9a 81       	ldd	r25, Y+2	; 0x02
    120e:	96 33       	cpi	r25, 0x36	; 54
    1210:	20 f4       	brcc	.+8      	; 0x121a <__EEPROM_REGION_LENGTH__+0x21a>
    1212:	95 33       	cpi	r25, 0x35	; 53
    1214:	19 f4       	brne	.+6      	; 0x121c <__EEPROM_REGION_LENGTH__+0x21c>
    1216:	3c 85       	ldd	r19, Y+12	; 0x0c
    1218:	34 ff       	sbrs	r19, 4
    121a:	81 e3       	ldi	r24, 0x31	; 49
    121c:	b7 01       	movw	r22, r14
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	48 c0       	rjmp	.+144    	; 0x12b2 <__EEPROM_REGION_LENGTH__+0x2b2>
    1222:	8a 81       	ldd	r24, Y+2	; 0x02
    1224:	81 33       	cpi	r24, 0x31	; 49
    1226:	19 f0       	breq	.+6      	; 0x122e <__EEPROM_REGION_LENGTH__+0x22e>
    1228:	9c 85       	ldd	r25, Y+12	; 0x0c
    122a:	9f 7e       	andi	r25, 0xEF	; 239
    122c:	9c 87       	std	Y+12, r25	; 0x0c
    122e:	b7 01       	movw	r22, r14
    1230:	90 e0       	ldi	r25, 0x00	; 0
    1232:	f0 d2       	rcall	.+1504   	; 0x1814 <fputc>
    1234:	11 11       	cpse	r17, r1
    1236:	05 c0       	rjmp	.+10     	; 0x1242 <__EEPROM_REGION_LENGTH__+0x242>
    1238:	94 fc       	sbrc	r9, 4
    123a:	16 c0       	rjmp	.+44     	; 0x1268 <__EEPROM_REGION_LENGTH__+0x268>
    123c:	85 e6       	ldi	r24, 0x65	; 101
    123e:	90 e0       	ldi	r25, 0x00	; 0
    1240:	15 c0       	rjmp	.+42     	; 0x126c <__EEPROM_REGION_LENGTH__+0x26c>
    1242:	b7 01       	movw	r22, r14
    1244:	8e e2       	ldi	r24, 0x2E	; 46
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	e5 d2       	rcall	.+1482   	; 0x1814 <fputc>
    124a:	1e 5f       	subi	r17, 0xFE	; 254
    124c:	82 e0       	ldi	r24, 0x02	; 2
    124e:	01 e0       	ldi	r16, 0x01	; 1
    1250:	08 0f       	add	r16, r24
    1252:	f3 01       	movw	r30, r6
    1254:	e8 0f       	add	r30, r24
    1256:	f1 1d       	adc	r31, r1
    1258:	80 81       	ld	r24, Z
    125a:	b7 01       	movw	r22, r14
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	da d2       	rcall	.+1460   	; 0x1814 <fputc>
    1260:	80 2f       	mov	r24, r16
    1262:	01 13       	cpse	r16, r17
    1264:	f4 cf       	rjmp	.-24     	; 0x124e <__EEPROM_REGION_LENGTH__+0x24e>
    1266:	e8 cf       	rjmp	.-48     	; 0x1238 <__EEPROM_REGION_LENGTH__+0x238>
    1268:	85 e4       	ldi	r24, 0x45	; 69
    126a:	90 e0       	ldi	r25, 0x00	; 0
    126c:	b7 01       	movw	r22, r14
    126e:	d2 d2       	rcall	.+1444   	; 0x1814 <fputc>
    1270:	d7 fc       	sbrc	r13, 7
    1272:	06 c0       	rjmp	.+12     	; 0x1280 <__EEPROM_REGION_LENGTH__+0x280>
    1274:	c1 14       	cp	r12, r1
    1276:	d1 04       	cpc	r13, r1
    1278:	41 f4       	brne	.+16     	; 0x128a <__EEPROM_REGION_LENGTH__+0x28a>
    127a:	ec 85       	ldd	r30, Y+12	; 0x0c
    127c:	e4 ff       	sbrs	r30, 4
    127e:	05 c0       	rjmp	.+10     	; 0x128a <__EEPROM_REGION_LENGTH__+0x28a>
    1280:	d1 94       	neg	r13
    1282:	c1 94       	neg	r12
    1284:	d1 08       	sbc	r13, r1
    1286:	8d e2       	ldi	r24, 0x2D	; 45
    1288:	01 c0       	rjmp	.+2      	; 0x128c <__EEPROM_REGION_LENGTH__+0x28c>
    128a:	8b e2       	ldi	r24, 0x2B	; 43
    128c:	b7 01       	movw	r22, r14
    128e:	90 e0       	ldi	r25, 0x00	; 0
    1290:	c1 d2       	rcall	.+1410   	; 0x1814 <fputc>
    1292:	80 e3       	ldi	r24, 0x30	; 48
    1294:	2a e0       	ldi	r18, 0x0A	; 10
    1296:	c2 16       	cp	r12, r18
    1298:	d1 04       	cpc	r13, r1
    129a:	2c f0       	brlt	.+10     	; 0x12a6 <__EEPROM_REGION_LENGTH__+0x2a6>
    129c:	8f 5f       	subi	r24, 0xFF	; 255
    129e:	fa e0       	ldi	r31, 0x0A	; 10
    12a0:	cf 1a       	sub	r12, r31
    12a2:	d1 08       	sbc	r13, r1
    12a4:	f7 cf       	rjmp	.-18     	; 0x1294 <__EEPROM_REGION_LENGTH__+0x294>
    12a6:	b7 01       	movw	r22, r14
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	b4 d2       	rcall	.+1384   	; 0x1814 <fputc>
    12ac:	b7 01       	movw	r22, r14
    12ae:	c6 01       	movw	r24, r12
    12b0:	c0 96       	adiw	r24, 0x30	; 48
    12b2:	b0 d2       	rcall	.+1376   	; 0x1814 <fputc>
    12b4:	49 c1       	rjmp	.+658    	; 0x1548 <__EEPROM_REGION_LENGTH__+0x548>
    12b6:	83 36       	cpi	r24, 0x63	; 99
    12b8:	31 f0       	breq	.+12     	; 0x12c6 <__EEPROM_REGION_LENGTH__+0x2c6>
    12ba:	83 37       	cpi	r24, 0x73	; 115
    12bc:	79 f0       	breq	.+30     	; 0x12dc <__EEPROM_REGION_LENGTH__+0x2dc>
    12be:	83 35       	cpi	r24, 0x53	; 83
    12c0:	09 f0       	breq	.+2      	; 0x12c4 <__EEPROM_REGION_LENGTH__+0x2c4>
    12c2:	52 c0       	rjmp	.+164    	; 0x1368 <__EEPROM_REGION_LENGTH__+0x368>
    12c4:	1f c0       	rjmp	.+62     	; 0x1304 <__EEPROM_REGION_LENGTH__+0x304>
    12c6:	56 01       	movw	r10, r12
    12c8:	32 e0       	ldi	r19, 0x02	; 2
    12ca:	a3 0e       	add	r10, r19
    12cc:	b1 1c       	adc	r11, r1
    12ce:	f6 01       	movw	r30, r12
    12d0:	80 81       	ld	r24, Z
    12d2:	89 83       	std	Y+1, r24	; 0x01
    12d4:	01 e0       	ldi	r16, 0x01	; 1
    12d6:	10 e0       	ldi	r17, 0x00	; 0
    12d8:	63 01       	movw	r12, r6
    12da:	11 c0       	rjmp	.+34     	; 0x12fe <__EEPROM_REGION_LENGTH__+0x2fe>
    12dc:	56 01       	movw	r10, r12
    12de:	f2 e0       	ldi	r31, 0x02	; 2
    12e0:	af 0e       	add	r10, r31
    12e2:	b1 1c       	adc	r11, r1
    12e4:	f6 01       	movw	r30, r12
    12e6:	c0 80       	ld	r12, Z
    12e8:	d1 80       	ldd	r13, Z+1	; 0x01
    12ea:	96 fe       	sbrs	r9, 6
    12ec:	03 c0       	rjmp	.+6      	; 0x12f4 <__EEPROM_REGION_LENGTH__+0x2f4>
    12ee:	61 2f       	mov	r22, r17
    12f0:	70 e0       	ldi	r23, 0x00	; 0
    12f2:	02 c0       	rjmp	.+4      	; 0x12f8 <__EEPROM_REGION_LENGTH__+0x2f8>
    12f4:	6f ef       	ldi	r22, 0xFF	; 255
    12f6:	7f ef       	ldi	r23, 0xFF	; 255
    12f8:	c6 01       	movw	r24, r12
    12fa:	81 d2       	rcall	.+1282   	; 0x17fe <strnlen>
    12fc:	8c 01       	movw	r16, r24
    12fe:	f9 2d       	mov	r31, r9
    1300:	ff 77       	andi	r31, 0x7F	; 127
    1302:	13 c0       	rjmp	.+38     	; 0x132a <__EEPROM_REGION_LENGTH__+0x32a>
    1304:	56 01       	movw	r10, r12
    1306:	22 e0       	ldi	r18, 0x02	; 2
    1308:	a2 0e       	add	r10, r18
    130a:	b1 1c       	adc	r11, r1
    130c:	f6 01       	movw	r30, r12
    130e:	c0 80       	ld	r12, Z
    1310:	d1 80       	ldd	r13, Z+1	; 0x01
    1312:	96 fe       	sbrs	r9, 6
    1314:	03 c0       	rjmp	.+6      	; 0x131c <__EEPROM_REGION_LENGTH__+0x31c>
    1316:	61 2f       	mov	r22, r17
    1318:	70 e0       	ldi	r23, 0x00	; 0
    131a:	02 c0       	rjmp	.+4      	; 0x1320 <__EEPROM_REGION_LENGTH__+0x320>
    131c:	6f ef       	ldi	r22, 0xFF	; 255
    131e:	7f ef       	ldi	r23, 0xFF	; 255
    1320:	c6 01       	movw	r24, r12
    1322:	62 d2       	rcall	.+1220   	; 0x17e8 <strnlen_P>
    1324:	8c 01       	movw	r16, r24
    1326:	f9 2d       	mov	r31, r9
    1328:	f0 68       	ori	r31, 0x80	; 128
    132a:	9f 2e       	mov	r9, r31
    132c:	f3 fd       	sbrc	r31, 3
    132e:	18 c0       	rjmp	.+48     	; 0x1360 <__EEPROM_REGION_LENGTH__+0x360>
    1330:	85 2d       	mov	r24, r5
    1332:	90 e0       	ldi	r25, 0x00	; 0
    1334:	08 17       	cp	r16, r24
    1336:	19 07       	cpc	r17, r25
    1338:	98 f4       	brcc	.+38     	; 0x1360 <__EEPROM_REGION_LENGTH__+0x360>
    133a:	b7 01       	movw	r22, r14
    133c:	80 e2       	ldi	r24, 0x20	; 32
    133e:	90 e0       	ldi	r25, 0x00	; 0
    1340:	69 d2       	rcall	.+1234   	; 0x1814 <fputc>
    1342:	5a 94       	dec	r5
    1344:	f5 cf       	rjmp	.-22     	; 0x1330 <__EEPROM_REGION_LENGTH__+0x330>
    1346:	f6 01       	movw	r30, r12
    1348:	97 fc       	sbrc	r9, 7
    134a:	85 91       	lpm	r24, Z+
    134c:	97 fe       	sbrs	r9, 7
    134e:	81 91       	ld	r24, Z+
    1350:	6f 01       	movw	r12, r30
    1352:	b7 01       	movw	r22, r14
    1354:	90 e0       	ldi	r25, 0x00	; 0
    1356:	5e d2       	rcall	.+1212   	; 0x1814 <fputc>
    1358:	51 10       	cpse	r5, r1
    135a:	5a 94       	dec	r5
    135c:	01 50       	subi	r16, 0x01	; 1
    135e:	11 09       	sbc	r17, r1
    1360:	01 15       	cp	r16, r1
    1362:	11 05       	cpc	r17, r1
    1364:	81 f7       	brne	.-32     	; 0x1346 <__EEPROM_REGION_LENGTH__+0x346>
    1366:	f0 c0       	rjmp	.+480    	; 0x1548 <__EEPROM_REGION_LENGTH__+0x548>
    1368:	84 36       	cpi	r24, 0x64	; 100
    136a:	11 f0       	breq	.+4      	; 0x1370 <__EEPROM_REGION_LENGTH__+0x370>
    136c:	89 36       	cpi	r24, 0x69	; 105
    136e:	59 f5       	brne	.+86     	; 0x13c6 <__EEPROM_REGION_LENGTH__+0x3c6>
    1370:	56 01       	movw	r10, r12
    1372:	97 fe       	sbrs	r9, 7
    1374:	09 c0       	rjmp	.+18     	; 0x1388 <__EEPROM_REGION_LENGTH__+0x388>
    1376:	24 e0       	ldi	r18, 0x04	; 4
    1378:	a2 0e       	add	r10, r18
    137a:	b1 1c       	adc	r11, r1
    137c:	f6 01       	movw	r30, r12
    137e:	60 81       	ld	r22, Z
    1380:	71 81       	ldd	r23, Z+1	; 0x01
    1382:	82 81       	ldd	r24, Z+2	; 0x02
    1384:	93 81       	ldd	r25, Z+3	; 0x03
    1386:	0a c0       	rjmp	.+20     	; 0x139c <__EEPROM_REGION_LENGTH__+0x39c>
    1388:	f2 e0       	ldi	r31, 0x02	; 2
    138a:	af 0e       	add	r10, r31
    138c:	b1 1c       	adc	r11, r1
    138e:	f6 01       	movw	r30, r12
    1390:	60 81       	ld	r22, Z
    1392:	71 81       	ldd	r23, Z+1	; 0x01
    1394:	07 2e       	mov	r0, r23
    1396:	00 0c       	add	r0, r0
    1398:	88 0b       	sbc	r24, r24
    139a:	99 0b       	sbc	r25, r25
    139c:	f9 2d       	mov	r31, r9
    139e:	ff 76       	andi	r31, 0x6F	; 111
    13a0:	9f 2e       	mov	r9, r31
    13a2:	97 ff       	sbrs	r25, 7
    13a4:	09 c0       	rjmp	.+18     	; 0x13b8 <__EEPROM_REGION_LENGTH__+0x3b8>
    13a6:	90 95       	com	r25
    13a8:	80 95       	com	r24
    13aa:	70 95       	com	r23
    13ac:	61 95       	neg	r22
    13ae:	7f 4f       	sbci	r23, 0xFF	; 255
    13b0:	8f 4f       	sbci	r24, 0xFF	; 255
    13b2:	9f 4f       	sbci	r25, 0xFF	; 255
    13b4:	f0 68       	ori	r31, 0x80	; 128
    13b6:	9f 2e       	mov	r9, r31
    13b8:	2a e0       	ldi	r18, 0x0A	; 10
    13ba:	30 e0       	ldi	r19, 0x00	; 0
    13bc:	a3 01       	movw	r20, r6
    13be:	94 d2       	rcall	.+1320   	; 0x18e8 <__ultoa_invert>
    13c0:	c8 2e       	mov	r12, r24
    13c2:	c6 18       	sub	r12, r6
    13c4:	3e c0       	rjmp	.+124    	; 0x1442 <__EEPROM_REGION_LENGTH__+0x442>
    13c6:	09 2d       	mov	r16, r9
    13c8:	85 37       	cpi	r24, 0x75	; 117
    13ca:	21 f4       	brne	.+8      	; 0x13d4 <__EEPROM_REGION_LENGTH__+0x3d4>
    13cc:	0f 7e       	andi	r16, 0xEF	; 239
    13ce:	2a e0       	ldi	r18, 0x0A	; 10
    13d0:	30 e0       	ldi	r19, 0x00	; 0
    13d2:	1d c0       	rjmp	.+58     	; 0x140e <__EEPROM_REGION_LENGTH__+0x40e>
    13d4:	09 7f       	andi	r16, 0xF9	; 249
    13d6:	8f 36       	cpi	r24, 0x6F	; 111
    13d8:	91 f0       	breq	.+36     	; 0x13fe <__EEPROM_REGION_LENGTH__+0x3fe>
    13da:	18 f4       	brcc	.+6      	; 0x13e2 <__EEPROM_REGION_LENGTH__+0x3e2>
    13dc:	88 35       	cpi	r24, 0x58	; 88
    13de:	59 f0       	breq	.+22     	; 0x13f6 <__EEPROM_REGION_LENGTH__+0x3f6>
    13e0:	bc c0       	rjmp	.+376    	; 0x155a <__EEPROM_REGION_LENGTH__+0x55a>
    13e2:	80 37       	cpi	r24, 0x70	; 112
    13e4:	19 f0       	breq	.+6      	; 0x13ec <__EEPROM_REGION_LENGTH__+0x3ec>
    13e6:	88 37       	cpi	r24, 0x78	; 120
    13e8:	11 f0       	breq	.+4      	; 0x13ee <__EEPROM_REGION_LENGTH__+0x3ee>
    13ea:	b7 c0       	rjmp	.+366    	; 0x155a <__EEPROM_REGION_LENGTH__+0x55a>
    13ec:	00 61       	ori	r16, 0x10	; 16
    13ee:	04 ff       	sbrs	r16, 4
    13f0:	09 c0       	rjmp	.+18     	; 0x1404 <__EEPROM_REGION_LENGTH__+0x404>
    13f2:	04 60       	ori	r16, 0x04	; 4
    13f4:	07 c0       	rjmp	.+14     	; 0x1404 <__EEPROM_REGION_LENGTH__+0x404>
    13f6:	94 fe       	sbrs	r9, 4
    13f8:	08 c0       	rjmp	.+16     	; 0x140a <__EEPROM_REGION_LENGTH__+0x40a>
    13fa:	06 60       	ori	r16, 0x06	; 6
    13fc:	06 c0       	rjmp	.+12     	; 0x140a <__EEPROM_REGION_LENGTH__+0x40a>
    13fe:	28 e0       	ldi	r18, 0x08	; 8
    1400:	30 e0       	ldi	r19, 0x00	; 0
    1402:	05 c0       	rjmp	.+10     	; 0x140e <__EEPROM_REGION_LENGTH__+0x40e>
    1404:	20 e1       	ldi	r18, 0x10	; 16
    1406:	30 e0       	ldi	r19, 0x00	; 0
    1408:	02 c0       	rjmp	.+4      	; 0x140e <__EEPROM_REGION_LENGTH__+0x40e>
    140a:	20 e1       	ldi	r18, 0x10	; 16
    140c:	32 e0       	ldi	r19, 0x02	; 2
    140e:	56 01       	movw	r10, r12
    1410:	07 ff       	sbrs	r16, 7
    1412:	09 c0       	rjmp	.+18     	; 0x1426 <__EEPROM_REGION_LENGTH__+0x426>
    1414:	84 e0       	ldi	r24, 0x04	; 4
    1416:	a8 0e       	add	r10, r24
    1418:	b1 1c       	adc	r11, r1
    141a:	f6 01       	movw	r30, r12
    141c:	60 81       	ld	r22, Z
    141e:	71 81       	ldd	r23, Z+1	; 0x01
    1420:	82 81       	ldd	r24, Z+2	; 0x02
    1422:	93 81       	ldd	r25, Z+3	; 0x03
    1424:	08 c0       	rjmp	.+16     	; 0x1436 <__EEPROM_REGION_LENGTH__+0x436>
    1426:	f2 e0       	ldi	r31, 0x02	; 2
    1428:	af 0e       	add	r10, r31
    142a:	b1 1c       	adc	r11, r1
    142c:	f6 01       	movw	r30, r12
    142e:	60 81       	ld	r22, Z
    1430:	71 81       	ldd	r23, Z+1	; 0x01
    1432:	80 e0       	ldi	r24, 0x00	; 0
    1434:	90 e0       	ldi	r25, 0x00	; 0
    1436:	a3 01       	movw	r20, r6
    1438:	57 d2       	rcall	.+1198   	; 0x18e8 <__ultoa_invert>
    143a:	c8 2e       	mov	r12, r24
    143c:	c6 18       	sub	r12, r6
    143e:	0f 77       	andi	r16, 0x7F	; 127
    1440:	90 2e       	mov	r9, r16
    1442:	96 fe       	sbrs	r9, 6
    1444:	0b c0       	rjmp	.+22     	; 0x145c <__EEPROM_REGION_LENGTH__+0x45c>
    1446:	09 2d       	mov	r16, r9
    1448:	0e 7f       	andi	r16, 0xFE	; 254
    144a:	c1 16       	cp	r12, r17
    144c:	50 f4       	brcc	.+20     	; 0x1462 <__EEPROM_REGION_LENGTH__+0x462>
    144e:	94 fe       	sbrs	r9, 4
    1450:	0a c0       	rjmp	.+20     	; 0x1466 <__EEPROM_REGION_LENGTH__+0x466>
    1452:	92 fc       	sbrc	r9, 2
    1454:	08 c0       	rjmp	.+16     	; 0x1466 <__EEPROM_REGION_LENGTH__+0x466>
    1456:	09 2d       	mov	r16, r9
    1458:	0e 7e       	andi	r16, 0xEE	; 238
    145a:	05 c0       	rjmp	.+10     	; 0x1466 <__EEPROM_REGION_LENGTH__+0x466>
    145c:	dc 2c       	mov	r13, r12
    145e:	09 2d       	mov	r16, r9
    1460:	03 c0       	rjmp	.+6      	; 0x1468 <__EEPROM_REGION_LENGTH__+0x468>
    1462:	dc 2c       	mov	r13, r12
    1464:	01 c0       	rjmp	.+2      	; 0x1468 <__EEPROM_REGION_LENGTH__+0x468>
    1466:	d1 2e       	mov	r13, r17
    1468:	04 ff       	sbrs	r16, 4
    146a:	0d c0       	rjmp	.+26     	; 0x1486 <__EEPROM_REGION_LENGTH__+0x486>
    146c:	fe 01       	movw	r30, r28
    146e:	ec 0d       	add	r30, r12
    1470:	f1 1d       	adc	r31, r1
    1472:	80 81       	ld	r24, Z
    1474:	80 33       	cpi	r24, 0x30	; 48
    1476:	11 f4       	brne	.+4      	; 0x147c <__EEPROM_REGION_LENGTH__+0x47c>
    1478:	09 7e       	andi	r16, 0xE9	; 233
    147a:	09 c0       	rjmp	.+18     	; 0x148e <__EEPROM_REGION_LENGTH__+0x48e>
    147c:	02 ff       	sbrs	r16, 2
    147e:	06 c0       	rjmp	.+12     	; 0x148c <__EEPROM_REGION_LENGTH__+0x48c>
    1480:	d3 94       	inc	r13
    1482:	d3 94       	inc	r13
    1484:	04 c0       	rjmp	.+8      	; 0x148e <__EEPROM_REGION_LENGTH__+0x48e>
    1486:	80 2f       	mov	r24, r16
    1488:	86 78       	andi	r24, 0x86	; 134
    148a:	09 f0       	breq	.+2      	; 0x148e <__EEPROM_REGION_LENGTH__+0x48e>
    148c:	d3 94       	inc	r13
    148e:	03 fd       	sbrc	r16, 3
    1490:	10 c0       	rjmp	.+32     	; 0x14b2 <__EEPROM_REGION_LENGTH__+0x4b2>
    1492:	00 ff       	sbrs	r16, 0
    1494:	06 c0       	rjmp	.+12     	; 0x14a2 <__EEPROM_REGION_LENGTH__+0x4a2>
    1496:	1c 2d       	mov	r17, r12
    1498:	d5 14       	cp	r13, r5
    149a:	78 f4       	brcc	.+30     	; 0x14ba <__EEPROM_REGION_LENGTH__+0x4ba>
    149c:	15 0d       	add	r17, r5
    149e:	1d 19       	sub	r17, r13
    14a0:	0c c0       	rjmp	.+24     	; 0x14ba <__EEPROM_REGION_LENGTH__+0x4ba>
    14a2:	d5 14       	cp	r13, r5
    14a4:	50 f4       	brcc	.+20     	; 0x14ba <__EEPROM_REGION_LENGTH__+0x4ba>
    14a6:	b7 01       	movw	r22, r14
    14a8:	80 e2       	ldi	r24, 0x20	; 32
    14aa:	90 e0       	ldi	r25, 0x00	; 0
    14ac:	b3 d1       	rcall	.+870    	; 0x1814 <fputc>
    14ae:	d3 94       	inc	r13
    14b0:	f8 cf       	rjmp	.-16     	; 0x14a2 <__EEPROM_REGION_LENGTH__+0x4a2>
    14b2:	d5 14       	cp	r13, r5
    14b4:	10 f4       	brcc	.+4      	; 0x14ba <__EEPROM_REGION_LENGTH__+0x4ba>
    14b6:	5d 18       	sub	r5, r13
    14b8:	01 c0       	rjmp	.+2      	; 0x14bc <__EEPROM_REGION_LENGTH__+0x4bc>
    14ba:	51 2c       	mov	r5, r1
    14bc:	04 ff       	sbrs	r16, 4
    14be:	0f c0       	rjmp	.+30     	; 0x14de <__EEPROM_REGION_LENGTH__+0x4de>
    14c0:	b7 01       	movw	r22, r14
    14c2:	80 e3       	ldi	r24, 0x30	; 48
    14c4:	90 e0       	ldi	r25, 0x00	; 0
    14c6:	a6 d1       	rcall	.+844    	; 0x1814 <fputc>
    14c8:	02 ff       	sbrs	r16, 2
    14ca:	16 c0       	rjmp	.+44     	; 0x14f8 <__EEPROM_REGION_LENGTH__+0x4f8>
    14cc:	01 fd       	sbrc	r16, 1
    14ce:	03 c0       	rjmp	.+6      	; 0x14d6 <__EEPROM_REGION_LENGTH__+0x4d6>
    14d0:	88 e7       	ldi	r24, 0x78	; 120
    14d2:	90 e0       	ldi	r25, 0x00	; 0
    14d4:	02 c0       	rjmp	.+4      	; 0x14da <__EEPROM_REGION_LENGTH__+0x4da>
    14d6:	88 e5       	ldi	r24, 0x58	; 88
    14d8:	90 e0       	ldi	r25, 0x00	; 0
    14da:	b7 01       	movw	r22, r14
    14dc:	0c c0       	rjmp	.+24     	; 0x14f6 <__EEPROM_REGION_LENGTH__+0x4f6>
    14de:	80 2f       	mov	r24, r16
    14e0:	86 78       	andi	r24, 0x86	; 134
    14e2:	51 f0       	breq	.+20     	; 0x14f8 <__EEPROM_REGION_LENGTH__+0x4f8>
    14e4:	01 ff       	sbrs	r16, 1
    14e6:	02 c0       	rjmp	.+4      	; 0x14ec <__EEPROM_REGION_LENGTH__+0x4ec>
    14e8:	8b e2       	ldi	r24, 0x2B	; 43
    14ea:	01 c0       	rjmp	.+2      	; 0x14ee <__EEPROM_REGION_LENGTH__+0x4ee>
    14ec:	80 e2       	ldi	r24, 0x20	; 32
    14ee:	07 fd       	sbrc	r16, 7
    14f0:	8d e2       	ldi	r24, 0x2D	; 45
    14f2:	b7 01       	movw	r22, r14
    14f4:	90 e0       	ldi	r25, 0x00	; 0
    14f6:	8e d1       	rcall	.+796    	; 0x1814 <fputc>
    14f8:	c1 16       	cp	r12, r17
    14fa:	30 f4       	brcc	.+12     	; 0x1508 <__EEPROM_REGION_LENGTH__+0x508>
    14fc:	b7 01       	movw	r22, r14
    14fe:	80 e3       	ldi	r24, 0x30	; 48
    1500:	90 e0       	ldi	r25, 0x00	; 0
    1502:	88 d1       	rcall	.+784    	; 0x1814 <fputc>
    1504:	11 50       	subi	r17, 0x01	; 1
    1506:	f8 cf       	rjmp	.-16     	; 0x14f8 <__EEPROM_REGION_LENGTH__+0x4f8>
    1508:	ca 94       	dec	r12
    150a:	f3 01       	movw	r30, r6
    150c:	ec 0d       	add	r30, r12
    150e:	f1 1d       	adc	r31, r1
    1510:	80 81       	ld	r24, Z
    1512:	b7 01       	movw	r22, r14
    1514:	90 e0       	ldi	r25, 0x00	; 0
    1516:	7e d1       	rcall	.+764    	; 0x1814 <fputc>
    1518:	c1 10       	cpse	r12, r1
    151a:	f6 cf       	rjmp	.-20     	; 0x1508 <__EEPROM_REGION_LENGTH__+0x508>
    151c:	15 c0       	rjmp	.+42     	; 0x1548 <__EEPROM_REGION_LENGTH__+0x548>
    151e:	f4 e0       	ldi	r31, 0x04	; 4
    1520:	f5 15       	cp	r31, r5
    1522:	50 f5       	brcc	.+84     	; 0x1578 <__EEPROM_REGION_LENGTH__+0x578>
    1524:	84 e0       	ldi	r24, 0x04	; 4
    1526:	58 1a       	sub	r5, r24
    1528:	93 fe       	sbrs	r9, 3
    152a:	1e c0       	rjmp	.+60     	; 0x1568 <__EEPROM_REGION_LENGTH__+0x568>
    152c:	01 11       	cpse	r16, r1
    152e:	25 c0       	rjmp	.+74     	; 0x157a <__EEPROM_REGION_LENGTH__+0x57a>
    1530:	2c 85       	ldd	r18, Y+12	; 0x0c
    1532:	23 ff       	sbrs	r18, 3
    1534:	27 c0       	rjmp	.+78     	; 0x1584 <__EEPROM_REGION_LENGTH__+0x584>
    1536:	04 ef       	ldi	r16, 0xF4	; 244
    1538:	10 e0       	ldi	r17, 0x00	; 0
    153a:	39 2d       	mov	r19, r9
    153c:	30 71       	andi	r19, 0x10	; 16
    153e:	93 2e       	mov	r9, r19
    1540:	f8 01       	movw	r30, r16
    1542:	84 91       	lpm	r24, Z
    1544:	81 11       	cpse	r24, r1
    1546:	21 c0       	rjmp	.+66     	; 0x158a <__EEPROM_REGION_LENGTH__+0x58a>
    1548:	55 20       	and	r5, r5
    154a:	09 f4       	brne	.+2      	; 0x154e <__EEPROM_REGION_LENGTH__+0x54e>
    154c:	fc cc       	rjmp	.-1544   	; 0xf46 <vfprintf+0x7e>
    154e:	b7 01       	movw	r22, r14
    1550:	80 e2       	ldi	r24, 0x20	; 32
    1552:	90 e0       	ldi	r25, 0x00	; 0
    1554:	5f d1       	rcall	.+702    	; 0x1814 <fputc>
    1556:	5a 94       	dec	r5
    1558:	f7 cf       	rjmp	.-18     	; 0x1548 <__EEPROM_REGION_LENGTH__+0x548>
    155a:	f7 01       	movw	r30, r14
    155c:	86 81       	ldd	r24, Z+6	; 0x06
    155e:	97 81       	ldd	r25, Z+7	; 0x07
    1560:	23 c0       	rjmp	.+70     	; 0x15a8 <__EEPROM_REGION_LENGTH__+0x5a8>
    1562:	8f ef       	ldi	r24, 0xFF	; 255
    1564:	9f ef       	ldi	r25, 0xFF	; 255
    1566:	20 c0       	rjmp	.+64     	; 0x15a8 <__EEPROM_REGION_LENGTH__+0x5a8>
    1568:	b7 01       	movw	r22, r14
    156a:	80 e2       	ldi	r24, 0x20	; 32
    156c:	90 e0       	ldi	r25, 0x00	; 0
    156e:	52 d1       	rcall	.+676    	; 0x1814 <fputc>
    1570:	5a 94       	dec	r5
    1572:	51 10       	cpse	r5, r1
    1574:	f9 cf       	rjmp	.-14     	; 0x1568 <__EEPROM_REGION_LENGTH__+0x568>
    1576:	da cf       	rjmp	.-76     	; 0x152c <__EEPROM_REGION_LENGTH__+0x52c>
    1578:	51 2c       	mov	r5, r1
    157a:	b7 01       	movw	r22, r14
    157c:	80 2f       	mov	r24, r16
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	49 d1       	rcall	.+658    	; 0x1814 <fputc>
    1582:	d6 cf       	rjmp	.-84     	; 0x1530 <__EEPROM_REGION_LENGTH__+0x530>
    1584:	08 ef       	ldi	r16, 0xF8	; 248
    1586:	10 e0       	ldi	r17, 0x00	; 0
    1588:	d8 cf       	rjmp	.-80     	; 0x153a <__EEPROM_REGION_LENGTH__+0x53a>
    158a:	91 10       	cpse	r9, r1
    158c:	80 52       	subi	r24, 0x20	; 32
    158e:	b7 01       	movw	r22, r14
    1590:	90 e0       	ldi	r25, 0x00	; 0
    1592:	40 d1       	rcall	.+640    	; 0x1814 <fputc>
    1594:	0f 5f       	subi	r16, 0xFF	; 255
    1596:	1f 4f       	sbci	r17, 0xFF	; 255
    1598:	d3 cf       	rjmp	.-90     	; 0x1540 <__EEPROM_REGION_LENGTH__+0x540>
    159a:	23 e0       	ldi	r18, 0x03	; 3
    159c:	25 15       	cp	r18, r5
    159e:	10 f4       	brcc	.+4      	; 0x15a4 <__EEPROM_REGION_LENGTH__+0x5a4>
    15a0:	83 e0       	ldi	r24, 0x03	; 3
    15a2:	c1 cf       	rjmp	.-126    	; 0x1526 <__EEPROM_REGION_LENGTH__+0x526>
    15a4:	51 2c       	mov	r5, r1
    15a6:	c4 cf       	rjmp	.-120    	; 0x1530 <__EEPROM_REGION_LENGTH__+0x530>
    15a8:	60 96       	adiw	r28, 0x10	; 16
    15aa:	0f b6       	in	r0, 0x3f	; 63
    15ac:	f8 94       	cli
    15ae:	de bf       	out	0x3e, r29	; 62
    15b0:	0f be       	out	0x3f, r0	; 63
    15b2:	cd bf       	out	0x3d, r28	; 61
    15b4:	df 91       	pop	r29
    15b6:	cf 91       	pop	r28
    15b8:	1f 91       	pop	r17
    15ba:	0f 91       	pop	r16
    15bc:	ff 90       	pop	r15
    15be:	ef 90       	pop	r14
    15c0:	df 90       	pop	r13
    15c2:	cf 90       	pop	r12
    15c4:	bf 90       	pop	r11
    15c6:	af 90       	pop	r10
    15c8:	9f 90       	pop	r9
    15ca:	8f 90       	pop	r8
    15cc:	7f 90       	pop	r7
    15ce:	6f 90       	pop	r6
    15d0:	5f 90       	pop	r5
    15d2:	4f 90       	pop	r4
    15d4:	3f 90       	pop	r3
    15d6:	2f 90       	pop	r2
    15d8:	08 95       	ret

000015da <__divmodhi4>:
    15da:	97 fb       	bst	r25, 7
    15dc:	07 2e       	mov	r0, r23
    15de:	16 f4       	brtc	.+4      	; 0x15e4 <__divmodhi4+0xa>
    15e0:	00 94       	com	r0
    15e2:	06 d0       	rcall	.+12     	; 0x15f0 <__divmodhi4_neg1>
    15e4:	77 fd       	sbrc	r23, 7
    15e6:	08 d0       	rcall	.+16     	; 0x15f8 <__divmodhi4_neg2>
    15e8:	13 d0       	rcall	.+38     	; 0x1610 <__udivmodhi4>
    15ea:	07 fc       	sbrc	r0, 7
    15ec:	05 d0       	rcall	.+10     	; 0x15f8 <__divmodhi4_neg2>
    15ee:	3e f4       	brtc	.+14     	; 0x15fe <__divmodhi4_exit>

000015f0 <__divmodhi4_neg1>:
    15f0:	90 95       	com	r25
    15f2:	81 95       	neg	r24
    15f4:	9f 4f       	sbci	r25, 0xFF	; 255
    15f6:	08 95       	ret

000015f8 <__divmodhi4_neg2>:
    15f8:	70 95       	com	r23
    15fa:	61 95       	neg	r22
    15fc:	7f 4f       	sbci	r23, 0xFF	; 255

000015fe <__divmodhi4_exit>:
    15fe:	08 95       	ret

00001600 <__tablejump2__>:
    1600:	ee 0f       	add	r30, r30
    1602:	ff 1f       	adc	r31, r31
    1604:	88 1f       	adc	r24, r24
    1606:	8b bf       	out	0x3b, r24	; 59
    1608:	07 90       	elpm	r0, Z+
    160a:	f6 91       	elpm	r31, Z
    160c:	e0 2d       	mov	r30, r0
    160e:	19 94       	eijmp

00001610 <__udivmodhi4>:
    1610:	aa 1b       	sub	r26, r26
    1612:	bb 1b       	sub	r27, r27
    1614:	51 e1       	ldi	r21, 0x11	; 17
    1616:	07 c0       	rjmp	.+14     	; 0x1626 <__udivmodhi4_ep>

00001618 <__udivmodhi4_loop>:
    1618:	aa 1f       	adc	r26, r26
    161a:	bb 1f       	adc	r27, r27
    161c:	a6 17       	cp	r26, r22
    161e:	b7 07       	cpc	r27, r23
    1620:	10 f0       	brcs	.+4      	; 0x1626 <__udivmodhi4_ep>
    1622:	a6 1b       	sub	r26, r22
    1624:	b7 0b       	sbc	r27, r23

00001626 <__udivmodhi4_ep>:
    1626:	88 1f       	adc	r24, r24
    1628:	99 1f       	adc	r25, r25
    162a:	5a 95       	dec	r21
    162c:	a9 f7       	brne	.-22     	; 0x1618 <__udivmodhi4_loop>
    162e:	80 95       	com	r24
    1630:	90 95       	com	r25
    1632:	bc 01       	movw	r22, r24
    1634:	cd 01       	movw	r24, r26
    1636:	08 95       	ret

00001638 <__ftoa_engine>:
    1638:	28 30       	cpi	r18, 0x08	; 8
    163a:	08 f0       	brcs	.+2      	; 0x163e <__ftoa_engine+0x6>
    163c:	27 e0       	ldi	r18, 0x07	; 7
    163e:	33 27       	eor	r19, r19
    1640:	da 01       	movw	r26, r20
    1642:	99 0f       	add	r25, r25
    1644:	31 1d       	adc	r19, r1
    1646:	87 fd       	sbrc	r24, 7
    1648:	91 60       	ori	r25, 0x01	; 1
    164a:	00 96       	adiw	r24, 0x00	; 0
    164c:	61 05       	cpc	r22, r1
    164e:	71 05       	cpc	r23, r1
    1650:	39 f4       	brne	.+14     	; 0x1660 <__ftoa_engine+0x28>
    1652:	32 60       	ori	r19, 0x02	; 2
    1654:	2e 5f       	subi	r18, 0xFE	; 254
    1656:	3d 93       	st	X+, r19
    1658:	30 e3       	ldi	r19, 0x30	; 48
    165a:	2a 95       	dec	r18
    165c:	e1 f7       	brne	.-8      	; 0x1656 <__ftoa_engine+0x1e>
    165e:	08 95       	ret
    1660:	9f 3f       	cpi	r25, 0xFF	; 255
    1662:	30 f0       	brcs	.+12     	; 0x1670 <__ftoa_engine+0x38>
    1664:	80 38       	cpi	r24, 0x80	; 128
    1666:	71 05       	cpc	r23, r1
    1668:	61 05       	cpc	r22, r1
    166a:	09 f0       	breq	.+2      	; 0x166e <__ftoa_engine+0x36>
    166c:	3c 5f       	subi	r19, 0xFC	; 252
    166e:	3c 5f       	subi	r19, 0xFC	; 252
    1670:	3d 93       	st	X+, r19
    1672:	91 30       	cpi	r25, 0x01	; 1
    1674:	08 f0       	brcs	.+2      	; 0x1678 <__ftoa_engine+0x40>
    1676:	80 68       	ori	r24, 0x80	; 128
    1678:	91 1d       	adc	r25, r1
    167a:	df 93       	push	r29
    167c:	cf 93       	push	r28
    167e:	1f 93       	push	r17
    1680:	0f 93       	push	r16
    1682:	ff 92       	push	r15
    1684:	ef 92       	push	r14
    1686:	19 2f       	mov	r17, r25
    1688:	98 7f       	andi	r25, 0xF8	; 248
    168a:	96 95       	lsr	r25
    168c:	e9 2f       	mov	r30, r25
    168e:	96 95       	lsr	r25
    1690:	96 95       	lsr	r25
    1692:	e9 0f       	add	r30, r25
    1694:	ff 27       	eor	r31, r31
    1696:	ea 5a       	subi	r30, 0xAA	; 170
    1698:	fe 4f       	sbci	r31, 0xFE	; 254
    169a:	99 27       	eor	r25, r25
    169c:	33 27       	eor	r19, r19
    169e:	ee 24       	eor	r14, r14
    16a0:	ff 24       	eor	r15, r15
    16a2:	a7 01       	movw	r20, r14
    16a4:	e7 01       	movw	r28, r14
    16a6:	05 90       	lpm	r0, Z+
    16a8:	08 94       	sec
    16aa:	07 94       	ror	r0
    16ac:	28 f4       	brcc	.+10     	; 0x16b8 <__ftoa_engine+0x80>
    16ae:	36 0f       	add	r19, r22
    16b0:	e7 1e       	adc	r14, r23
    16b2:	f8 1e       	adc	r15, r24
    16b4:	49 1f       	adc	r20, r25
    16b6:	51 1d       	adc	r21, r1
    16b8:	66 0f       	add	r22, r22
    16ba:	77 1f       	adc	r23, r23
    16bc:	88 1f       	adc	r24, r24
    16be:	99 1f       	adc	r25, r25
    16c0:	06 94       	lsr	r0
    16c2:	a1 f7       	brne	.-24     	; 0x16ac <__ftoa_engine+0x74>
    16c4:	05 90       	lpm	r0, Z+
    16c6:	07 94       	ror	r0
    16c8:	28 f4       	brcc	.+10     	; 0x16d4 <__ftoa_engine+0x9c>
    16ca:	e7 0e       	add	r14, r23
    16cc:	f8 1e       	adc	r15, r24
    16ce:	49 1f       	adc	r20, r25
    16d0:	56 1f       	adc	r21, r22
    16d2:	c1 1d       	adc	r28, r1
    16d4:	77 0f       	add	r23, r23
    16d6:	88 1f       	adc	r24, r24
    16d8:	99 1f       	adc	r25, r25
    16da:	66 1f       	adc	r22, r22
    16dc:	06 94       	lsr	r0
    16de:	a1 f7       	brne	.-24     	; 0x16c8 <__ftoa_engine+0x90>
    16e0:	05 90       	lpm	r0, Z+
    16e2:	07 94       	ror	r0
    16e4:	28 f4       	brcc	.+10     	; 0x16f0 <__ftoa_engine+0xb8>
    16e6:	f8 0e       	add	r15, r24
    16e8:	49 1f       	adc	r20, r25
    16ea:	56 1f       	adc	r21, r22
    16ec:	c7 1f       	adc	r28, r23
    16ee:	d1 1d       	adc	r29, r1
    16f0:	88 0f       	add	r24, r24
    16f2:	99 1f       	adc	r25, r25
    16f4:	66 1f       	adc	r22, r22
    16f6:	77 1f       	adc	r23, r23
    16f8:	06 94       	lsr	r0
    16fa:	a1 f7       	brne	.-24     	; 0x16e4 <__ftoa_engine+0xac>
    16fc:	05 90       	lpm	r0, Z+
    16fe:	07 94       	ror	r0
    1700:	20 f4       	brcc	.+8      	; 0x170a <__ftoa_engine+0xd2>
    1702:	49 0f       	add	r20, r25
    1704:	56 1f       	adc	r21, r22
    1706:	c7 1f       	adc	r28, r23
    1708:	d8 1f       	adc	r29, r24
    170a:	99 0f       	add	r25, r25
    170c:	66 1f       	adc	r22, r22
    170e:	77 1f       	adc	r23, r23
    1710:	88 1f       	adc	r24, r24
    1712:	06 94       	lsr	r0
    1714:	a9 f7       	brne	.-22     	; 0x1700 <__ftoa_engine+0xc8>
    1716:	84 91       	lpm	r24, Z
    1718:	10 95       	com	r17
    171a:	17 70       	andi	r17, 0x07	; 7
    171c:	41 f0       	breq	.+16     	; 0x172e <__ftoa_engine+0xf6>
    171e:	d6 95       	lsr	r29
    1720:	c7 95       	ror	r28
    1722:	57 95       	ror	r21
    1724:	47 95       	ror	r20
    1726:	f7 94       	ror	r15
    1728:	e7 94       	ror	r14
    172a:	1a 95       	dec	r17
    172c:	c1 f7       	brne	.-16     	; 0x171e <__ftoa_engine+0xe6>
    172e:	ec ef       	ldi	r30, 0xFC	; 252
    1730:	f0 e0       	ldi	r31, 0x00	; 0
    1732:	68 94       	set
    1734:	15 90       	lpm	r1, Z+
    1736:	15 91       	lpm	r17, Z+
    1738:	35 91       	lpm	r19, Z+
    173a:	65 91       	lpm	r22, Z+
    173c:	95 91       	lpm	r25, Z+
    173e:	05 90       	lpm	r0, Z+
    1740:	7f e2       	ldi	r23, 0x2F	; 47
    1742:	73 95       	inc	r23
    1744:	e1 18       	sub	r14, r1
    1746:	f1 0a       	sbc	r15, r17
    1748:	43 0b       	sbc	r20, r19
    174a:	56 0b       	sbc	r21, r22
    174c:	c9 0b       	sbc	r28, r25
    174e:	d0 09       	sbc	r29, r0
    1750:	c0 f7       	brcc	.-16     	; 0x1742 <__ftoa_engine+0x10a>
    1752:	e1 0c       	add	r14, r1
    1754:	f1 1e       	adc	r15, r17
    1756:	43 1f       	adc	r20, r19
    1758:	56 1f       	adc	r21, r22
    175a:	c9 1f       	adc	r28, r25
    175c:	d0 1d       	adc	r29, r0
    175e:	7e f4       	brtc	.+30     	; 0x177e <__ftoa_engine+0x146>
    1760:	70 33       	cpi	r23, 0x30	; 48
    1762:	11 f4       	brne	.+4      	; 0x1768 <__ftoa_engine+0x130>
    1764:	8a 95       	dec	r24
    1766:	e6 cf       	rjmp	.-52     	; 0x1734 <__ftoa_engine+0xfc>
    1768:	e8 94       	clt
    176a:	01 50       	subi	r16, 0x01	; 1
    176c:	30 f0       	brcs	.+12     	; 0x177a <__ftoa_engine+0x142>
    176e:	08 0f       	add	r16, r24
    1770:	0a f4       	brpl	.+2      	; 0x1774 <__ftoa_engine+0x13c>
    1772:	00 27       	eor	r16, r16
    1774:	02 17       	cp	r16, r18
    1776:	08 f4       	brcc	.+2      	; 0x177a <__ftoa_engine+0x142>
    1778:	20 2f       	mov	r18, r16
    177a:	23 95       	inc	r18
    177c:	02 2f       	mov	r16, r18
    177e:	7a 33       	cpi	r23, 0x3A	; 58
    1780:	28 f0       	brcs	.+10     	; 0x178c <__ftoa_engine+0x154>
    1782:	79 e3       	ldi	r23, 0x39	; 57
    1784:	7d 93       	st	X+, r23
    1786:	2a 95       	dec	r18
    1788:	e9 f7       	brne	.-6      	; 0x1784 <__ftoa_engine+0x14c>
    178a:	10 c0       	rjmp	.+32     	; 0x17ac <__ftoa_engine+0x174>
    178c:	7d 93       	st	X+, r23
    178e:	2a 95       	dec	r18
    1790:	89 f6       	brne	.-94     	; 0x1734 <__ftoa_engine+0xfc>
    1792:	06 94       	lsr	r0
    1794:	97 95       	ror	r25
    1796:	67 95       	ror	r22
    1798:	37 95       	ror	r19
    179a:	17 95       	ror	r17
    179c:	17 94       	ror	r1
    179e:	e1 18       	sub	r14, r1
    17a0:	f1 0a       	sbc	r15, r17
    17a2:	43 0b       	sbc	r20, r19
    17a4:	56 0b       	sbc	r21, r22
    17a6:	c9 0b       	sbc	r28, r25
    17a8:	d0 09       	sbc	r29, r0
    17aa:	98 f0       	brcs	.+38     	; 0x17d2 <__ftoa_engine+0x19a>
    17ac:	23 95       	inc	r18
    17ae:	7e 91       	ld	r23, -X
    17b0:	73 95       	inc	r23
    17b2:	7a 33       	cpi	r23, 0x3A	; 58
    17b4:	08 f0       	brcs	.+2      	; 0x17b8 <__ftoa_engine+0x180>
    17b6:	70 e3       	ldi	r23, 0x30	; 48
    17b8:	7c 93       	st	X, r23
    17ba:	20 13       	cpse	r18, r16
    17bc:	b8 f7       	brcc	.-18     	; 0x17ac <__ftoa_engine+0x174>
    17be:	7e 91       	ld	r23, -X
    17c0:	70 61       	ori	r23, 0x10	; 16
    17c2:	7d 93       	st	X+, r23
    17c4:	30 f0       	brcs	.+12     	; 0x17d2 <__ftoa_engine+0x19a>
    17c6:	83 95       	inc	r24
    17c8:	71 e3       	ldi	r23, 0x31	; 49
    17ca:	7d 93       	st	X+, r23
    17cc:	70 e3       	ldi	r23, 0x30	; 48
    17ce:	2a 95       	dec	r18
    17d0:	e1 f7       	brne	.-8      	; 0x17ca <__ftoa_engine+0x192>
    17d2:	11 24       	eor	r1, r1
    17d4:	ef 90       	pop	r14
    17d6:	ff 90       	pop	r15
    17d8:	0f 91       	pop	r16
    17da:	1f 91       	pop	r17
    17dc:	cf 91       	pop	r28
    17de:	df 91       	pop	r29
    17e0:	99 27       	eor	r25, r25
    17e2:	87 fd       	sbrc	r24, 7
    17e4:	90 95       	com	r25
    17e6:	08 95       	ret

000017e8 <strnlen_P>:
    17e8:	fc 01       	movw	r30, r24
    17ea:	05 90       	lpm	r0, Z+
    17ec:	61 50       	subi	r22, 0x01	; 1
    17ee:	70 40       	sbci	r23, 0x00	; 0
    17f0:	01 10       	cpse	r0, r1
    17f2:	d8 f7       	brcc	.-10     	; 0x17ea <strnlen_P+0x2>
    17f4:	80 95       	com	r24
    17f6:	90 95       	com	r25
    17f8:	8e 0f       	add	r24, r30
    17fa:	9f 1f       	adc	r25, r31
    17fc:	08 95       	ret

000017fe <strnlen>:
    17fe:	fc 01       	movw	r30, r24
    1800:	61 50       	subi	r22, 0x01	; 1
    1802:	70 40       	sbci	r23, 0x00	; 0
    1804:	01 90       	ld	r0, Z+
    1806:	01 10       	cpse	r0, r1
    1808:	d8 f7       	brcc	.-10     	; 0x1800 <strnlen+0x2>
    180a:	80 95       	com	r24
    180c:	90 95       	com	r25
    180e:	8e 0f       	add	r24, r30
    1810:	9f 1f       	adc	r25, r31
    1812:	08 95       	ret

00001814 <fputc>:
    1814:	0f 93       	push	r16
    1816:	1f 93       	push	r17
    1818:	cf 93       	push	r28
    181a:	df 93       	push	r29
    181c:	fb 01       	movw	r30, r22
    181e:	23 81       	ldd	r18, Z+3	; 0x03
    1820:	21 fd       	sbrc	r18, 1
    1822:	03 c0       	rjmp	.+6      	; 0x182a <fputc+0x16>
    1824:	8f ef       	ldi	r24, 0xFF	; 255
    1826:	9f ef       	ldi	r25, 0xFF	; 255
    1828:	2c c0       	rjmp	.+88     	; 0x1882 <fputc+0x6e>
    182a:	22 ff       	sbrs	r18, 2
    182c:	16 c0       	rjmp	.+44     	; 0x185a <fputc+0x46>
    182e:	46 81       	ldd	r20, Z+6	; 0x06
    1830:	57 81       	ldd	r21, Z+7	; 0x07
    1832:	24 81       	ldd	r18, Z+4	; 0x04
    1834:	35 81       	ldd	r19, Z+5	; 0x05
    1836:	42 17       	cp	r20, r18
    1838:	53 07       	cpc	r21, r19
    183a:	44 f4       	brge	.+16     	; 0x184c <fputc+0x38>
    183c:	a0 81       	ld	r26, Z
    183e:	b1 81       	ldd	r27, Z+1	; 0x01
    1840:	9d 01       	movw	r18, r26
    1842:	2f 5f       	subi	r18, 0xFF	; 255
    1844:	3f 4f       	sbci	r19, 0xFF	; 255
    1846:	31 83       	std	Z+1, r19	; 0x01
    1848:	20 83       	st	Z, r18
    184a:	8c 93       	st	X, r24
    184c:	26 81       	ldd	r18, Z+6	; 0x06
    184e:	37 81       	ldd	r19, Z+7	; 0x07
    1850:	2f 5f       	subi	r18, 0xFF	; 255
    1852:	3f 4f       	sbci	r19, 0xFF	; 255
    1854:	37 83       	std	Z+7, r19	; 0x07
    1856:	26 83       	std	Z+6, r18	; 0x06
    1858:	14 c0       	rjmp	.+40     	; 0x1882 <fputc+0x6e>
    185a:	8b 01       	movw	r16, r22
    185c:	ec 01       	movw	r28, r24
    185e:	fb 01       	movw	r30, r22
    1860:	00 84       	ldd	r0, Z+8	; 0x08
    1862:	f1 85       	ldd	r31, Z+9	; 0x09
    1864:	e0 2d       	mov	r30, r0
    1866:	19 95       	eicall
    1868:	89 2b       	or	r24, r25
    186a:	e1 f6       	brne	.-72     	; 0x1824 <fputc+0x10>
    186c:	d8 01       	movw	r26, r16
    186e:	16 96       	adiw	r26, 0x06	; 6
    1870:	8d 91       	ld	r24, X+
    1872:	9c 91       	ld	r25, X
    1874:	17 97       	sbiw	r26, 0x07	; 7
    1876:	01 96       	adiw	r24, 0x01	; 1
    1878:	17 96       	adiw	r26, 0x07	; 7
    187a:	9c 93       	st	X, r25
    187c:	8e 93       	st	-X, r24
    187e:	16 97       	sbiw	r26, 0x06	; 6
    1880:	ce 01       	movw	r24, r28
    1882:	df 91       	pop	r29
    1884:	cf 91       	pop	r28
    1886:	1f 91       	pop	r17
    1888:	0f 91       	pop	r16
    188a:	08 95       	ret

0000188c <sprintf>:
    188c:	0f 93       	push	r16
    188e:	1f 93       	push	r17
    1890:	cf 93       	push	r28
    1892:	df 93       	push	r29
    1894:	cd b7       	in	r28, 0x3d	; 61
    1896:	de b7       	in	r29, 0x3e	; 62
    1898:	2e 97       	sbiw	r28, 0x0e	; 14
    189a:	0f b6       	in	r0, 0x3f	; 63
    189c:	f8 94       	cli
    189e:	de bf       	out	0x3e, r29	; 62
    18a0:	0f be       	out	0x3f, r0	; 63
    18a2:	cd bf       	out	0x3d, r28	; 61
    18a4:	0e 89       	ldd	r16, Y+22	; 0x16
    18a6:	1f 89       	ldd	r17, Y+23	; 0x17
    18a8:	86 e0       	ldi	r24, 0x06	; 6
    18aa:	8c 83       	std	Y+4, r24	; 0x04
    18ac:	1a 83       	std	Y+2, r17	; 0x02
    18ae:	09 83       	std	Y+1, r16	; 0x01
    18b0:	8f ef       	ldi	r24, 0xFF	; 255
    18b2:	9f e7       	ldi	r25, 0x7F	; 127
    18b4:	9e 83       	std	Y+6, r25	; 0x06
    18b6:	8d 83       	std	Y+5, r24	; 0x05
    18b8:	ae 01       	movw	r20, r28
    18ba:	46 5e       	subi	r20, 0xE6	; 230
    18bc:	5f 4f       	sbci	r21, 0xFF	; 255
    18be:	68 8d       	ldd	r22, Y+24	; 0x18
    18c0:	79 8d       	ldd	r23, Y+25	; 0x19
    18c2:	ce 01       	movw	r24, r28
    18c4:	01 96       	adiw	r24, 0x01	; 1
    18c6:	00 db       	rcall	.-2560   	; 0xec8 <vfprintf>
    18c8:	ef 81       	ldd	r30, Y+7	; 0x07
    18ca:	f8 85       	ldd	r31, Y+8	; 0x08
    18cc:	e0 0f       	add	r30, r16
    18ce:	f1 1f       	adc	r31, r17
    18d0:	10 82       	st	Z, r1
    18d2:	2e 96       	adiw	r28, 0x0e	; 14
    18d4:	0f b6       	in	r0, 0x3f	; 63
    18d6:	f8 94       	cli
    18d8:	de bf       	out	0x3e, r29	; 62
    18da:	0f be       	out	0x3f, r0	; 63
    18dc:	cd bf       	out	0x3d, r28	; 61
    18de:	df 91       	pop	r29
    18e0:	cf 91       	pop	r28
    18e2:	1f 91       	pop	r17
    18e4:	0f 91       	pop	r16
    18e6:	08 95       	ret

000018e8 <__ultoa_invert>:
    18e8:	fa 01       	movw	r30, r20
    18ea:	aa 27       	eor	r26, r26
    18ec:	28 30       	cpi	r18, 0x08	; 8
    18ee:	51 f1       	breq	.+84     	; 0x1944 <__ultoa_invert+0x5c>
    18f0:	20 31       	cpi	r18, 0x10	; 16
    18f2:	81 f1       	breq	.+96     	; 0x1954 <__ultoa_invert+0x6c>
    18f4:	e8 94       	clt
    18f6:	6f 93       	push	r22
    18f8:	6e 7f       	andi	r22, 0xFE	; 254
    18fa:	6e 5f       	subi	r22, 0xFE	; 254
    18fc:	7f 4f       	sbci	r23, 0xFF	; 255
    18fe:	8f 4f       	sbci	r24, 0xFF	; 255
    1900:	9f 4f       	sbci	r25, 0xFF	; 255
    1902:	af 4f       	sbci	r26, 0xFF	; 255
    1904:	b1 e0       	ldi	r27, 0x01	; 1
    1906:	3e d0       	rcall	.+124    	; 0x1984 <__ultoa_invert+0x9c>
    1908:	b4 e0       	ldi	r27, 0x04	; 4
    190a:	3c d0       	rcall	.+120    	; 0x1984 <__ultoa_invert+0x9c>
    190c:	67 0f       	add	r22, r23
    190e:	78 1f       	adc	r23, r24
    1910:	89 1f       	adc	r24, r25
    1912:	9a 1f       	adc	r25, r26
    1914:	a1 1d       	adc	r26, r1
    1916:	68 0f       	add	r22, r24
    1918:	79 1f       	adc	r23, r25
    191a:	8a 1f       	adc	r24, r26
    191c:	91 1d       	adc	r25, r1
    191e:	a1 1d       	adc	r26, r1
    1920:	6a 0f       	add	r22, r26
    1922:	71 1d       	adc	r23, r1
    1924:	81 1d       	adc	r24, r1
    1926:	91 1d       	adc	r25, r1
    1928:	a1 1d       	adc	r26, r1
    192a:	20 d0       	rcall	.+64     	; 0x196c <__ultoa_invert+0x84>
    192c:	09 f4       	brne	.+2      	; 0x1930 <__ultoa_invert+0x48>
    192e:	68 94       	set
    1930:	3f 91       	pop	r19
    1932:	2a e0       	ldi	r18, 0x0A	; 10
    1934:	26 9f       	mul	r18, r22
    1936:	11 24       	eor	r1, r1
    1938:	30 19       	sub	r19, r0
    193a:	30 5d       	subi	r19, 0xD0	; 208
    193c:	31 93       	st	Z+, r19
    193e:	de f6       	brtc	.-74     	; 0x18f6 <__ultoa_invert+0xe>
    1940:	cf 01       	movw	r24, r30
    1942:	08 95       	ret
    1944:	46 2f       	mov	r20, r22
    1946:	47 70       	andi	r20, 0x07	; 7
    1948:	40 5d       	subi	r20, 0xD0	; 208
    194a:	41 93       	st	Z+, r20
    194c:	b3 e0       	ldi	r27, 0x03	; 3
    194e:	0f d0       	rcall	.+30     	; 0x196e <__ultoa_invert+0x86>
    1950:	c9 f7       	brne	.-14     	; 0x1944 <__ultoa_invert+0x5c>
    1952:	f6 cf       	rjmp	.-20     	; 0x1940 <__ultoa_invert+0x58>
    1954:	46 2f       	mov	r20, r22
    1956:	4f 70       	andi	r20, 0x0F	; 15
    1958:	40 5d       	subi	r20, 0xD0	; 208
    195a:	4a 33       	cpi	r20, 0x3A	; 58
    195c:	18 f0       	brcs	.+6      	; 0x1964 <__ultoa_invert+0x7c>
    195e:	49 5d       	subi	r20, 0xD9	; 217
    1960:	31 fd       	sbrc	r19, 1
    1962:	40 52       	subi	r20, 0x20	; 32
    1964:	41 93       	st	Z+, r20
    1966:	02 d0       	rcall	.+4      	; 0x196c <__ultoa_invert+0x84>
    1968:	a9 f7       	brne	.-22     	; 0x1954 <__ultoa_invert+0x6c>
    196a:	ea cf       	rjmp	.-44     	; 0x1940 <__ultoa_invert+0x58>
    196c:	b4 e0       	ldi	r27, 0x04	; 4
    196e:	a6 95       	lsr	r26
    1970:	97 95       	ror	r25
    1972:	87 95       	ror	r24
    1974:	77 95       	ror	r23
    1976:	67 95       	ror	r22
    1978:	ba 95       	dec	r27
    197a:	c9 f7       	brne	.-14     	; 0x196e <__ultoa_invert+0x86>
    197c:	00 97       	sbiw	r24, 0x00	; 0
    197e:	61 05       	cpc	r22, r1
    1980:	71 05       	cpc	r23, r1
    1982:	08 95       	ret
    1984:	9b 01       	movw	r18, r22
    1986:	ac 01       	movw	r20, r24
    1988:	0a 2e       	mov	r0, r26
    198a:	06 94       	lsr	r0
    198c:	57 95       	ror	r21
    198e:	47 95       	ror	r20
    1990:	37 95       	ror	r19
    1992:	27 95       	ror	r18
    1994:	ba 95       	dec	r27
    1996:	c9 f7       	brne	.-14     	; 0x198a <__ultoa_invert+0xa2>
    1998:	62 0f       	add	r22, r18
    199a:	73 1f       	adc	r23, r19
    199c:	84 1f       	adc	r24, r20
    199e:	95 1f       	adc	r25, r21
    19a0:	a0 1d       	adc	r26, r0
    19a2:	08 95       	ret

000019a4 <_exit>:
    19a4:	f8 94       	cli

000019a6 <__stop_program>:
    19a6:	ff cf       	rjmp	.-2      	; 0x19a6 <__stop_program>
